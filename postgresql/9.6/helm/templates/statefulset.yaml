apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgres.fullname" . }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  serviceName: "{{ .Values.name }}"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "postgres.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: git-cloner
          image: alpine/git
          args:
            - clone
            - --single-branch
            - --
            - https://github.com/alpanachaphalkar/TIBCO-PSC-DB.git
            - /repo
          volumeMounts:
            - mountPath: /repo/postgresql/dbscripts
              name: dbscripts
        - name: volume-mount-hack
          image: busybox:latest
          imagePullPolicy: Never
          command: [ "sh", "-c", "chmod -R 777 /usr/lib/postgresql/9.6/tablespaces  /dbscripts" ]
          volumeMounts:
            - name: tablespaces
              mountPath: /usr/lib/postgresql/9.6/tablespaces
            - name: dbscripts
              mountPath: /dbscripts
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgresql.env.POSTGRES_PASSWORD }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgresql.env.POSTGRES_DB }}"
          envFrom:
            - configMapRef:
                name: psc-db-env-config
          ports:
            - name: http
              containerPort: {{ .Values.postgresql.containerPort }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: tablespaces
              mountPath: /usr/lib/postgresql/9.6/tablespaces
            - name: custom-init-scripts
              mountPath: /docker-entrypoint-initdb.d/
            - name: dbscripts
              mountPath: /dbscripts
      volumes:
        - name: tablespaces
          emptyDir: {}
        - name: dbscripts
          emptyDir: {}
        - name: custom-init-scripts
          configMap:
            name: {{ template "postgresql.initdbScriptsCM" . }}
            defaultMode: 0777