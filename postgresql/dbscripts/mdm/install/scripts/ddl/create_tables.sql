-- Copyright (c) 2000-2009 TIBCO Software Inc. All Rights Reserved.

--  This work is subject  to  U.S. and  international  copyright  laws  and
--     treaties. No part  of  this  work may be  used,  practiced,  performed
--     copied, distributed, revised, modified, translated,  abridged, condensed,
--     expanded,  collected,  compiled,  linked,  recast, transformed or adapted
--     without the prior written consent of TIBCO Software Inc. any use or
--     exploitation of this work without authorization could subject the
--     perpetrator to criminal and civil liability.
--
-- Note   : Please DO NOT edit the script.

--
-- Definition for TABLE ADDRESS:
--

CREATE TABLE ADDRESS
(
  ID          BIGINT,
  OWNERID     BIGINT NOT NULL,
  NAME        VARCHAR(80) NOT NULL,
  STREET      VARCHAR(250),
  CITY        VARCHAR(80),
  REGION      VARCHAR(80),
  COUNTRY     VARCHAR(80),
  POSTALCODE  VARCHAR(30),
  ACTIVE      CHAR(1) NOT NULL,
  MODMEMBERID BIGINT NOT NULL,
  MODDATE     TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION  BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN ADDRESS.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN ADDRESS.OWNERID IS 'Refers to Organization.id';
COMMENT ON COLUMN ADDRESS.NAME IS 'Address Name';
COMMENT ON COLUMN ADDRESS.STREET IS 'Address Information';
COMMENT ON COLUMN ADDRESS.CITY IS 'Address Information';
COMMENT ON COLUMN ADDRESS.REGION IS 'Address Information';
COMMENT ON COLUMN ADDRESS.COUNTRY IS 'Address Information';
COMMENT ON COLUMN ADDRESS.POSTALCODE IS 'Address Information';
COMMENT ON COLUMN ADDRESS.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN ADDRESS.MODMEMBERID IS 'Member who modified the record';
COMMENT ON COLUMN ADDRESS.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN ADDRESS.MODVERSION IS 'Current Version of the entity';

--
-- Definition for TABLE ASSOCDETAIL:
--
       
CREATE TABLE ASSOCDETAIL
(
  ASSOCIATIONID BIGINT,
  NAME          VARCHAR(80),
  DESCRIPTION   VARCHAR(250),
  TYPE          VARCHAR(30),
  IDVALUE       BIGINT,
  CHARVALUE     VARCHAR(4000),
  MODMEMBERID   BIGINT NOT NULL,
  MODDATE       TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION    BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN ASSOCDETAIL.ASSOCIATIONID IS 'Primary Key for Association';
COMMENT ON COLUMN ASSOCDETAIL.NAME IS 'Name Information';
COMMENT ON COLUMN ASSOCDETAIL.DESCRIPTION IS 'Stores description for upto 250 chars';
COMMENT ON COLUMN ASSOCDETAIL.MODMEMBERID IS 'Member who modified the Record';
COMMENT ON COLUMN ASSOCDETAIL.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN ASSOCDETAIL.MODVERSION IS 'Current Version of the Entity';

--
-- Definition for TABLE ASSOCIATION:
--

CREATE TABLE ASSOCIATION
(
  ID           BIGINT,
  ENTERPRISEID BIGINT NOT NULL,
  NAME         VARCHAR(80),
  DESCRIPTION  VARCHAR(250) NOT NULL,
  TYPE         VARCHAR(30) NOT NULL,
  PARENTID     BIGINT NOT NULL,
  CHILDID      BIGINT NOT NULL,
  MODMEMBERID  BIGINT NOT NULL,
  MODDATE      TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION   BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN ASSOCIATION.ID IS 'Primary Key for Association';
COMMENT ON COLUMN ASSOCIATION.ENTERPRISEID IS 'Enterprise who owns the association';
COMMENT ON COLUMN ASSOCIATION.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN ASSOCIATION.PARENTID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN ASSOCIATION.CHILDID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN ASSOCIATION.MODMEMBERID IS 'Member who modified the Record';
COMMENT ON COLUMN ASSOCIATION.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN ASSOCIATION.MODVERSION IS 'Current Version of the Entity';
       
--
-- Definition for TABLE ATTRIBUTEGROUP:
--

CREATE TABLE ATTRIBUTEGROUP
(
  ID          BIGINT,
  NAME        VARCHAR(30),
  DESCRIPTION VARCHAR(250),
  PREDEFINED  CHAR(1),
  OWNERID     BIGINT,
  MODMEMBERID BIGINT DEFAULT 101  NOT NULL,
  MODDATE     TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
  MODVERSION  BIGINT DEFAULT 1  NOT NULL,
  ACTIVE      CHAR(1) DEFAULT 'Y'  NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN ATTRIBUTEGROUP.ID IS 'Unique ID';
COMMENT ON COLUMN ATTRIBUTEGROUP.NAME IS 'Name for the Group';
COMMENT ON COLUMN ATTRIBUTEGROUP.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN ATTRIBUTEGROUP.PREDEFINED IS 'Whether this is used or retired.''Y'' or ''N''';

--
-- Definition for TABLE CATALOG:
--
       
CREATE TABLE CATALOG
(
  ID                     BIGINT,
  MODVERSION             BIGINT,
  SOURCEORGANIZATIONID   BIGINT NOT NULL,
  CTSOURCEORGANIZATIONID BIGINT,
  CATALOGTYPEID          BIGINT,
  NAME                   VARCHAR(80) NOT NULL,
  DESCRIPTION            VARCHAR(250),
  ACTIVE                 CHAR(1) NOT NULL,
  MODMEMBERID            BIGINT NOT NULL,
  MODDATE                TIMESTAMP WITHOUT TIME ZONE,
  SYSTEMGENERATED        CHAR(1) NOT NULL,
  PRODUCTCOUNT           BIGINT,
  LOGFILE                VARCHAR(255),
  TYPE                   VARCHAR(80) NOT NULL,
  TABLENAME              VARCHAR(80),
  DISPLAYNAME            VARCHAR(80) NOT NULL,
  ATTRIBUTEHISTORY       CHAR(1),
  PRECEDENCEMANAGEMENT   CHAR(1)
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOG.ID IS 'Unique ID for the Catalog derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN CATALOG.MODVERSION IS 'Current Version of the Entity';
COMMENT ON COLUMN CATALOG.SOURCEORGANIZATIONID IS 'Stores the Organization ID';
COMMENT ON COLUMN CATALOG.CTSOURCEORGANIZATIONID IS 'Organization ID of Catalog Type';
COMMENT ON COLUMN CATALOG.CATALOGTYPEID IS 'The ID from Catalogtype table';
COMMENT ON COLUMN CATALOG.NAME IS 'Name of the Catalog';
COMMENT ON COLUMN CATALOG.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CATALOG.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CATALOG.MODMEMBERID IS 'Member who modified the record';
COMMENT ON COLUMN CATALOG.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CATALOG.SYSTEMGENERATED IS 'Flag';
COMMENT ON COLUMN CATALOG.PRODUCTCOUNT IS 'Count';
COMMENT ON COLUMN CATALOG.LOGFILE IS 'Log File name and location';
COMMENT ON COLUMN CATALOG.TYPE IS 'differentiates the Master Catalog and Output Catalog';
COMMENT ON COLUMN CATALOG.TABLENAME IS 'Name of the table where records are stored';
COMMENT ON COLUMN CATALOG.DISPLAYNAME IS 'Display Name for the Catalog';
COMMENT ON COLUMN CATALOG.ATTRIBUTEHISTORY IS 'Flag to indicate if attribute history is enabled for the catalog';
COMMENT ON COLUMN CATALOG.PRECEDENCEMANAGEMENT IS 'Flag to indicate if Precedence Management is enabled for the Catalog';

--
-- Definition for TABLE CATALOGATTRIBUTE:
--

CREATE TABLE CATALOGATTRIBUTE
(
  CATALOGID                  BIGINT,
  ID                         BIGINT,
  CATALOGVERSIONNUMBER       BIGINT DEFAULT 1 ,
  SOURCEORGANIZATIONID       BIGINT NOT NULL,
  CATALOGATTRIBUTEDATATYPEID BIGINT NOT NULL,
  NAME                       VARCHAR(30) NOT NULL,
  DESCRIPTION                VARCHAR(4000),
  ATTRIBUTELENGTH            BIGINT NOT NULL,
  ATTRIBUTEPOSITION          BIGINT NOT NULL,
  REQUIRED                   CHAR(1) NOT NULL,
  ACTIVE                     CHAR(1) NOT NULL,
  MODMEMBERID                BIGINT NOT NULL,
  MODDATE                    TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION                 BIGINT NOT NULL,
  DBCOLUMNNAME               VARCHAR(30),
  CATEGORY                   VARCHAR(80),
  UNIQUEVALUE                CHAR(1) NOT NULL,
  PREDEFINED                 CHAR(1),
  GROUPID                    BIGINT,
  NUMBEROFATTRIBUTES         BIGINT,
  DISPLAYNAME                VARCHAR(80) NOT NULL,
  HELP                       VARCHAR(4000),
  SEARCHABLE                 CHAR(1) DEFAULT 'Y' ,
  DISPLAYINRECORDLIST        CHAR(1),
  QUICKVIEWABLE              CHAR(1) DEFAULT 'N' ,
  MULTIVALUE                 CHAR (1) DEFAULT 'N',
  TABLENAME                  VARCHAR(80),
  PARTITIONKEY               CHAR(1) DEFAULT 'N' NOT NULL,
  SHAREDTABLE                CHAR(1) DEFAULT 'N' NOT NULL,
  FLEXIBLE                   CHAR (1) DEFAULT 'N'
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGATTRIBUTE.CATALOGID IS 'Stores the Catalog ID';
COMMENT ON COLUMN CATALOGATTRIBUTE.ID IS 'Unique ID for CatalogAttribute derived from MQ_SEQUENCE_CATALOG';
COMMENT ON COLUMN CATALOGATTRIBUTE.CATALOGVERSIONNUMBER IS 'Current Version of the Catalog';
COMMENT ON COLUMN CATALOGATTRIBUTE.SOURCEORGANIZATIONID IS 'Stores the Organization ID';
COMMENT ON COLUMN CATALOGATTRIBUTE.CATALOGATTRIBUTEDATATYPEID IS 'Value 1 represents  Date, 2 represents  Integer, 3 represents NUMBER and 4 represents VARCHAR';
COMMENT ON COLUMN CATALOGATTRIBUTE.NAME IS 'Name of the Catalog Attribute';
COMMENT ON COLUMN CATALOGATTRIBUTE.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CATALOGATTRIBUTE.ATTRIBUTELENGTH IS 'The max length of the attribute defined';
COMMENT ON COLUMN CATALOGATTRIBUTE.ATTRIBUTEPOSITION IS 'Position of the Attribute based on Catalogtype';
COMMENT ON COLUMN CATALOGATTRIBUTE.REQUIRED IS 'Flag';
COMMENT ON COLUMN CATALOGATTRIBUTE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CATALOGATTRIBUTE.MODMEMBERID IS 'Member who modified the record';
COMMENT ON COLUMN CATALOGATTRIBUTE.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CATALOGATTRIBUTE.MODVERSION IS 'Current Version of the entity';
COMMENT ON COLUMN CATALOGATTRIBUTE.DBCOLUMNNAME IS 'Mapping Column Name';
COMMENT ON COLUMN CATALOGATTRIBUTE.CATEGORY IS 'To which category the attribute belongs to.';
COMMENT ON COLUMN CATALOGATTRIBUTE.UNIQUEVALUE IS 'Flag';
COMMENT ON COLUMN CATALOGATTRIBUTE.PREDEFINED IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CATALOGATTRIBUTE.GROUPID IS 'Indicates the attribute group to which this attribute belongs.';
COMMENT ON COLUMN CATALOGATTRIBUTE.QUICKVIEWABLE is 'Indicates if this attribute is to be shown in quick view' ;
COMMENT ON COLUMN CATALOGATTRIBUTE.MULTIVALUE is 'Indicates if this attribute is a multi value attribute' ;
COMMENT ON COLUMN CATALOGATTRIBUTE.TABLENAME IS 'Name of the table where multi value attribute values are stored';
COMMENT ON COLUMN CATALOGATTRIBUTE.PARTITIONKEY IS 'Flag to indicate the attribute is a partitioning key';
COMMENT ON COLUMN CATALOGATTRIBUTE.SHAREDTABLE IS 'Indicates if multivalue table is shared';


--
-- Definition for TABLE CATALOGATTRIBUTEDATATYPE:
--
     
CREATE TABLE CATALOGATTRIBUTEDATATYPE
(
  ID             BIGINT,
  NAME           VARCHAR(80) NOT NULL,
  DESCRIPTION    VARCHAR(250),
  NATIVEDATATYPE VARCHAR(80) NOT NULL,
  ACTIVE         CHAR(1) NOT NULL,
  MODMEMBERID    BIGINT NOT NULL,
  MODDATE        TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION     BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGATTRIBUTEDATATYPE.ID IS 'Unique ID';
COMMENT ON COLUMN CATALOGATTRIBUTEDATATYPE.NAME IS 'Name of the Attributedatatype';
COMMENT ON COLUMN CATALOGATTRIBUTEDATATYPE.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CATALOGATTRIBUTEDATATYPE.NATIVEDATATYPE IS 'Acutal datatype description';
COMMENT ON COLUMN CATALOGATTRIBUTEDATATYPE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CATALOGATTRIBUTEDATATYPE.MODMEMBERID IS 'Member who modified the record';
COMMENT ON COLUMN CATALOGATTRIBUTEDATATYPE.MODDATE IS 'Date of modification';
COMMENT ON COLUMN CATALOGATTRIBUTEDATATYPE.MODVERSION IS 'Current version of the entity';

--
-- Definition for TABLE CATALOGEDITION:
--
       
CREATE TABLE CATALOGEDITION
(
       ID                              BIGINT,
       MODVERSION                      BIGINT,
       SOURCEORGANIZATIONID            BIGINT NOT NULL,
       CATALOGID                       BIGINT NOT NULL,
       NAME                            VARCHAR(80) NOT NULL,
       DESCRIPTION                     VARCHAR(250),
       DESTINATIONORGANIZATIONID       BIGINT,
       USINGORGANIZATIONID             BIGINT,
       CATALOGFILENAME                 VARCHAR(256),
       ACTIVE                          CHAR(1) NOT NULL,
       MODMEMBERID                     BIGINT NOT NULL,
       MODDATE                         TIMESTAMP WITHOUT TIME ZONE,
       PRODUCTCOUNT                    BIGINT,
       LASTPUBLISHEDDATE               TIMESTAMP WITHOUT TIME ZONE,
       LASTPUBLISHSTATUS               VARCHAR(80),
       ZIPOUTPUT                       CHAR(1),
       MCVERSIONDATE                   TIMESTAMP WITHOUT TIME ZONE,
       INCREMENTAL                     CHAR(1),
       ITEMADD                         CHAR(1),
       ITEMPUBLISH                     CHAR(1),
       SKIPIDENTIFYPROTOCOLOPS		   CHAR(1),
       DATATRANSFER					   CHAR(1),
       INCREMENTALCHILDREN		       CHAR(1),
       INITIALLOAD                     CHAR(1),
       PRIVATE                         CHAR(1),
       ITEMCORRECTION                  CHAR(1) NOT NULL,
       SELECTIONTYPE                   VARCHAR(80) NOT NULL,
       OUTPUTDATEFORMAT                VARCHAR(80),
       OUTPUTDECIMALSYMBOL             VARCHAR(80),
       THOUSANDSEPARATOR               VARCHAR(80),
       NAMEDVERSIONID                  BIGINT,
       DELIVERTO                       VARCHAR(80) NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGEDITION.ID IS 'Unique ID derived from MQ_SEQUENCE_1.';
COMMENT ON COLUMN CATALOGEDITION.MODVERSION IS 'Current Version of the entity';
COMMENT ON COLUMN CATALOGEDITION.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CATALOGEDITION.CATALOGID IS 'Catalog ID';
COMMENT ON COLUMN CATALOGEDITION.NAME IS 'Name of the Catalog Edition';
COMMENT ON COLUMN CATALOGEDITION.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CATALOGEDITION.DESTINATIONORGANIZATIONID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN CATALOGEDITION.USINGORGANIZATIONID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN CATALOGEDITION.CATALOGFILENAME IS 'Unused';
COMMENT ON COLUMN CATALOGEDITION.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CATALOGEDITION.MODMEMBERID IS 'Member who modified the Record';
COMMENT ON COLUMN CATALOGEDITION.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CATALOGEDITION.PRODUCTCOUNT IS 'No of Products';
COMMENT ON COLUMN CATALOGEDITION.LASTPUBLISHEDDATE IS 'Last Date of Publish';
COMMENT ON COLUMN CATALOGEDITION.LASTPUBLISHSTATUS IS 'Status of the Publish';
COMMENT ON COLUMN CATALOGEDITION.ZIPOUTPUT IS 'Flag';
COMMENT ON COLUMN CATALOGEDITION.MCVERSIONDATE IS 'Master Catalog Version Date';
COMMENT ON COLUMN CATALOGEDITION.INCREMENTAL IS 'Whether it is Incremental or Cummulative';
COMMENT ON COLUMN CATALOGEDITION.ITEMADD IS 'Item addition Flag';
COMMENT ON COLUMN CATALOGEDITION.ITEMPUBLISH IS 'Item Publish Flag';
COMMENT ON COLUMN CATALOGEDITION.SKIPIDENTIFYPROTOCOLOPS IS 'Skip Identify Protocol Operations Flag';
COMMENT ON COLUMN CATALOGEDITION.DATATRANSFER IS 'Indicates that synchronization/publish is done for Data Transfer';
COMMENT ON COLUMN CATALOGEDITION.INCREMENTALCHILDREN IS 'Incremental Children or Relationships';
COMMENT ON COLUMN CATALOGEDITION.INITIALLOAD IS 'Initial Load Flag';
COMMENT ON COLUMN CATALOGEDITION.PRIVATE IS 'Private Flag';
COMMENT ON COLUMN CATALOGEDITION.ITEMCORRECTION IS 'Item Correction Flag';
COMMENT ON COLUMN CATALOGEDITION.SELECTIONTYPE IS 'Latest or not ?';
COMMENT ON COLUMN CATALOGEDITION.OUTPUTDATEFORMAT IS 'Reserved for future use: Indicates the DATE format in which DATEs should be output';
COMMENT ON COLUMN CATALOGEDITION.OUTPUTDECIMALSYMBOL IS 'Reserved for future use: Indicates the decimal symbol to be used for output';
COMMENT ON COLUMN CATALOGEDITION.THOUSANDSEPARATOR IS 'delimited to be used for thousand separator like ","';
COMMENT ON COLUMN CATALOGEDITION.NAMEDVERSIONID IS 'Selected named version of master catalog';
COMMENT ON COLUMN CATALOGEDITION.DELIVERTO IS 'Contain either BUYERORMARKETPLACE / MARKETPLACE / BUYER';

--
-- Definition for TABLE CATALOGEDITIONDETAIL:
--
  
CREATE TABLE CATALOGEDITIONDETAIL
(
  NAME                  VARCHAR(80),
  CATALOGEDITIONID      BIGINT,
  CATALOGEDITIONVERSION BIGINT,
  SEQUENCE              BIGINT,
  VALUETYPE             VARCHAR(80),
  VALUE                 VARCHAR(4000) NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGEDITIONDETAIL.CATALOGEDITIONID IS 'Unique ID derived from MQ_SEQUENCE_1.';
COMMENT ON COLUMN CATALOGEDITIONDETAIL.CATALOGEDITIONVERSION IS 'Current Version of the entity';

--
-- Definition for TABLE CATALOGEDITIONHEADER:
--

CREATE TABLE CATALOGEDITIONHEADER
(
       CATALOGEDITIONID                BIGINT,
       CATALOGEDITIONVERSIONNUMBER     BIGINT,
       SOURCEORGANIZATIONID            BIGINT NOT NULL,
       CATALOGID                       BIGINT NOT NULL,
       PUBLISHVERSION                  BIGINT NOT NULL,
       PUBLISHDATE                     TIMESTAMP WITHOUT TIME ZONE,
       VALIDFROMDATE                   TIMESTAMP WITHOUT TIME ZONE,
       VALIDTODATE                     TIMESTAMP WITHOUT TIME ZONE,
       SUPPLIERDOMAIN                  VARCHAR(80),
       CLASSIFICATIONSCHEME            VARCHAR(80),
       DEFAULTLANGUAGE                 VARCHAR(80),
       DEFAULTCURRENCY                 VARCHAR(80),
       UNUOM                           CHAR(1),
       CHARSET                         VARCHAR(80),
       REPLACEMENT                     CHAR(1) NOT NULL,
       PRICEUPDATE                     CHAR(1) NOT NULL,
       SHORTDESCRIPTION                VARCHAR(80),
       LONGDESCRIPTION                 VARCHAR(250),
       DELIVERCATALOG                  CHAR(1),
       APPLYFEDCUTOFF                  CHAR(1) default 'N' ,
       FEDCUTOFF                       BIGINT default 0 ,
       FEDOPTION                       CHAR(1) default 'N'     
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGEDITIONHEADER.CATALOGEDITIONID IS 'ID derived from Catalog Edition Table';
COMMENT ON COLUMN CATALOGEDITIONHEADER.CATALOGEDITIONVERSIONNUMBER IS 'Current Version of the entity';
COMMENT ON COLUMN CATALOGEDITIONHEADER.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CATALOGEDITIONHEADER.CATALOGID IS 'Catalog ID';
COMMENT ON COLUMN CATALOGEDITIONHEADER.PUBLISHVERSION IS 'Current Version of Publish';
COMMENT ON COLUMN CATALOGEDITIONHEADER.PUBLISHDATE IS 'When it was published.';
COMMENT ON COLUMN CATALOGEDITIONHEADER.VALIDFROMDATE IS 'Date from which this catalog edition is effective';
COMMENT ON COLUMN CATALOGEDITIONHEADER.VALIDTODATE IS 'Date after which this catalog edition is not effective';
COMMENT ON COLUMN CATALOGEDITIONHEADER.SUPPLIERDOMAIN IS 'Unused';
COMMENT ON COLUMN CATALOGEDITIONHEADER.CLASSIFICATIONSCHEME IS 'Name of CS';
COMMENT ON COLUMN CATALOGEDITIONHEADER.DEFAULTLANGUAGE IS 'Language Info';
COMMENT ON COLUMN CATALOGEDITIONHEADER.DEFAULTCURRENCY IS 'Currency Info';
COMMENT ON COLUMN CATALOGEDITIONHEADER.UNUOM IS 'Indicates if the UOM in output format is in UN standard, relevent for CIF and CXML formats only.';
COMMENT ON COLUMN CATALOGEDITIONHEADER.CHARSET IS 'Character Set info';
COMMENT ON COLUMN CATALOGEDITIONHEADER.REPLACEMENT IS 'Unused';
COMMENT ON COLUMN CATALOGEDITIONHEADER.PRICEUPDATE IS 'Indicates if this catalog is for updating price only, relevent for CXML format only.';
COMMENT ON COLUMN CATALOGEDITIONHEADER.SHORTDESCRIPTION IS 'Stores a description of upto 80 chars';
COMMENT ON COLUMN CATALOGEDITIONHEADER.LONGDESCRIPTION IS 'Stores description for upto 250 chars';
COMMENT ON COLUMN CATALOGEDITIONHEADER.DELIVERCATALOG IS 'Flag';
COMMENT ON COLUMN CATALOGEDITIONHEADER.APPLYFEDCUTOFF IS 'Flag whether fedoffcutoff will be applied ';
COMMENT ON COLUMN CATALOGEDITIONHEADER.FEDCUTOFF IS 'Cutoff days for fed records till which export will be done';
COMMENT ON COLUMN CATALOGEDITIONHEADER.FEDOPTION IS 'Option to indicate current,futureeffective or both type of records';

--
-- Definition for TABLE CATALOGEDITIONPARTY:
--

CREATE TABLE CATALOGEDITIONPARTY
(
  CATALOGEDITIONID            BIGINT,
  CATALOGEDITIONVERSIONNUMBER BIGINT,
  PARTYORGANIZATIONID         BIGINT,
  SOURCEORGANIZATIONID        BIGINT NOT NULL,
  CATALOGID                   BIGINT NOT NULL,
  TRANSPORTPROTOCOL           VARCHAR(80) NOT NULL,
  TRANSPORTPROTOCOLADDRESSID  BIGINT,
  ACTIVE                      CHAR(1) NOT NULL,
  MODMEMBERID                 BIGINT NOT NULL,
  MODDATE                     TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION                  BIGINT NOT NULL
)
;

COMMENT ON COLUMN CATALOGEDITIONPARTY.CATALOGEDITIONID IS 'ID derived from Catalog Edition Table';
COMMENT ON COLUMN CATALOGEDITIONPARTY.CATALOGEDITIONVERSIONNUMBER IS 'Catalog Edition Version NUMBER';
COMMENT ON COLUMN CATALOGEDITIONPARTY.PARTYORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CATALOGEDITIONPARTY.SOURCEORGANIZATIONID IS 'Source Organization ID';
COMMENT ON COLUMN CATALOGEDITIONPARTY.CATALOGID IS 'Catalog ID';
COMMENT ON COLUMN CATALOGEDITIONPARTY.TRANSPORTPROTOCOL IS 'Protocol Info';
COMMENT ON COLUMN CATALOGEDITIONPARTY.TRANSPORTPROTOCOLADDRESSID IS 'Either of FTP or Email ID. Used to send the catalog to buyer.';
COMMENT ON COLUMN CATALOGEDITIONPARTY.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CATALOGEDITIONPARTY.MODMEMBERID IS 'Member who modified the record';
COMMENT ON COLUMN CATALOGEDITIONPARTY.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CATALOGEDITIONPARTY.MODVERSION IS 'Current Version of the Entity';

--
-- Definition for TABLE CATALOGEDITIONSTEP:
--
     
CREATE TABLE CATALOGEDITIONSTEP
(
  CATALOGEDITIONID            BIGINT,
  CATALOGEDITIONVERSIONNUMBER BIGINT,
  STEPNUMBER                  BIGINT,
  ID                          BIGINT NOT NULL,
  SOURCEORGANIZATIONID        BIGINT NOT NULL,
  CATALOGID                   BIGINT NOT NULL,
  STEPTYPE                    VARCHAR(80) NOT NULL,
  STEPVALUE                   BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGEDITIONSTEP.CATALOGEDITIONID IS 'ID derived from Catalog Edition Table';
COMMENT ON COLUMN CATALOGEDITIONSTEP.CATALOGEDITIONVERSIONNUMBER IS 'Current Version of the entity';
COMMENT ON COLUMN CATALOGEDITIONSTEP.STEPNUMBER IS 'Seqential Step NUMBER based on Step Type';
COMMENT ON COLUMN CATALOGEDITIONSTEP.ID IS 'Id derived from the sequence';
COMMENT ON COLUMN CATALOGEDITIONSTEP.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CATALOGEDITIONSTEP.CATALOGID IS 'ID from Catalog Table';
COMMENT ON COLUMN CATALOGEDITIONSTEP.STEPTYPE IS 'Can be LOAD / SUBSET / INCLUDE SCHEMA / PUBLISH';
COMMENT ON COLUMN CATALOGEDITIONSTEP.STEPVALUE IS 'The object id for the step. I.e. subset ID for SUBSET step.';

--
-- Definition for TABLE CATALOGFORMAT:
--
       
CREATE TABLE CATALOGFORMAT
(
  ID          BIGINT,
  NAME        VARCHAR(80) NOT NULL,
  DESCRIPTION VARCHAR(250),
  ACTIVE      CHAR(1) NOT NULL,
  MODMEMBERID BIGINT NOT NULL,
  MODDATE     TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION  BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGFORMAT.ID IS 'Unique ID for catalog format';
COMMENT ON COLUMN CATALOGFORMAT.NAME IS 'Name of the Catalog Format';
COMMENT ON COLUMN CATALOGFORMAT.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CATALOGFORMAT.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CATALOGFORMAT.MODMEMBERID IS 'Corresponds to 1 for Seed Data';
COMMENT ON COLUMN CATALOGFORMAT.MODDATE IS 'System Date';
COMMENT ON COLUMN CATALOGFORMAT.MODVERSION IS '0 for Seed Data';

--
-- Definition for TABLE CATALOGINPUTMAP:
--

CREATE TABLE CATALOGINPUTMAP
(
  ID                   BIGINT,
  SOURCEORGANIZATIONID BIGINT NOT NULL,
  CATALOGID            BIGINT NOT NULL,
  NAME                 VARCHAR(80) NOT NULL,
  DESCRIPTION          VARCHAR(250),
  COMMONKEY            VARCHAR(255),
  TABLENAME            VARCHAR(80),
  ACTIVE               CHAR(1) NOT NULL,
  MODMEMBERID          BIGINT NOT NULL,
  MODDATE              TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION           BIGINT NOT NULL,
  SOURCEID             VARCHAR(80),
  INCREMENTAL          CHAR(1) default 'Y' not null ,
  MERGEDATAFLAG        CHAR(1) default 'Y' not null ,
  APPROVALOPTION       CHAR(1) default 'D' not null ,
  FRESHDATA            CHAR(1) default 'N' ,
  LOADERMODE           VARCHAR(80),
  ORDERBY           VARCHAR(4000)
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGINPUTMAP.ID IS 'ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN CATALOGINPUTMAP.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CATALOGINPUTMAP.CATALOGID IS 'ID derived from Catalog ID';
COMMENT ON COLUMN CATALOGINPUTMAP.NAME IS 'Name of the Input Map';
COMMENT ON COLUMN CATALOGINPUTMAP.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CATALOGINPUTMAP.COMMONKEY IS 'If more than one data source is used, this key is used to join these data sources.';
COMMENT ON COLUMN CATALOGINPUTMAP.TABLENAME IS 'Stores the Table Name';
COMMENT ON COLUMN CATALOGINPUTMAP.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CATALOGINPUTMAP.MODMEMBERID IS 'Member who modified the Record';
COMMENT ON COLUMN CATALOGINPUTMAP.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CATALOGINPUTMAP.MODVERSION IS 'Current Version of the entity';
COMMENT ON COLUMN CatalogInputMap.SOURCEID is 'Source of data';
COMMENT ON COLUMN CatalogInputMap.APPROVALOPTION is 'Approval option selected. D- directload, S - Split/no approval, A - Split/Approval';
COMMENT ON COLUMN CatalogInputMap.MERGEDATAFLAG is 'Flag to indicate if merge should be done.';
COMMENT ON COLUMN CatalogInputMap.INCREMENTAL is 'Flag to indicate if import is incremental or full.';
COMMENT ON COLUMN CATALOGINPUTMAP.freshdata IS 'Flag to declear DBLoader load as fresh data, initial version records. ';
COMMENT ON COLUMN CATALOGINPUTMAP.LOADERMODE IS 'DBLoader mode. Records/Relationship';
COMMENT ON COLUMN CATALOGINPUTMAP.ORDERBY IS 'Order in which the incoming data needs to be processed for duplicate data';

--
-- Definition for TABLE CATALOGINPUTMAPATTRIBUTE:
--

CREATE TABLE CATALOGINPUTMAPATTRIBUTE
(
  CATALOGINPUTMAPID      BIGINT,
  CATALOGATTRIBUTEID     BIGINT,
  CATALOGINPUTMAPVERSION BIGINT DEFAULT 0 NOT NULL,
  SOURCEORGANIZATIONID   BIGINT NOT NULL,
  CATALOGID              BIGINT NOT NULL,
  SOURCEEXPRESSION       VARCHAR(4000),
  NULLIFBLANK            CHAR(1),
  SEQUENCE               BIGINT DEFAULT 1
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGINPUTMAPATTRIBUTE.CATALOGINPUTMAPID IS 'Unique ID for Inputmapattribute';
COMMENT ON COLUMN CATALOGINPUTMAPATTRIBUTE.CATALOGATTRIBUTEID IS 'ID derived from Catalog Attribute table';
COMMENT ON COLUMN CATALOGINPUTMAPATTRIBUTE.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CATALOGINPUTMAPATTRIBUTE.CATALOGID IS 'ID derieved from Catalog Table';
COMMENT ON COLUMN CATALOGINPUTMAPATTRIBUTE.SOURCEEXPRESSION IS 'Mapping expression for a column';
COMMENT ON COLUMN CATALOGINPUTMAPATTRIBUTE.SEQUENCE IS 'Sequence of the Inputmapattribute';
COMMENT ON COLUMN CATALOGINPUTMAPATTRIBUTE.CATALOGINPUTMAPVERSION IS 'Version of input map';

--
-- Definition for TABLE CATALOGINPUTMAPFRAGMENT:
--
       
CREATE TABLE CATALOGINPUTMAPFRAGMENT
(
  CATALOGINPUTMAPID         BIGINT,
  CATALOGINPUTMAPVERSION    BIGINT DEFAULT 0 NOT NULL,
  DATAFRAGMENTID            BIGINT,
  SOURCEORGANIZATIONID      BIGINT NOT NULL,
  CATALOGID                 BIGINT NOT NULL,
  PRIMARYSOURCE             CHAR(1)
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGINPUTMAPFRAGMENT.CATALOGINPUTMAPID IS 'Input Map''s ID';
COMMENT ON COLUMN CATALOGINPUTMAPFRAGMENT.DATAFRAGMENTID IS 'ID of Datafragment';
COMMENT ON COLUMN CATALOGINPUTMAPFRAGMENT.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CATALOGINPUTMAPFRAGMENT.CATALOGID IS 'Catalog ID';
COMMENT ON COLUMN CATALOGINPUTMAPFRAGMENT.PRIMARYSOURCE IS 'Reserved for future use';
COMMENT ON COLUMN CATALOGINPUTMAPFRAGMENT.CATALOGINPUTMAPVERSION IS 'Version of input map';

--
-- Definition for TABLE CATALOGTYPE:
--
       
CREATE TABLE CATALOGTYPE
(
  ID                           BIGINT,
  SOURCEORGANIZATIONID         BIGINT NOT NULL,
  NAME                         VARCHAR(80) NOT NULL,
  DESCRIPTION                  VARCHAR(250),
  FIXEDLENGTH                  CHAR(1),
  HEADERREQUIRED               CHAR(1) NOT NULL,
  DELIMITER                    BIGINT,
  ACTIVE                       CHAR(1) NOT NULL,
  MODMEMBERID                  BIGINT NOT NULL,
  MODDATE                      TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION                   BIGINT NOT NULL,
  TEXTQUALIFIER                CHAR(1),
  PARENTCTID                   BIGINT,
  PARENTCTSOURCEORGANIZATIONID BIGINT,
  TABLENAME                    VARCHAR(80),
  SKIPNEWATTRIBUTEASCHANGE		CHAR(1) default 'N',
  DATEFORMAT 				   VARCHAR(80) DEFAULT 'DD/MM/YY' NOT NULL,
  TIMESTAMPFORMAT              VARCHAR(80) DEFAULT 'YYYY-MM-DD HH:mm:ss.S' NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGTYPE.ID IS 'Unique Catalog Type ID';
COMMENT ON COLUMN CATALOGTYPE.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CATALOGTYPE.NAME IS 'Name of Catalog Type like UCCNET / CXML etc.';
COMMENT ON COLUMN CATALOGTYPE.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CATALOGTYPE.FIXEDLENGTH IS 'Flag to indicate if the record has fixed length';
COMMENT ON COLUMN CATALOGTYPE.HEADERREQUIRED IS 'Header Flag';
COMMENT ON COLUMN CATALOGTYPE.DELIMITER IS 'Indicates the character to be used to delimit.';
COMMENT ON COLUMN CATALOGTYPE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CATALOGTYPE.MODMEMBERID IS 'Member who modifed the Record.';
COMMENT ON COLUMN CATALOGTYPE.MODDATE IS 'Date of Modification.';
COMMENT ON COLUMN CATALOGTYPE.MODVERSION IS 'Current version of the Entity.';
COMMENT ON COLUMN CATALOGTYPE.TEXTQUALIFIER IS 'Indicates the character to be used to quote character strings.';
COMMENT ON COLUMN CATALOGTYPE.PARENTCTID IS 'Parent Catalog Type ID';
COMMENT ON COLUMN CATALOGTYPE.PARENTCTSOURCEORGANIZATIONID IS 'Parent Catalog Type Org id.';
COMMENT ON COLUMN CATALOGTYPE.TABLENAME IS 'Name of the table where records are stored';
COMMENT ON COLUMN CATALOGTYPE.SKIPNEWATTRIBUTEASCHANGE IS 'If new attributes should be considered for change determination';
COMMENT ON COLUMN CATALOGTYPE.DATEFORMAT IS 'Date foramt to export date attributes';



--
-- Definition for TABLE CATALOGTYPEATTRIBUTE:
--
  
CREATE TABLE CATALOGTYPEATTRIBUTE
(
  CATALOGTYPEID              BIGINT,
  ID                         BIGINT,
  SOURCEORGANIZATIONID       BIGINT NOT NULL,
  NAME                       VARCHAR(30) NOT NULL,
  DESCRIPTION                VARCHAR(4000),
  CATALOGATTRIBUTEDATATYPEID BIGINT NOT NULL,
  ATTRIBUTELENGTH            BIGINT,
  ATTRIBUTEPOSITION          BIGINT,
  REQUIRED                   CHAR(1),
  DBCOLUMNNAME               VARCHAR(30),
  CATEGORY                   VARCHAR(80),
  UNIQUEVALUE                CHAR(1) NOT NULL,
  MAPPINGID                  BIGINT,
  GROUPID                    BIGINT,
  DISPLAYNAME                VARCHAR(80),
  SEARCHABLE                 CHAR(1) DEFAULT 'N' ,
  DISPLAYINRECORDLIST        CHAR(1) DEFAULT 'N' ,
  ACTIVE                     CHAR(1) DEFAULT 'Y',
  VALUEISLIST					 CHAR(1) DEFAULT 'N',
  MAXOCCURANCES					 BIGINT,
  SORTORDER					 VARCHAR(4) DEFAULT 'NONE',
  CATALOGTYPEVERSION		BIGINT DEFAULT 1,
  MODVERSION	BIGINT DEFAULT 1  
)
;
-- Add comments to the columns
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.CATALOGTYPEID IS 'Unique Catalog Type ID';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.ID IS 'ID ranging from 1 to 150 depending on the attribute(Composite Key)';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.NAME IS 'Name of the CTA';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.CATALOGATTRIBUTEDATATYPEID IS 'Catalog Attribute''s ID';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.ATTRIBUTELENGTH IS 'Length of CTA';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.ATTRIBUTEPOSITION IS 'Location';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.REQUIRED IS 'Flag';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.DBCOLUMNNAME IS 'Mapping Column Name';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.CATEGORY IS 'Which Category it belongs to';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.UNIQUEVALUE IS 'Flag';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.MAPPINGID IS 'Mapped id of an attribute';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.GROUPID IS 'Indicates the attribute group to which this attribute belongs.';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.DISPLAYNAME IS 'Display Name of the attribute.';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.SEARCHABLE IS 'Indicates if the attribute is Searchable in Synchronization screen.';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.DISPLAYINRECORDLIST IS 'Indicates if the attribute is displayed in Synchronization screen.';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.VALUEISLIST IS 'This attribute will contain a list of delimited values or not';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.MAXOCCURANCES IS 'If this attribute is a list, then how many values of multivalue attribute should be exported';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.SORTORDER IS 'If this attribute is a list, then what is the sort order to pick the values Asc/Dsc/None';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.CATALOGTYPEVERSION IS 'CatalogType version number';
COMMENT ON COLUMN CATALOGTYPEATTRIBUTE.MODVERSION IS 'CatalogTypeAttribute Version number';
--
-- Definition for TABLE CLASSIFICATIONATTRIBUTE:
--

CREATE TABLE CLASSIFICATIONATTRIBUTE
(
  CLASSIFICATIONSCHEMEID BIGINT,
  CSVERSIONNUMBER        BIGINT,
  HIERARCHYPOSITION      BIGINT,
  SOURCEORGANIZATIONID   BIGINT NOT NULL,
  CATALOGID              BIGINT,
  SOURCEEXPRESSION       VARCHAR(4000),
  ACTIVE                 CHAR(1) NOT NULL,
  MODMEMBERID            BIGINT NOT NULL,
  MODDATE                TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION             BIGINT NOT NULL,
  CATALOGATTRIBUTEID     BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.CLASSIFICATIONSCHEMEID IS 'ID of Classification Scheme';
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.CSVERSIONNUMBER IS 'Classification Scheme''s Version No.';
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.HIERARCHYPOSITION IS 'Indicates the position of the classification code extracted based on this classification code attribute.';
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.CATALOGID IS 'Catalog ID';
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.SOURCEEXPRESSION IS 'The expression to extract classification code';
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.MODDATE IS 'Date of Modification.';
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN CLASSIFICATIONATTRIBUTE.CATALOGATTRIBUTEID IS 'ID of catalog attribute, if mapped' ;

--
-- Definition for TABLE CLASSIFICATIONCODE:
--

CREATE TABLE CLASSIFICATIONCODE
(
  ID                     BIGINT,
  CSVERSIONNUMBER        BIGINT,
  SOURCEORGANIZATIONID   BIGINT NOT NULL,
  CLASSIFICATIONSCHEMEID BIGINT NOT NULL,
  CLASSIFICATIONCODE     VARCHAR(250) NOT NULL,
  NAME                   VARCHAR(250) NOT NULL,
  DESCRIPTION            VARCHAR(4000),
  ACTIVE                 CHAR(1) NOT NULL,
  MODMEMBERID            BIGINT NOT NULL,
  MODDATE                TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION             BIGINT NOT NULL,
  CATALOGID              BIGINT,
  CLEVEL              BIGINT DEFAULT -1
)
;
-- Add comments to the columns
COMMENT ON COLUMN CLASSIFICATIONCODE.ID IS 'Unique ID';
COMMENT ON COLUMN CLASSIFICATIONCODE.CSVERSIONNUMBER IS 'Classification Scheme Version NUMBER';
COMMENT ON COLUMN CLASSIFICATIONCODE.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CLASSIFICATIONCODE.CLASSIFICATIONSCHEMEID IS 'CS ID';
COMMENT ON COLUMN CLASSIFICATIONCODE.CLASSIFICATIONCODE IS 'Classification Code Value';
COMMENT ON COLUMN CLASSIFICATIONCODE.NAME IS 'Name of Classification Code';
COMMENT ON COLUMN CLASSIFICATIONCODE.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CLASSIFICATIONCODE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CLASSIFICATIONCODE.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN CLASSIFICATIONCODE.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CLASSIFICATIONCODE.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN CLASSIFICATIONCODE.CATALOGID IS 'Catalog ID';

--
-- Definition for TABLE CLASSIFICATIONCODEATTRIBUTE:
--
 
CREATE TABLE CLASSIFICATIONCODEATTRIBUTE
(
  ID                   BIGINT,
  CLASSIFICATIONCODEID BIGINT,
  CSVERSIONNUMBER      BIGINT,
  ATTRIBUTEDATATYPEID  BIGINT NOT NULL,
  NAME                 VARCHAR(80) NOT NULL,
  DESCRIPTION          VARCHAR(250),
  ATTRIBUTEPOSITION    BIGINT NOT NULL,
  ATTRIBUTELENGTH      BIGINT NOT NULL,
  REQUIRED             CHAR(1) NOT NULL,
  ACTIVE               CHAR(1) NOT NULL,
  MODMEMBERID          BIGINT NOT NULL,
  MODDATE              TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION           BIGINT NOT NULL,
  CATALOGATTRIBUTEID   BIGINT,
  VALUE                VARCHAR(255)
)
;
-- Add comments to the columns
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.ID IS 'Unique ID';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.CLASSIFICATIONCODEID IS 'Unique ID';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.CSVERSIONNUMBER IS 'Classification Scheme Version NUMBER';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.ATTRIBUTEDATATYPEID IS 'Data Type ID';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.NAME IS 'Name of the Classification Code Attr';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.ATTRIBUTEPOSITION IS 'Location';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.ATTRIBUTELENGTH IS 'Data Length (size)';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.REQUIRED IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN CLASSIFICATIONCODEATTRIBUTE.CATALOGATTRIBUTEID IS 'Attribute ID of the Catalog';

--
-- Definition for TABLE CLASSIFICATIONSCHEME:
--
       
CREATE TABLE CLASSIFICATIONSCHEME
(
  ID                      BIGINT,
  MODVERSION              BIGINT,
  SOURCEORGANIZATIONID    BIGINT NOT NULL,
  NAME                    VARCHAR(80) NOT NULL,
  DESCRIPTION             VARCHAR(250),
  FLATSCHEME              CHAR(1) NOT NULL,
  CLASSIFICATIONROOT      VARCHAR(250),
  ACTIVE                  CHAR(1) NOT NULL,
  MODMEMBERID             BIGINT NOT NULL,
  MODDATE                 TIMESTAMP WITHOUT TIME ZONE,
  EXTRACTED               CHAR(1),
  CATALOGID               BIGINT,
  SYSTEMGENERATED         CHAR(1) NOT NULL,
  LOGFILE                 VARCHAR(255),
  ROOTCODEID              BIGINT,
  TYPE                    VARCHAR(80) NOT NULL,
  EXTRACTIONMETHOD        VARCHAR(30) DEFAULT 'Automatic' NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN CLASSIFICATIONSCHEME.ID IS 'Unique ID-';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.NAME IS 'Name of CS';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.DESCRIPTION IS 'Stores description for upto 250 chars';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.FLATSCHEME IS 'Flag'; 
COMMENT ON COLUMN CLASSIFICATIONSCHEME.CLASSIFICATIONROOT IS 'The root classification code for this scheme. This node is parent of all classification codes. This is generated automatically.';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.EXTRACTED IS 'Flag';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.CATALOGID IS 'Catalog ID';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.SYSTEMGENERATED IS 'Flag';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.LOGFILE IS 'Path and File Name of Log File';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.TYPE IS 'Classification Type. Valid values are RULEBASE_BASED_MAPPING and ATTRIBUTE_BASED_MAPPING';
COMMENT ON COLUMN CLASSIFICATIONSCHEME.EXTRACTIONMETHOD IS 'Classification Extraction Method. Valid values are Manual, Automatic and Mixed';

--
-- Definition for TABLE CONFIGURATIONDEFINITION:
--

CREATE TABLE CONFIGURATIONDEFINITION
(
  ID                      BIGINT,
  TYPE                    VARCHAR(30),
  OWNERID                 BIGINT,
  GLOBAL                  CHAR(1),
  NAME                    VARCHAR(80),
  SELECTOR                VARCHAR(250),
  DESCRIPTION             VARCHAR(250),
  DEFINITIONTYPE          VARCHAR(30),
  DEFINITION              VARCHAR(250),
  ACTIVE                  CHAR(1),
  MODMEMBERID             BIGINT,
  MODDATE                 TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION              BIGINT
)
;
-- Add comments to the columns
COMMENT ON TABLE CONFIGURATIONDEFINITION IS ' ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.ID IS 'Sequence Generated by MqSequence1 ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.TYPE IS ' "Rulebase", "Workflow", "Map" ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.OWNERID IS 'Catalog.ID or Organization.ID ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.GLOBAL IS ' ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.NAME IS ' ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.SELECTOR IS 'Lets you group rulebase for selection purposes ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.DESCRIPTION IS ' ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.DEFINITIONTYPE IS '"File" ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.DEFINITION IS 'Pointer to File ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.ACTIVE IS 'Y Active / N  No ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.MODMEMBERID IS ' ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.MODDATE IS ' ';
COMMENT ON COLUMN CONFIGURATIONDEFINITION.MODVERSION IS ' ';

--
-- Definition for TABLE CONFIGURATIONDEFINITION:
--

CREATE TABLE CONFIGURATIONDOCUMENT
(
  MEMBERID          BIGINT,
  SCREENID          BIGINT,
  MODDATE           TIMESTAMP WITHOUT TIME ZONE,
  DOCUMENT          BYTEA
)
;
-- Add comments to the columns
COMMENT ON TABLE CONFIGURATIONDOCUMENT IS ' ';
COMMENT ON COLUMN CONFIGURATIONDOCUMENT.MEMBERID IS 'Member ID';
COMMENT ON COLUMN CONFIGURATIONDOCUMENT.SCREENID IS 'Screen ID';
COMMENT ON COLUMN CONFIGURATIONDOCUMENT.MODDATE IS 'Modification time';
COMMENT ON COLUMN CONFIGURATIONDOCUMENT.DOCUMENT IS 'DOM that stores the configuration';

--
-- Definition for TABLE CURRENCY:
--       
CREATE TABLE CURRENCY
(
  ID                        BIGINT,
  NAME                      VARCHAR(80),
  ISOCODE                   VARCHAR(80),
  SYMBOL                    VARCHAR(3),
  NOOFDIGITSAFTERDECIMAL    BIGINT,
  PARITY                    BIGINT,
  ROUNDINGMETHODS           VARCHAR(80) NOT NULL,
  THOUSANDSEPARATORREQUIRED CHAR(1),
  EFFECTIVEDATE             TIMESTAMP WITHOUT TIME ZONE,
  EXPIRYDATE                TIMESTAMP WITHOUT TIME ZONE
)
;
-- Add comments to the columns
COMMENT ON COLUMN CURRENCY.ID IS 'Unique ID';
COMMENT ON COLUMN CURRENCY.NAME IS 'Currency Name - Dollar, Yen, Rupee etc.';
COMMENT ON COLUMN CURRENCY.ISOCODE IS 'ISO Code for the Currency';
COMMENT ON COLUMN CURRENCY.SYMBOL IS 'Symbol for each currency ($, Rs. #)';
COMMENT ON COLUMN CURRENCY.NOOFDIGITSAFTERDECIMAL IS 'No of Digits for each currency after the Decimal';
COMMENT ON COLUMN CURRENCY.PARITY IS 'Parity Value';
COMMENT ON COLUMN CURRENCY.ROUNDINGMETHODS IS 'Rounding Method';
COMMENT ON COLUMN CURRENCY.THOUSANDSEPARATORREQUIRED IS 'Thousand Separation Flag';
COMMENT ON COLUMN CURRENCY.EFFECTIVEDATE IS 'From when it was effective';
COMMENT ON COLUMN CURRENCY.EXPIRYDATE IS 'Date of Expiry';

--
-- Definition for TABLE DATAFRAGMENT:
--   

CREATE TABLE DATAFRAGMENT
(
  ID                         BIGINT,
  SOURCEORGANIZATIONID       BIGINT NOT NULL,
  CATALOGFORMATID            BIGINT NOT NULL,
  NAME                       VARCHAR(80) NOT NULL,
  DESCRIPTION                VARCHAR(250),
  FILENAME                   VARCHAR(256),
  DELIMITER                  BIGINT,
  HEADERLINECOUNT            BIGINT NOT NULL,
  USETITLESFLAG              CHAR(1) NOT NULL,
  FILELASTUPLOADEDDATE       TIMESTAMP WITHOUT TIME ZONE,
  TABLELASTUPLOADEDDATE      TIMESTAMP WITHOUT TIME ZONE,
  SOURCETABLENAME            VARCHAR(80),
  LOADEDROWCOUNT             BIGINT,
  BADROWCOUNT                BIGINT,
  LOGFILE                    VARCHAR(256),
  BADFILE                    VARCHAR(256),
  TRANSPORTPROTOCOL          VARCHAR(80),
  TRANSPORTPROTOCOLADDRESSID BIGINT,
  ACTIVE                     CHAR(1) NOT NULL,
  MODMEMBERID                BIGINT NOT NULL,
  MODDATE                    TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION                 BIGINT NOT NULL,
  PRICELISTFLAG              CHAR(1),
  UPLOADMETHOD               VARCHAR(80),
  INTERNALFILENAME           VARCHAR(250),
  DATEFORMAT                 VARCHAR(80) DEFAULT 'DD/MM/YY' NOT NULL,
  QUEUENAME                  VARCHAR(80),
  KEYWORD                    VARCHAR(80),
  TEXTQUALIFIER              VARCHAR(80),
  DECIMALSYMBOL              VARCHAR(80) NOT NULL,
  THOUSANDSEPARATOR          VARCHAR(80) NOT NULL,
  XSLTFILENAME               VARCHAR(255),
  ORIGINALFILENAME           VARCHAR(250),
  TIMESTAMPFORMAT            VARCHAR(80) DEFAULT 'YYYY-MM-DD HH:mm:ss.S' NOT NULL,
  SOURCESQL		     VARCHAR(4000)
)
;
-- Add comments to the columns
COMMENT ON COLUMN DATAFRAGMENT.ID IS 'Unique ID';
COMMENT ON COLUMN DATAFRAGMENT.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN DATAFRAGMENT.CATALOGFORMATID IS 'Unique ID from catalog format';
COMMENT ON COLUMN DATAFRAGMENT.NAME IS 'Name of the DataFragment';
COMMENT ON COLUMN DATAFRAGMENT.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN DATAFRAGMENT.FILENAME IS 'File uploaded or to be uploaded.';
COMMENT ON COLUMN DATAFRAGMENT.DELIMITER IS 'Delimiter Code';
COMMENT ON COLUMN DATAFRAGMENT.HEADERLINECOUNT IS 'No of header lines expected in the incoming data. These lines are skipped.';
COMMENT ON COLUMN DATAFRAGMENT.USETITLESFLAG IS 'Indicates if column names are to extracted from column titles specified in the file.';
COMMENT ON COLUMN DATAFRAGMENT.FILELASTUPLOADEDDATE IS 'Unused';
COMMENT ON COLUMN DATAFRAGMENT.TABLELASTUPLOADEDDATE IS 'Indicates the DATE+time when the file was loaded in internal table/ same as the time when data was uploaded to the data source';
COMMENT ON COLUMN DATAFRAGMENT.SOURCETABLENAME IS 'The SQL table name which is the source of data source. Required when data source format is SQL';
COMMENT ON COLUMN DATAFRAGMENT.LOADEDROWCOUNT IS 'No of rows already loaded';
COMMENT ON COLUMN DATAFRAGMENT.BADROWCOUNT IS 'No of rows rejected in last upload';
COMMENT ON COLUMN DATAFRAGMENT.LOGFILE IS 'Log file of last upload attempt';
COMMENT ON COLUMN DATAFRAGMENT.BADFILE IS 'File which holds rejected records - of last upload attempt';
COMMENT ON COLUMN DATAFRAGMENT.TRANSPORTPROTOCOL IS 'The mode of transport - to supply data to data source';
COMMENT ON COLUMN DATAFRAGMENT.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN DATAFRAGMENT.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN DATAFRAGMENT.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN DATAFRAGMENT.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN DATAFRAGMENT.PRICELISTFLAG IS 'Indicates if this data source is a price list';
COMMENT ON COLUMN DATAFRAGMENT.UPLOADMETHOD IS 'Reserved for future use';
COMMENT ON COLUMN DATAFRAGMENT.INTERNALFILENAME IS 'Reserved for future use';
COMMENT ON COLUMN DATAFRAGMENT.DATEFORMAT IS 'Date Format (DD-MM-YYYY)';
COMMENT ON COLUMN DATAFRAGMENT.QUEUENAME IS 'The name of JMS queue which can feed data to this data source, required when data source transport is Queue.';
COMMENT ON COLUMN DATAFRAGMENT.KEYWORD IS 'Unused';
COMMENT ON COLUMN DATAFRAGMENT.TEXTQUALIFIER IS 'Whether it is double quote (") or single quote ('') etc.';
COMMENT ON COLUMN DATAFRAGMENT.DECIMALSYMBOL IS 'usually dot (.)';
COMMENT ON COLUMN DATAFRAGMENT.THOUSANDSEPARATOR IS 'Usually a comma (,)';
COMMENT ON COLUMN DATAFRAGMENT.XSLTFILENAME IS 'Required when data source format is XML. This XSLT file should convert the XML to CVS.';
COMMENT ON COLUMN DATAFRAGMENT.TIMESTAMPFORMAT IS 'TIMESTAMP Format (DD-MM-YYYY HH:MM:SS.S)';
COMMENT ON COLUMN DATAFRAGMENT.SOURCESQL IS 'The SQL string which is the source of data source. Applicable when data source format is SQL';
--
-- Definition for TABLE DFATTRIBUTE:
--
       
CREATE TABLE DFATTRIBUTE
(
  DATAFRAGMENTID             BIGINT,
  ID                         BIGINT,
  SOURCEORGANIZATIONID       BIGINT NOT NULL,
  CATALOGATTRIBUTEDATATYPEID BIGINT NOT NULL,
  NAME                       VARCHAR(80) NOT NULL,
  DESCRIPTION                VARCHAR(250),
  ATTRIBUTEPOSITION          BIGINT NOT NULL,
  ATTRIBUTELENGTH            BIGINT,
  REQUIRED                   CHAR(1),
  ACTIVE                     CHAR(1) NOT NULL,
  MODMEMBERID                BIGINT NOT NULL,
  MODDATE                    TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION                 BIGINT NOT NULL,
  KEYCOLUMN                  CHAR(1)
)
;
-- Add comments to the columns
COMMENT ON COLUMN DFATTRIBUTE.DATAFRAGMENTID IS 'Datafragment ID';
COMMENT ON COLUMN DFATTRIBUTE.ID IS 'Unique ID';
COMMENT ON COLUMN DFATTRIBUTE.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN DFATTRIBUTE.CATALOGATTRIBUTEDATATYPEID IS 'Data Type ID of Catalog Attribute';
COMMENT ON COLUMN DFATTRIBUTE.NAME IS 'Name for DFAttribute';
COMMENT ON COLUMN DFATTRIBUTE.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN DFATTRIBUTE.ATTRIBUTEPOSITION IS 'Sequence';
COMMENT ON COLUMN DFATTRIBUTE.ATTRIBUTELENGTH IS 'Length of the attribute';
COMMENT ON COLUMN DFATTRIBUTE.REQUIRED IS 'Flag';
COMMENT ON COLUMN DFATTRIBUTE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN DFATTRIBUTE.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN DFATTRIBUTE.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN DFATTRIBUTE.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN DFATTRIBUTE.KEYCOLUMN IS 'Reserved for future use: indicates if this column is a key column';

--
-- Definition for TABLE DOMAIN:
--  

CREATE TABLE DOMAIN
(
  TYPE        VARCHAR(80),
  DESCRIPTION VARCHAR(256)
)
;
-- Add comments to the columns
COMMENT ON COLUMN DOMAIN.TYPE IS 'Domain Type (Acts as a Parent Table for the Domain* Tables)';
COMMENT ON COLUMN DOMAIN.DESCRIPTION IS 'Description of domain type';
       
--
-- Definition for TABLE DOMAINENTRY:
--

CREATE TABLE DOMAINENTRY
(
  DOMAINTYPE  VARCHAR(80),
  VALUE       VARCHAR(80),
  DESCRIPTION VARCHAR(250)
)
;

COMMENT ON COLUMN DOMAINENTRY.DOMAINTYPE IS 'Domain Type (Acts as a Parent Table for the Domain* Tables)';
COMMENT ON COLUMN DOMAINENTRY.VALUE IS 'Value for Domain Entry';
COMMENT ON COLUMN DOMAINENTRY.DESCRIPTION IS 'Entity Description';

--
-- Definition for TABLE DOMAINLINK:
--

CREATE TABLE DOMAINLINK
(
  OWNERID     BIGINT,
  DOMAINTYPE  VARCHAR(80),
  DOMAINVALUE VARCHAR(80),
  SEQUENCE    BIGINT,
  DESCRIPTION VARCHAR(250)
)
;
-- Add comments to the columns
COMMENT ON COLUMN DOMAINLINK.OWNERID IS 'Organization ID';
COMMENT ON COLUMN DOMAINLINK.DOMAINTYPE IS 'Type to which it belongs to, i.e. Phone, Fax, Email, Buyerorg etc';
COMMENT ON COLUMN DOMAINLINK.DOMAINVALUE IS 'Short Info about the Domain Type';
COMMENT ON COLUMN DOMAINLINK.SEQUENCE IS 'Sequence No';
COMMENT ON COLUMN DOMAINLINK.DESCRIPTION IS 'Entity Description';

--
-- Definition for TABLE DOMAINSTRING:
--
       
CREATE TABLE DOMAINSTRING
(
  DOMAINTYPE  VARCHAR(80),
  DOMAINVALUE VARCHAR(80),
  LANGUAGE    VARCHAR(80),
  LANGVALUE   VARCHAR(4000) NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN DOMAINSTRING.DOMAINTYPE IS 'Domain Type (Acts as a Parent Table for the Domain* Tables)';
COMMENT ON COLUMN DOMAINSTRING.DOMAINVALUE IS 'Value for Domain Entry';
COMMENT ON COLUMN DOMAINSTRING.LANGVALUE IS 'Value specific to language';
COMMENT ON COLUMN DOMAINSTRING.LANGUAGE IS 'Language code';

--
-- Definition for TABLE DOMAINVALUE:
--

CREATE TABLE DOMAINVALUE
(
  DOMAINTYPE     VARCHAR(80),
  DOMAINVALUE    VARCHAR(80),
  SEQUENCE       BIGINT,
  OWNERID        BIGINT,
  OWNERVERSION   BIGINT DEFAULT 0 ,
  EMAILID        BIGINT,
  PHONENUMBERID  BIGINT,
  FTPID          BIGINT,
  HTTPID         BIGINT,
  ADDRESSID      BIGINT,
  DESCRIPTION    VARCHAR(250),
  MEMBERID       BIGINT,
  ORGANIZATIONID BIGINT,
  VALUE          VARCHAR(4000),
  IDVALUE        BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN DOMAINVALUE.SEQUENCE IS 'Sequence No.';
COMMENT ON COLUMN DOMAINVALUE.OWNERID IS 'Organization ID';
COMMENT ON COLUMN DOMAINVALUE.OWNERVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN DOMAINVALUE.EMAILID IS 'ID of the owner';
COMMENT ON COLUMN DOMAINVALUE.PHONENUMBERID IS 'ID of the owner';
COMMENT ON COLUMN DOMAINVALUE.FTPID IS 'ID of the owner';
COMMENT ON COLUMN DOMAINVALUE.HTTPID IS 'ID of the owner';
COMMENT ON COLUMN DOMAINVALUE.ADDRESSID IS 'ID of the owner';
COMMENT ON COLUMN DOMAINVALUE.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN DOMAINVALUE.MEMBERID IS 'Member''s ID';
COMMENT ON COLUMN DOMAINVALUE.ORGANIZATIONID IS 'Organization ID';

--
-- Definition for TABLE EMAIL:
--

CREATE TABLE EMAIL
(
  ID          BIGINT,
  OWNERID     BIGINT,
  NAME        VARCHAR(80),
  EMAIL       VARCHAR(80),
  ACTIVE      CHAR(1),
  MODMEMBERID BIGINT NOT NULL,
  MODDATE     TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION  BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN EMAIL.ID IS 'Unique ID';
COMMENT ON COLUMN EMAIL.OWNERID IS 'Organization ID';
COMMENT ON COLUMN EMAIL.NAME IS 'Name Described in the apps';
COMMENT ON COLUMN EMAIL.EMAIL IS 'Email Info';
COMMENT ON COLUMN EMAIL.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN EMAIL.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN EMAIL.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN EMAIL.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE ENTERPRISE:
--

CREATE TABLE ENTERPRISE
(
  ID           BIGINT,
  NAME         VARCHAR(80),
  INTERNALNAME VARCHAR(80),
  SHORTNAME    VARCHAR(80),
  ACTIVE       CHAR(1),
  MODMEMBERID  BIGINT,
  MODDATE      TIMESTAMP WITHOUT TIME ZONE,
  VERTICAL     VARCHAR(80)
)
;
-- Add comments to the columns
COMMENT ON COLUMN ENTERPRISE.ID IS 'Unique ID for Enterprise';
COMMENT ON COLUMN ENTERPRISE.NAME IS 'Name of the Enterprise';
COMMENT ON COLUMN ENTERPRISE.INTERNALNAME IS 'Internal Name of the Enterprise, this is used for locating and placing files in the respective directory in OS';
COMMENT ON COLUMN ENTERPRISE.SHORTNAME IS 'Short Name of the Enterprise, can be used for reporting.';
COMMENT ON COLUMN ENTERPRISE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN ENTERPRISE.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN ENTERPRISE.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN ENTERPRISE.VERTICAL IS 'Industry of the enterprise';

--
-- Definition for TABLE EXPORTPROFILE:
--

CREATE TABLE EXPORTPROFILE
(
  ID                           BIGINT,
  SOURCEORGANIZATIONID         BIGINT NOT NULL,
  NAME                         VARCHAR(80) NOT NULL,
  DESCRIPTION                  VARCHAR(250),
  ACTIVE                       CHAR(1) NOT NULL,
  MODMEMBERID                  BIGINT NOT NULL,
  MODDATE                      TIMESTAMP WITHOUT TIME ZONE
)
;
-- Add comments to the columns
COMMENT ON COLUMN EXPORTPROFILE.ID IS 'Unique ID for Profile';
COMMENT ON COLUMN EXPORTPROFILE.SOURCEORGANIZATIONID IS 'Stores the Organization ID';
COMMENT ON COLUMN EXPORTPROFILE.NAME IS 'Name of the Profile';
COMMENT ON COLUMN EXPORTPROFILE.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN EXPORTPROFILE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN EXPORTPROFILE.MODMEMBERID IS 'Member who modifed the Profile';
COMMENT ON COLUMN EXPORTPROFILE.MODDATE IS 'Date of Modification';

--
-- Definition for TABLE EXPORTPROFILEJOURNAL:
--

CREATE TABLE EXPORTPROFILEJOURNAL
(
  ID                           BIGINT NOT NULL,
  PROFILEID                    BIGINT NOT NULL,
  EXPORTDATE                   TIMESTAMP WITHOUT TIME ZONE,
  FILELOCATION                 VARCHAR(256) NOT NULL,
  MEMBERID                     BIGINT NOT NULL,
  ACTIVE                       CHAR(1) NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN EXPORTPROFILEJOURNAL.ID IS 'ID';
COMMENT ON COLUMN EXPORTPROFILEJOURNAL.PROFILEID IS 'ID from EXPORTPROFILE';
COMMENT ON COLUMN EXPORTPROFILEJOURNAL.EXPORTDATE IS 'Date of Export';
COMMENT ON COLUMN EXPORTPROFILEJOURNAL.FILELOCATION IS 'Location of the Exported Zip';
COMMENT ON COLUMN EXPORTPROFILEJOURNAL.MEMBERID IS 'Member ID';
COMMENT ON COLUMN EXPORTPROFILEJOURNAL.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';


--
-- Definition for TABLE EXPORTPROFILELINE:
--

CREATE TABLE EXPORTPROFILELINE
(
  LINEID                       BIGINT,
  PROFILEID                    BIGINT NOT NULL,
  OBJECTTYPE                   VARCHAR(80) NOT NULL,
  OBJECTID                     BIGINT NOT NULL,
  EXPORTDATA                   CHAR(1) NOT NULL,
  ACTIVE                       CHAR(1) NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN EXPORTPROFILELINE.LINEID IS 'Unique ID for Profile';
COMMENT ON COLUMN EXPORTPROFILELINE.PROFILEID IS 'ID from EXPORTPROFILE';
COMMENT ON COLUMN EXPORTPROFILELINE.OBJECTTYPE IS 'Type of object to export';
COMMENT ON COLUMN EXPORTPROFILELINE.OBJECTID IS 'ID of object to export';
COMMENT ON COLUMN EXPORTPROFILELINE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';


--
-- Definition for TABLE FTP:
--

CREATE TABLE FTP
(
  ID            BIGINT,
  OWNERID       BIGINT NOT NULL,
  NAME          VARCHAR(80) NOT NULL,
  HOST          VARCHAR(80),
  LOGINNAME     VARCHAR(80),
  PASSWORD      VARCHAR(80),
  DIRECTORY     VARCHAR(250),
  ACTIVE        CHAR(1),
  MODMEMBERID   BIGINT NOT NULL,
  MODDATE       TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION    BIGINT NOT NULL  
)
;
-- Add comments to the columns
COMMENT ON COLUMN FTP.ID IS 'Unique ID';
COMMENT ON COLUMN FTP.OWNERID IS 'Organization ID';
COMMENT ON COLUMN FTP.HOST IS 'IP Address of the host';
COMMENT ON COLUMN FTP.LOGINNAME IS 'Login for the User';
COMMENT ON COLUMN FTP.PASSWORD IS 'Password for the User';
COMMENT ON COLUMN FTP.DIRECTORY IS 'Path';
COMMENT ON COLUMN FTP.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN FTP.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN FTP.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN FTP.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE FUNC2IDMAP:
--

CREATE TABLE FUNC2IDMAP
(
  ID          BIGINT,
  FUNCID      BIGINT,
  NAME        VARCHAR(80) NOT NULL,
  ELEMENTID   BIGINT NOT NULL,
  ELEMENTTYPE BIGINT NOT NULL,
  SECURITY    BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN FUNC2IDMAP.ID IS 'Unique ID';
COMMENT ON COLUMN FUNC2IDMAP.FUNCID IS 'ID derived from Function';
COMMENT ON COLUMN FUNC2IDMAP.NAME IS 'Info about the mapping';
COMMENT ON COLUMN FUNC2IDMAP.ELEMENTID IS 'ID derived from htmlelement if';
COMMENT ON COLUMN FUNC2IDMAP.SECURITY IS 'Security Type';

--
-- Definition for TABLE FUNCTION:
--

CREATE TABLE FUNCTION
(
  ID          BIGINT,
  NAME        VARCHAR(80) NOT NULL,
  DESCRIPTION VARCHAR(250),
  FUNCTION    VARCHAR(250) NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN FUNCTION.ID IS 'Unique ID';
COMMENT ON COLUMN FUNCTION.NAME IS 'Name of a function';
COMMENT ON COLUMN FUNCTION.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN FUNCTION.FUNCTION IS 'Function code';

--
-- Definition for TABLE FUNCTIONROLE:
--

CREATE TABLE FUNCTIONROLE
(
  ROLEID     BIGINT,
  FUNCTIONID BIGINT
)
;

COMMENT ON COLUMN FUNCTIONROLE.ROLEID IS 'Role ID Mapping';
COMMENT ON COLUMN FUNCTIONROLE.FUNCTIONID IS 'Function ID Mapping';

--
-- Definition for TABLE HI_VALUE:
--

CREATE TABLE HI_VALUE
(
  NEXT_VALUE      BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN HI_VALUE.NEXT_VALUE IS 'The value for hilo algorithm to generate ids';

--
-- Definition for TABLE HTMLELEMENTID:
--

CREATE TABLE HTMLELEMENTID
(
  ID       BIGINT,
  NAME     VARCHAR(80) NOT NULL,
  PAGENAME VARCHAR(80) NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN HTMLELEMENTID.ID IS 'Unique ID';
COMMENT ON COLUMN HTMLELEMENTID.NAME IS 'Name for Element ID';
COMMENT ON COLUMN HTMLELEMENTID.PAGENAME IS 'Name for page on which this element is defined';

--
-- Definition for TABLE HTTP:
--

CREATE TABLE HTTP
(
  ID                          BIGINT,
  OWNERID                     BIGINT NOT NULL,
  NAME                        VARCHAR(80) NOT NULL,
  URL                         VARCHAR(4000),
  ACTIVE                      CHAR(1) NOT NULL,
  MODMEMBERID                 BIGINT NOT NULL,
  MODDATE                     TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION                  BIGINT NOT NULL,
  PORT                        BIGINT,
  BASICAUTHENTICATIONUSER     VARCHAR(80),
  BASICAUTHENTICATIONPASSWORD VARCHAR(80),
  HEADER                      VARCHAR(4000)
)
;
-- Add comments to the columns
COMMENT ON COLUMN HTTP.ID IS 'Unique ID';
COMMENT ON COLUMN HTTP.OWNERID IS 'Organization ID';
COMMENT ON COLUMN HTTP.NAME IS 'Http Name';
COMMENT ON COLUMN HTTP.URL IS 'URL details';
COMMENT ON COLUMN HTTP.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN HTTP.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN HTTP.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN HTTP.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN HTTP.PORT IS 'HTTP Server port';
COMMENT ON COLUMN HTTP.BASICAUTHENTICATIONUSER IS 'HTTP authentication username';
COMMENT ON COLUMN HTTP.BASICAUTHENTICATIONPASSWORD IS 'HTTP authentication password';
COMMENT ON COLUMN HTTP.HEADER IS 'HTTP authentication password';

--
-- Definition for TABLE MEMBER:
--
       
CREATE TABLE MEMBER
(
  ID                  BIGINT,
  ENTERPRISEID        BIGINT,
  DOMAIN              VARCHAR(80),
  USERNAME            VARCHAR(80),
  LASTNAME            VARCHAR(80),
  FIRSTNAME           VARCHAR(80),
  MIDDLENAME          VARCHAR(80),
  SECURITYTYPE        VARCHAR(30),
  SECURITY            VARCHAR(250),
  DESCRIPTION         VARCHAR(512),
  ACTIVE              CHAR(1) NOT NULL,
  MODMEMBERID         BIGINT NOT NULL,
  MODDATE             TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION          BIGINT NOT NULL,
  DELEGATIONACTIVE    CHAR(1) DEFAULT 'N'  NOT NULL,
  DELEGATIONSTARTDATE TIMESTAMP WITHOUT TIME ZONE,
  DELEGATIONENDDATE   TIMESTAMP WITHOUT TIME ZONE,
  NOTIFYOFDELEGATION  CHAR(1),
  AUTOREVERTFLAG      CHAR(1),
  LOCALE              VARCHAR(30),
  LANGUAGE            VARCHAR(30),
  PARTITIONKEY        BIGINT,
  SECURITYMODDATE 	  TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT null
)
;
-- Add comments to the columns
COMMENT ON COLUMN MEMBER.ID IS 'Unique ID';
COMMENT ON COLUMN MEMBER.ENTERPRISEID IS 'Enterprise which owns the member';
COMMENT ON COLUMN MEMBER.DOMAIN IS 'Domain Name of the Member';
COMMENT ON COLUMN MEMBER.USERNAME IS 'User Name / Login Name';
COMMENT ON COLUMN MEMBER.LASTNAME IS 'Last Name of the Member';
COMMENT ON COLUMN MEMBER.FIRSTNAME IS 'First name of the member';
COMMENT ON COLUMN MEMBER.MIDDLENAME IS 'Middle name of the member';
COMMENT ON COLUMN MEMBER.SECURITY IS 'Pass Code';
COMMENT ON COLUMN MEMBER.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN MEMBER.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN MEMBER.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN MEMBER.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN MEMBER.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN MEMBER.PARTITIONKEY  is 'Partition key used for application partitioning';

--
-- Definition for TABLE MEMBERSHIP:
--
 
CREATE TABLE MEMBERSHIP
(
  ORGANIZATIONID BIGINT,
  MEMBERID       BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN MEMBERSHIP.ORGANIZATIONID IS 'Organization who owns the member';
COMMENT ON COLUMN MEMBERSHIP.MEMBERID IS 'Member ID to map to Organization';
       
--
-- Definition for TABLE NAMEDVERSION:
--

CREATE TABLE NAMEDVERSION
(
  ID           BIGINT,
  OWNERID      BIGINT NOT NULL,
  OWNERVERSION BIGINT NOT NULL,
  OWNERTYPE    VARCHAR(80) NOT NULL,
  NAME         VARCHAR(80) NOT NULL,
  DESCRIPTION  VARCHAR(250) NOT NULL,
  VERSIONDATE  TIMESTAMP WITHOUT TIME ZONE
)
;

COMMENT ON COLUMN NAMEDVERSION.ID IS 'Unique ID generated thro MQ_SEQUENCE_CATALOG';
COMMENT ON COLUMN NAMEDVERSION.OWNERID IS 'Organizaiton ID.';
COMMENT ON COLUMN NAMEDVERSION.OWNERVERSION IS 'Version NUMBER of the owner. The owner could be a catalog';
COMMENT ON COLUMN NAMEDVERSION.OWNERTYPE IS 'Indicates the owner type. At present, valid value is ''Catalog''';
COMMENT ON COLUMN NAMEDVERSION.NAME IS 'Name Info of Named Version';
COMMENT ON COLUMN NAMEDVERSION.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN NAMEDVERSION.VERSIONDATE IS 'Date and Time of the activity';

--
-- Definition for TABLE OBJECTSEQUENCE:
--

CREATE TABLE OBJECTSEQUENCE
(
  ID          BIGINT,
  OWNERID     BIGINT NOT NULL,
  TYPE        VARCHAR(80),
  OBJECTID    BIGINT NOT NULL,
  SEQUENCE    BIGINT,
  ACTIVE      CHAR(1) NOT NULL,
  MODMEMBERID BIGINT NOT NULL,
  MODDATE     TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION  BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN OBJECTSEQUENCE.ID IS 'Unique id from Sequence';
COMMENT ON COLUMN OBJECTSEQUENCE.OWNERID IS 'Owner of this object';
COMMENT ON COLUMN OBJECTSEQUENCE.TYPE IS 'Type of the object';
COMMENT ON COLUMN OBJECTSEQUENCE.OBJECTID IS 'Id of the object';
COMMENT ON COLUMN OBJECTSEQUENCE.SEQUENCE IS 'Sequence of the object for the owner';
COMMENT ON COLUMN OBJECTSEQUENCE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN OBJECTSEQUENCE.MODMEMBERID IS 'Member who modified the record';
COMMENT ON COLUMN OBJECTSEQUENCE.MODDATE IS 'Date of modification';
COMMENT ON COLUMN OBJECTSEQUENCE.MODVERSION IS 'Current version of the entity';

--
-- Definition for TABLE ORGANIZATION:
--

CREATE TABLE ORGANIZATION
(
  ID            BIGINT,
  ENTERPRISEID  BIGINT NOT NULL,
  NAME          VARCHAR(80) NOT NULL,
  TYPE          VARCHAR(30) NOT NULL,
  DUNS          VARCHAR(250),
  TAXID         VARCHAR(80),
  ACTIVE        CHAR(1) NOT NULL,
  MODMEMBERID   BIGINT NOT NULL,
  MODDATE       TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION    BIGINT NOT NULL,
  GLOBAL        VARCHAR(1) NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN ORGANIZATION.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN ORGANIZATION.ENTERPRISEID IS 'Enterprise ID who owns the Organization';
COMMENT ON COLUMN ORGANIZATION.NAME IS 'Name of the Organization';
COMMENT ON COLUMN ORGANIZATION.TYPE IS 'Whether it is SUPPLIER / MARKETPLACE / BUYER';
COMMENT ON COLUMN ORGANIZATION.TAXID IS 'TaxId information';
COMMENT ON COLUMN ORGANIZATION.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN ORGANIZATION.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN ORGANIZATION.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN ORGANIZATION.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN ORGANIZATION.GLOBAL IS 'Indicates if this organization if global - visible to others';

--
-- Definition for TABLE PHONENUMBER:
--
  
CREATE TABLE PHONENUMBER
(
  ID          BIGINT,
  OWNERID     BIGINT NOT NULL,
  NAME        VARCHAR(80) NOT NULL,
  TYPE        VARCHAR(80) NOT NULL,
  PHONENUMBER VARCHAR(80),
  ACTIVE      CHAR(1) NOT NULL,
  MODMEMBERID BIGINT NOT NULL,
  MODDATE     TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION  BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN PHONENUMBER.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN PHONENUMBER.OWNERID IS 'Organization ID';
COMMENT ON COLUMN PHONENUMBER.NAME IS 'Main Specified by the User';
COMMENT ON COLUMN PHONENUMBER.PHONENUMBER IS 'Phone Info';
COMMENT ON COLUMN PHONENUMBER.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN PHONENUMBER.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN PHONENUMBER.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN PHONENUMBER.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE PROTOCOLCODES:
--

CREATE TABLE PROTOCOLCODES
(
  CODETYPE        VARCHAR(80) NOT NULL,
  PROTOCOL        VARCHAR(80) NOT NULL,
  PROTOCOLVERSION VARCHAR(80) NOT NULL,
  PROTOCOLVALUE   VARCHAR(80),
  NORMAL          VARCHAR(80),
  ENTERPRISEID    BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN PROTOCOLCODES.CODETYPE IS 'Groups codes into common CodeTypes';
COMMENT ON COLUMN PROTOCOLCODES.PROTOCOL IS 'Specifies incoming Document Protocol';
COMMENT ON COLUMN PROTOCOLCODES.PROTOCOLVERSION IS 'Specifies the version of the Protocol for which the CodeType and Values are defined';
COMMENT ON COLUMN PROTOCOLCODES.PROTOCOLVALUE IS 'Original Value for the Code Type. (Protocol specific)';
COMMENT ON COLUMN PROTOCOLCODES.NORMAL IS 'Internal mlXML Standard representation for the (Value)';
COMMENT ON COLUMN PROTOCOLCODES.ENTERPRISEID IS 'Unique ID for Enterprise';

--
-- Definition for TABLE QUEUEENTRY:
--

CREATE TABLE QUEUEENTRY
(
  IDVALUE     BIGINT,
  QUEUENAME   VARCHAR(80),
  MODDATE     TIMESTAMP(6) NOT NULL,
  MODMEMBERID BIGINT NOT NULL,
  MODVERSION  BIGINT NOT NULL,
  PROCESSID   BIGINT
)
;
-- Add comments to the columns
COMMENT ON TABLE QUEUEENTRY IS ' ';
COMMENT ON COLUMN QUEUEENTRY.IDVALUE IS 'Object that is queued';
COMMENT ON COLUMN QUEUEENTRY.QUEUENAME IS 'Name of the queue PROCESS or EVENT ';
COMMENT ON COLUMN QUEUEENTRY.MODDATE IS 'Timestamp of when this entry was last modified';
COMMENT ON COLUMN QUEUEENTRY.MODMEMBERID IS 'User who last modified this entry';
COMMENT ON COLUMN QUEUEENTRY.MODVERSION IS 'Version of this entry';

--
-- Definition for TABLE RELATIONSHIPDEFINITION:
--

CREATE TABLE RELATIONSHIPDEFINITION
(
  ID                    BIGINT,
  GLOBAL                CHAR(1),
  OWNERID               BIGINT,
  ORGANIZATIONID        BIGINT,
  TYPE                  BIGINT,
  NAME                  VARCHAR(80),
  DESCRIPTION           VARCHAR(250),
  REVERSENAME           VARCHAR(80),
  REVERSEDESCRIPTION    VARCHAR(250),
  ACTIVE                CHAR(1),
  MODMEMBERID           BIGINT,
  MODDATE               TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION            BIGINT,
  COMPOSITE             CHAR(1),
  ALWAYSBUNDLEPRODUCT   CHAR(1) DEFAULT 'N',
  BUNDLINGOPTION        VARCHAR(30) DEFAULT 'MODIFY',
  TARGETCATALOGID       BIGINT DEFAULT -1,
  RELATIONSHIPCATALOGID BIGINT
)
;
-- Add comments to the columns
COMMENT ON TABLE RELATIONSHIPDEFINITION IS 'Table used for Relationship Metadata ';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.ID IS 'Unique ID for the Relationship Definition derived from MQ_SEQUENCE_RELATIONSHIPDEF';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.GLOBAL IS 'Not used. If ''Y'' Relationhip Definition is applied to all catalogs in the organization';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.OWNERID IS 'Stores the relationship owner (catalog) ID';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.ORGANIZATIONID IS 'Stores the Organization ID - obsolete';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.TYPE IS 'Unique type identifies the relationship';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.NAME IS 'Name of the relationship for forward direction';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.DESCRIPTION IS 'Forward relationship Description';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.REVERSENAME IS 'Name of the relationship fir reverse direction';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.REVERSEDESCRIPTION IS 'Reverse relationship Description';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.ACTIVE IS 'Whether this is used or retired. ''Y'' or ''N''';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.MODMEMBERID IS 'Member who modified the record';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.COMPOSITE IS 'Flag to specify composite relationships. Active ''Y'' is only supported – reserved for future';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.ALWAYSBUNDLEPRODUCT IS 'Not used. Flag to bundle with related records - obsolete';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.BUNDLINGOPTION IS 'Not used. Use default ''Hide'' - reserved';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.TARGETCATALOGID IS 'ID of the target catalog if this relationship is defined as CCR. If it is not a CCR then, the value is -1';
COMMENT ON COLUMN RELATIONSHIPDEFINITION.RELATIONSHIPCATALOGID IS 'ID of the catalog where relationship attributes are stored, -1 if no relationship attributes are defined' ;

      
--
-- Definition for TABLE RELEASE:
--

CREATE TABLE RELEASE
(
  RELEASENUMBER VARCHAR(10),
  PATCHNUMBER   VARCHAR(10),
  DESCRIPTION   VARCHAR(250),
  DATEAPPLIED   TIMESTAMP WITHOUT TIME ZONE
)
;
-- Add comments to the columns
COMMENT ON TABLE RELEASE IS 'Info of the release and patches applied ';
COMMENT ON COLUMN RELEASE.RELEASENUMBER IS 'CIM current Version ';
COMMENT ON COLUMN RELEASE.PATCHNUMBER IS 'Latest patch applied';
COMMENT ON COLUMN RELEASE.DESCRIPTION IS 'Description';
COMMENT ON COLUMN RELEASE.DATEAPPLIED IS 'Date when patch applied';



--
-- Definition for TABLE RESOURCEACCESS:
--

CREATE TABLE RESOURCEACCESS
(
  RESOURCETYPE VARCHAR(80),
  RESACCESS    VARCHAR(80),
  DESCRIPTION  VARCHAR(250),
  DEFAULTALLOW CHAR(1) default 'Y' not null
)
;
-- Add comments to the columns
COMMENT ON COLUMN RESOURCEACCESS.RESOURCETYPE IS 'The type of resource';
COMMENT ON COLUMN RESOURCEACCESS.RESACCESS IS 'The access available for a given resourcetype';
COMMENT ON COLUMN RESOURCEACCESS.DESCRIPTION IS 'Entity Description';

--
-- Definition for TABLE RESOURCEACL:
--

CREATE TABLE RESOURCEACL
(
  RESOURCEID   BIGINT,
  GRANTEEID    BIGINT,
  GRANTEETYPE  VARCHAR(80),
  RESOURCETYPE VARCHAR(80),
  RESACCESS    VARCHAR(30),
  ENTERPRISEID BIGINT,
  ALLOW        CHAR(1),
  ACTIVE       CHAR(1),
  MODDATE      TIMESTAMP WITHOUT TIME ZONE,
  MODMEMBERID  BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN RESOURCEACL.RESOURCEID IS 'id of the object for which the accesses is being given';
COMMENT ON COLUMN RESOURCEACL.GRANTEEID IS 'id of the user/role which is being granted';
COMMENT ON COLUMN RESOURCEACL.GRANTEETYPE IS 'type of the grantee , could be a user or role';
COMMENT ON COLUMN RESOURCEACL.RESOURCETYPE IS 'Type of the object';
COMMENT ON COLUMN RESOURCEACL.RESACCESS IS 'The type of access being granted';
COMMENT ON COLUMN RESOURCEACL.ENTERPRISEID IS 'Enterprise ID';
COMMENT ON COLUMN RESOURCEACL.ALLOW IS 'A flag which says if the access is allowed or denied';
COMMENT ON COLUMN RESOURCEACL.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN RESOURCEACL.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN RESOURCEACL.MODMEMBERID IS 'Member who modifed the Record';

--
-- Definition for TABLE ROLE:
--

CREATE TABLE ROLE
(
  ID               BIGINT,
  ENTERPRISEID     BIGINT,
  NAME             VARCHAR(80),
  DESCRIPTION      VARCHAR(250),
  TYPE             VARCHAR(80),
  ACTIVE           CHAR(1),
  MODMEMBERID      BIGINT NOT NULL,
  MODDATE          TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION       BIGINT NOT NULL,
  ORGANIZATIONTYPE VARCHAR(80) DEFAULT 'SUPPLIER' 
)
;
-- Add comments to the columns
COMMENT ON COLUMN ROLE.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN ROLE.ENTERPRISEID IS 'Enterprise who owns the Role';
COMMENT ON COLUMN ROLE.NAME IS 'Name of the Role';
COMMENT ON COLUMN ROLE.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN ROLE.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN ROLE.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN ROLE.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN ROLE.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE ROLE2FUNCMAP:
--

CREATE TABLE ROLE2FUNCMAP
(
  ID       BIGINT,
  ROLEID   BIGINT,
  FUNCID   BIGINT,
  NAME     VARCHAR(80) NOT NULL,
  PRIORITY BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN ROLE2FUNCMAP.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN ROLE2FUNCMAP.ROLEID IS 'Role ID to be mapped to Function';
COMMENT ON COLUMN ROLE2FUNCMAP.FUNCID IS 'Function ID mapped to Role';
COMMENT ON COLUMN ROLE2FUNCMAP.NAME IS 'Name of the Role';
COMMENT ON COLUMN ROLE2FUNCMAP.PRIORITY IS 'Obsolete';

--
-- Definition for TABLE ROLEACCESS:
--

CREATE TABLE ROLEACCESS
(
  NAME        VARCHAR(80),
  ROLEID      BIGINT,
  DESCRIPTION VARCHAR(250),
  TYPE        VARCHAR(30),
  CANCREATE   CHAR(1),
  CANSELECT   CHAR(1),
  CANUPDATE   CHAR(1),
  CANDELETE   CHAR(1),
  OBJECTTYPE  VARCHAR(30),
  OBJECTID    BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN ROLEACCESS.NAME IS 'Name for Role Access';
COMMENT ON COLUMN ROLEACCESS.ROLEID IS 'Role ID derived from Role';
COMMENT ON COLUMN ROLEACCESS.CANCREATE IS 'Obsolete';
COMMENT ON COLUMN ROLEACCESS.CANSELECT IS 'Obsolete';
COMMENT ON COLUMN ROLEACCESS.CANUPDATE IS 'Obsolete';
COMMENT ON COLUMN ROLEACCESS.CANDELETE IS 'Obsolete';

--
-- Definition for TABLE ROLEASSIGNMENT:
--
       
CREATE TABLE ROLEASSIGNMENT
(
  ROLEID        BIGINT,
  MEMBERID      BIGINT,
  MODDATE       TIMESTAMP WITHOUT TIME ZONE,
  MEMBERVERSION BIGINT,
  MODMEMBERID   BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN ROLEASSIGNMENT.ROLEID is 'Role ID assigned';
COMMENT ON COLUMN ROLEASSIGNMENT.MEMBERID is 'Member ID';
COMMENT ON COLUMN ROLEASSIGNMENT.MODDATE is 'Date of change';
COMMENT ON COLUMN ROLEASSIGNMENT.MODMEMBERID is 'Member who modifed the assignment';
COMMENT ON COLUMN ROLEASSIGNMENT.MEMBERVERSION is 'Member version for which the assignment was done';

--
-- Definition for TABLE RULEDEFAULTRULES:
--

CREATE TABLE RULEDEFAULTRULES
(
  ID            BIGINT,
  RULEMODELID   BIGINT,
  DOMAINDEFAULT CHAR(1)
)
;
-- Add comments to the columns
COMMENT ON COLUMN RULEDEFAULTRULES.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN RULEDEFAULTRULES.RULEMODELID IS 'ID Derived from Rulemodel';
COMMENT ON COLUMN RULEDEFAULTRULES.DOMAINDEFAULT IS 'Default Value';

--
-- Definition for TABLE RULEDOUBLEDATA:
--

CREATE TABLE RULEDOUBLEDATA
(
  ID                  BIGINT,
  RULEMODELID         BIGINT NOT NULL,
  RULEMODELINSTANCEID BIGINT NOT NULL,
  RULEPARAMETERID     BIGINT NOT NULL,
  VALUE               BIGINT NOT NULL,
  ACTIVE              CHAR(1) NOT NULL,
  MODMEMBERID         BIGINT NOT NULL,
  MODDATE             TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION          BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN RULEDOUBLEDATA.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN RULEDOUBLEDATA.RULEMODELID IS 'ID from rulemodel table';
COMMENT ON COLUMN RULEDOUBLEDATA.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN RULEDOUBLEDATA.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN RULEDOUBLEDATA.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN RULEDOUBLEDATA.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE RULEINTEGERDATA:
--

CREATE TABLE RULEINTEGERDATA
(
  ID                  BIGINT,
  RULEMODELID         BIGINT NOT NULL,
  RULEMODELINSTANCEID BIGINT NOT NULL,
  RULEPARAMETERID     BIGINT NOT NULL,
  VALUE               BIGINT NOT NULL,
  ACTIVE              CHAR(1) NOT NULL,
  MODMEMBERID         BIGINT NOT NULL,
  MODDATE             TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION          BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN RULEINTEGERDATA.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN RULEINTEGERDATA.RULEMODELID IS 'Mapping to ID from Rulemodel';
COMMENT ON COLUMN RULEINTEGERDATA.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN RULEINTEGERDATA.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN RULEINTEGERDATA.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN RULEINTEGERDATA.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE RULEMETAMODEL:
--

CREATE TABLE RULEMETAMODEL
(
  ID             BIGINT,
  ORGANIZATIONID BIGINT,
  NAME           VARCHAR(80) NOT NULL,
  ACTIVE         CHAR(1) NOT NULL,
  MODMEMBERID    BIGINT NOT NULL,
  MODDATE        TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION     BIGINT NOT NULL,
  TYPE           VARCHAR(30),
  DESCRIPTION    VARCHAR(250),
  RULEMETAMODEL  VARCHAR(250)
)
;
-- Add comments to the columns
COMMENT ON COLUMN RULEMETAMODEL.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN RULEMETAMODEL.ORGANIZATIONID IS 'Organization who owns the rulemetamodel data';
COMMENT ON COLUMN RULEMETAMODEL.NAME IS 'Name for Rulemetamodel';
COMMENT ON COLUMN RULEMETAMODEL.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN RULEMETAMODEL.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN RULEMETAMODEL.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN RULEMETAMODEL.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN RULEMETAMODEL.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN RULEMETAMODEL.RULEMETAMODEL IS 'Relative Path and Location of the mapped .xml to use';

--
-- Definition for TABLE RULEMODEL:
--

CREATE TABLE RULEMODEL
(
  ID             BIGINT,
  ORGANIZATIONID BIGINT,
  RULESETNAME    VARCHAR(80) NOT NULL,
  ACTIVE         CHAR(1) NOT NULL,
  MODMEMBERID    BIGINT NOT NULL,
  MODDATE        TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION     BIGINT NOT NULL,
  RULEMODEL      VARCHAR(250),
  RULEMODELNAME  VARCHAR(80)
)
;
-- Add comments to the columns
COMMENT ON COLUMN RULEMODEL.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN RULEMODEL.ORGANIZATIONID IS 'Organization that owns the rulemodel';
COMMENT ON COLUMN RULEMODEL.RULESETNAME IS 'Name of the Rule';
COMMENT ON COLUMN RULEMODEL.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN RULEMODEL.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN RULEMODEL.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN RULEMODEL.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN RULEMODEL.RULEMODEL IS 'Relative Path and location of the mapped .xml file';

--
-- Definition for TABLE RULEPARAMETER:
--

CREATE TABLE RULEPARAMETER
(
  OWNERID             BIGINT NOT NULL,
  OWNERTYPE           VARCHAR(30),
  PARAMETERPOSITION   BIGINT,
  PARAMETERNUMBER     VARCHAR(80),
  PARAMETERTYPE       VARCHAR(30),
  ASSOCIATEDOBJECTYPE VARCHAR(30),
  DEFINITION          VARCHAR(80),
  PREDEFINED          CHAR(1)
)
;
-- Add comments to the columns
COMMENT ON TABLE RULEPARAMETER IS ' ';
COMMENT ON COLUMN RULEPARAMETER.OWNERID IS 'Key of the rule model or rule meta model tables';
COMMENT ON COLUMN RULEPARAMETER.OWNERTYPE IS 'Will be either RULEMODEL or RULEMETAMODEL ';
COMMENT ON COLUMN RULEPARAMETER.PARAMETERPOSITION IS 'Position of the parameter in the rule model or rule meta model definition';
COMMENT ON COLUMN RULEPARAMETER.PARAMETERNUMBER IS 'A unique ID that is put into the XML definition of the parameter';
COMMENT ON COLUMN RULEPARAMETER.PARAMETERTYPE IS 'INTEGER / STRING / DOUBLE';
COMMENT ON COLUMN RULEPARAMETER.ASSOCIATEDOBJECTYPE IS 'Points to the type of biz object this is related to, can be NULL';
COMMENT ON COLUMN RULEPARAMETER.DEFINITION IS 'Points to the XML definition of the parameter';
COMMENT ON COLUMN RULEPARAMETER.PREDEFINED IS 'Identifies if a parameter was available out-of-box or was customized.';

--
-- Definition for TABLE RULESTRINGDATA:
--

CREATE TABLE RULESTRINGDATA
(
  ID                  BIGINT,
  RULEMODELID         BIGINT NOT NULL,
  RULEMODELINSTANCEID BIGINT NOT NULL,
  RULEPARAMETERID     BIGINT NOT NULL,
  VALUE               VARCHAR(4000) NOT NULL,
  ACTIVE              CHAR(1) NOT NULL,
  MODMEMBERID         BIGINT NOT NULL,
  MODDATE             TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION          BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN RULESTRINGDATA.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN RULESTRINGDATA.RULEMODELID IS 'Rulemodel  who owns the rulestringDATE';
COMMENT ON COLUMN RULESTRINGDATA.VALUE IS 'Short Description';
COMMENT ON COLUMN RULESTRINGDATA.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN RULESTRINGDATA.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN RULESTRINGDATA.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN RULESTRINGDATA.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE RULETEXTDATA:
--

CREATE TABLE RULETEXTDATA
(
  ID                  BIGINT,
  RULEMODELID         BIGINT,
  RULEMODELINSTANCEID BIGINT NOT NULL,
  RULEPARAMETERID     BIGINT NOT NULL,
  VALUE               VARCHAR(250) NOT NULL,
  ACTIVE              CHAR(1) NOT NULL,
  MODMEMBERID         BIGINT NOT NULL,
  MODDATE             TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION          BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN RULETEXTDATA.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN RULETEXTDATA.RULEMODELID IS 'Rulemodel which owns the textdata';
COMMENT ON COLUMN RULETEXTDATA.VALUE IS 'Short Description';
COMMENT ON COLUMN RULETEXTDATA.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN RULETEXTDATA.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN RULETEXTDATA.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN RULETEXTDATA.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE SCREEN:
--

CREATE TABLE SCREEN
(
  SCREENID          VARCHAR(30),
  LANGUAGECODE      VARCHAR(10),
  TITLE             VARCHAR(80) NOT NULL,
  HELPSCREENURL     VARCHAR(250)
)
;
-- Add comments to the columns
COMMENT ON COLUMN SCREEN.SCREENID IS 'ID of the screen';
COMMENT ON COLUMN SCREEN.LANGUAGECODE IS 'Stores Language Code  like EN, JP etc';
COMMENT ON COLUMN SCREEN.TITLE IS 'Title of the Screen';
COMMENT ON COLUMN SCREEN.HELPSCREENURL IS 'Help Screen ID if any';

--
-- Definition for TABLE SESSIONPRODUCTLIST:
--

CREATE TABLE SESSIONPRODUCTLIST
(
  SESSIONID     VARCHAR(250),
  OWNERID       BIGINT,
  PRODUCTKEYID  BIGINT,
  RECORDVERSION BIGINT,
  EFFECTIVEDATE VARCHAR(50)
)
;
-- Add comments to the columns
COMMENT ON TABLE SESSIONPRODUCTLIST IS 'This table can be used to keep list of products for a session and an owner. The owner could be any object, i.e. catalog.';
COMMENT ON COLUMN SESSIONPRODUCTLIST.SESSIONID IS 'Is the ID of HttpSession in which products were selected for subet.';
COMMENT ON COLUMN SESSIONPRODUCTLIST.OWNERID IS 'Is the ID ofowner object.';
COMMENT ON COLUMN SESSIONPRODUCTLIST.PRODUCTKEYID IS 'Is the ProductKeyID of selected product. ';
COMMENT ON COLUMN SESSIONPRODUCTLIST.RECORDVERSION IS 'Is the version of selected record.';
COMMENT ON COLUMN SESSIONPRODUCTLIST.EFFECTIVEDATE IS 'Is the effectiveDATE of selected record.';

--
-- Definition for TABLE SUBCATALOG:
--

CREATE TABLE SUBCATALOG
(
  ID                    BIGINT,
  MODVERSION            BIGINT,
  SOURCEORGANIZATIONID  BIGINT NOT NULL,
  CATALOGID             BIGINT NOT NULL,
  NAME                  VARCHAR(80) NOT NULL,
  DESCRIPTION           VARCHAR(250),
  FILTERCRITERION       VARCHAR(4000),
  ACTIVE                CHAR(1) NOT NULL,
  MODMEMBERID           BIGINT NOT NULL,
  MODDATE               TIMESTAMP WITHOUT TIME ZONE,
  TYPE                  VARCHAR(30),
  DATAFRAGMENTID        BIGINT,
  NUMBEROFMAPPEDCOLUMNS BIGINT,
  FEDFILTER             SMALLINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN SUBCATALOG.ID IS 'Unique ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN SUBCATALOG.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN SUBCATALOG.SOURCEORGANIZATIONID IS 'Organization Id';
COMMENT ON COLUMN SUBCATALOG.CATALOGID IS 'Catalog which owns the subcatalog';
COMMENT ON COLUMN SUBCATALOG.NAME IS 'Name of the Subcatalog';
COMMENT ON COLUMN SUBCATALOG.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN SUBCATALOG.FILTERCRITERION IS 'User specified filter criterion, required when subset is based on expression';
COMMENT ON COLUMN SUBCATALOG.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN SUBCATALOG.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN SUBCATALOG.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN SUBCATALOG.TYPE IS 'Basis for subset';
COMMENT ON COLUMN SUBCATALOG.DATAFRAGMENTID IS 'Data source which was used to compute subset, required if subset is based on list';
COMMENT ON COLUMN SUBCATALOG.NUMBEROFMAPPEDCOLUMNS IS 'No of data source columns mapped to master catalog';
COMMENT ON COLUMN SUBCATALOG.FEDFILTER IS 'the fed filter for subcatalog ';

--
-- Definition for TABLE SUBCATALOGATTRIBUTE:
--

CREATE TABLE SUBCATALOGATTRIBUTE
(
  SUBCATALOGID         BIGINT,
  POSITION             BIGINT,
  SUBCATALOGMODVERSION BIGINT,
  CATALOGATTRIBUTEID   BIGINT NOT NULL,
  DFATTRIBUTEID        BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN SUBCATALOGATTRIBUTE.SUBCATALOGID IS 'Subcatalog which owns the subcatalogattribute';
COMMENT ON COLUMN SUBCATALOGATTRIBUTE.POSITION IS 'Position of mapped column';
COMMENT ON COLUMN SUBCATALOGATTRIBUTE.CATALOGATTRIBUTEID IS 'ID from catalogattribute table';
COMMENT ON COLUMN SUBCATALOGATTRIBUTE.DFATTRIBUTEID IS 'Data Source attribute';

--
-- Definition for TABLE SUBSETPRODUCT:
--

CREATE TABLE SUBSETPRODUCT
(
  SUBCATALOGID         BIGINT NOT NULL,
  ID                   BIGINT,
  SUBCATALOGMODVERSION BIGINT,
  SOURCEORGANIZATIONID BIGINT NOT NULL,
  VALUE1               VARCHAR(2000),
  VALUE2               VARCHAR(2000),
  VALUE3               VARCHAR(2000),
  VALUE4               VARCHAR(2000),
  VALUE5               VARCHAR(2000)
)
;
-- Add comments to the columns
COMMENT ON COLUMN SUBSETPRODUCT.SUBCATALOGID IS 'ID from Subcatalog table';
COMMENT ON COLUMN SUBSETPRODUCT.ID IS 'Unique ID derived from PRODUCT_SEQ';
COMMENT ON COLUMN SUBSETPRODUCT.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN SUBSETPRODUCT.VALUE1 IS 'Value mapped to data source attribute in position 1';
COMMENT ON COLUMN SUBSETPRODUCT.VALUE2 IS 'Value mapped to data source attribute in position 2';
COMMENT ON COLUMN SUBSETPRODUCT.VALUE3 IS 'Value mapped to data source attribute in position 3';
COMMENT ON COLUMN SUBSETPRODUCT.VALUE4 IS 'Value mapped to data source attribute in position 4';
COMMENT ON COLUMN SUBSETPRODUCT.VALUE5 IS 'Value mapped to data source attribute in position 5';

--
-- Definition for TABLE SUBSETSEARCHCRITERION:
--

CREATE TABLE SUBSETSEARCHCRITERION
(
  SUBCATALOGID            BIGINT,
  SUBCATALOGVERSIONNUMBER BIGINT,
  CATALOGATTRIBUTEID      BIGINT,
  FROMVALUE               VARCHAR(250),
  TOVALUE                 VARCHAR(250),
  EXACTMATCH              CHAR(1),
  CASESENSITIVE           CHAR(1),
  MODDATE                 TIMESTAMP WITHOUT TIME ZONE,
  MODMEMBERID             BIGINT,
  ACTIVE                  CHAR(1),
  MODVERSION              BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN SUBSETSEARCHCRITERION.SUBCATALOGID IS ' ID of Sub Catalog ';
COMMENT ON COLUMN SUBSETSEARCHCRITERION.SUBCATALOGVERSIONNUMBER IS ' ModVersion of Sub Catalog. ';
COMMENT ON COLUMN SUBSETSEARCHCRITERION.CATALOGATTRIBUTEID IS ' ID of the searchable Catalog Attribute.';
COMMENT ON COLUMN SUBSETSEARCHCRITERION.FROMVALUE IS ' Searchable Value of the attribute, incase of NUMBER/DATE/float it is the start value to search.';
COMMENT ON COLUMN SUBSETSEARCHCRITERION.TOVALUE IS ' Incase of NUMBER/DATE/float it is the end value to search ';
COMMENT ON COLUMN SUBSETSEARCHCRITERION.EXACTMATCH IS ' Whether to find an exact match, applicable to Catalog Attributes of type String.';
COMMENT ON COLUMN SUBSETSEARCHCRITERION.CASESENSITIVE IS ' Whether to find a case sensitive match, applicable to Catalog Attributes of type String.';
COMMENT ON COLUMN SUBSETSEARCHCRITERION.MODDATE IS ' Modification DATE of the Sub Catalog. ';
COMMENT ON COLUMN SUBSETSEARCHCRITERION.MODMEMBERID IS ' ID of member who modified it.';
COMMENT ON COLUMN SUBSETSEARCHCRITERION.ACTIVE IS ' Whether the record is active or not ';
COMMENT ON COLUMN SUBSETSEARCHCRITERION.MODVERSION IS ' Modification Version of this criterion, same as SubCatalogVersionNumber ';

--
-- Definition for TABLE SUPPLIERSTATE:
--

CREATE TABLE SUPPLIERSTATE
(
  ID           BIGINT,
  ENTERPRISEID BIGINT,
  NAME         VARCHAR(80) NOT NULL,
  MODMEMBER    BIGINT NOT NULL,
  MODDATE      TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION   BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN SUPPLIERSTATE.ID IS 'Unique ID from MQ_SEQUENCE_1';
COMMENT ON COLUMN SUPPLIERSTATE.ENTERPRISEID IS 'Enterprise which owns the supplierstate';
COMMENT ON COLUMN SUPPLIERSTATE.NAME IS 'Name for the Supplierstate';
COMMENT ON COLUMN SUPPLIERSTATE.MODMEMBER IS 'Member who modifed the Record';
COMMENT ON COLUMN SUPPLIERSTATE.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN SUPPLIERSTATE.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE SUPPLIERSTATETRANSITION:
--

CREATE TABLE SUPPLIERSTATETRANSITION
(
  FROMSTATEID  BIGINT,
  TOSTATEID    BIGINT,
  ENTERPRISEID BIGINT,
  MODMEMBER    BIGINT NOT NULL,
  MODDATE      TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION   BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN SUPPLIERSTATETRANSITION.FROMSTATEID IS 'Unique ID from MQ_SEQUENCE_1';
COMMENT ON COLUMN SUPPLIERSTATETRANSITION.TOSTATEID IS 'Mapping ID for tostate';
COMMENT ON COLUMN SUPPLIERSTATETRANSITION.ENTERPRISEID IS 'Enterprise which owns the supplierstate';
COMMENT ON COLUMN SUPPLIERSTATETRANSITION.MODMEMBER IS 'Member who modifed the Record';
COMMENT ON COLUMN SUPPLIERSTATETRANSITION.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN SUPPLIERSTATETRANSITION.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE TRANSLATIONMAP:
--

CREATE TABLE TRANSLATIONMAP
(
  ID                  BIGINT,
  VERSION             BIGINT,
  OWNERORGANIZATIONID BIGINT,
  NAME                VARCHAR(80),
  TRANSLATOR          VARCHAR(80),
  DEFINITION          VARCHAR(250),
  ACTIVE              CHAR(1),
  MODMEMBERID         BIGINT NOT NULL,
  MODDATE             TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION          BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN TRANSLATIONMAP.ID IS 'Key is id + version';
COMMENT ON COLUMN TRANSLATIONMAP.VERSION IS 'Key is id + version';
COMMENT ON COLUMN TRANSLATIONMAP.OWNERORGANIZATIONID IS 'Owner organization.Set to "1" for Standard.';
COMMENT ON COLUMN TRANSLATIONMAP.NAME IS 'Name.';
COMMENT ON COLUMN TRANSLATIONMAP.TRANSLATOR IS 'XSLT, xpEDI, Mercator.';
COMMENT ON COLUMN TRANSLATIONMAP.DEFINITION IS 'Pointer to file containing Definition.';
COMMENT ON COLUMN TRANSLATIONMAP.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN TRANSLATIONMAP.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN TRANSLATIONMAP.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN TRANSLATIONMAP.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE WORKFLOWDEFINITION:
--

CREATE TABLE WORKFLOWDEFINITION
(
  ID                  BIGINT,
  MODVERSION          BIGINT,
  OWNERORGANIZATIONID BIGINT,
  NAME                VARCHAR(80),
  DEFINITION          VARCHAR(250),
  ACTIVE              CHAR(1),
  MODMEMBERID         BIGINT NOT NULL,
  MODDATE             TIMESTAMP WITHOUT TIME ZONE,
  DESCRIPTION         VARCHAR(250),
  SCOPE               VARCHAR(30),
  USERFILENAME        VARCHAR(250),
  EFFECTIVEDATE       TIMESTAMP WITHOUT TIME ZONE
)
;
-- Add comments to the columns
COMMENT ON COLUMN WORKFLOWDEFINITION.ID IS 'Unique ID.  Key is id + version.';
COMMENT ON COLUMN WORKFLOWDEFINITION.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN WORKFLOWDEFINITION.OWNERORGANIZATIONID IS 'Owner organization.Set to "1" for Standard.';
COMMENT ON COLUMN WORKFLOWDEFINITION.NAME IS 'Name.';
COMMENT ON COLUMN WORKFLOWDEFINITION.DEFINITION IS 'Pointer to file containing Definition.';
COMMENT ON COLUMN WORKFLOWDEFINITION.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN WORKFLOWDEFINITION.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN WORKFLOWDEFINITION.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN WORKFLOWDEFINITION.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN WORKFLOWDEFINITION.USERFILENAME IS 'filename';
COMMENT ON COLUMN WORKFLOWDEFINITION.EFFECTIVEDATE IS 'Timestamp';

--
-- Definition for TABLE WORKFLOWFORM:
--

CREATE TABLE WORKFLOWFORM
(
  ID                        BIGINT,
  VERSION                   BIGINT,
  OWNERORGANIZATIONID       BIGINT,
  NAME                      VARCHAR(80),
  DEFINITION                VARCHAR(250),
  ACTIVE                    CHAR(1),
  MODMEMBERID               BIGINT NOT NULL,
  MODDATE                   TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION                BIGINT NOT NULL,
  TYPE                      VARCHAR(30),
  ACTIONABLE                CHAR(1) NOT NULL,
  MAILTEMPLATEID            BIGINT default 0,
  REASSIGNMAILTEMPLATEID    BIGINT default 0,
  FORMID                    BIGINT default 0,
  DELEGMAILTEMPLATEID       BIGINT default 0,
  MASSAPPROVALALLOWED       CHAR(1) default 'Y',
  MASSAPPROVALHTMLID        BIGINT default 0
)
;
-- Add comments to the columns
COMMENT ON COLUMN WORKFLOWFORM.ID IS 'Unique Id derived from sequence';
COMMENT ON COLUMN WORKFLOWFORM.VERSION IS 'Key is id + version.';
COMMENT ON COLUMN WORKFLOWFORM.OWNERORGANIZATIONID IS 'Owner organization.Set to "1" for Standard.';
COMMENT ON COLUMN WORKFLOWFORM.NAME IS 'Name';
COMMENT ON COLUMN WORKFLOWFORM.DEFINITION IS 'Entity Description';
COMMENT ON COLUMN WORKFLOWFORM.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN WORKFLOWFORM.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN WORKFLOWFORM.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN WORKFLOWFORM.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN WORKFLOWFORM.TYPE IS 'DOMAIN=''WORKFLOWFORMTYPE''TASK - for InBox.EMAIL - for emails';
COMMENT ON COLUMN WORKFLOWFORM.ACTIONABLE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN WORKFLOWFORM.MAILTEMPLATEID IS 'Associated template for mail presentation';
COMMENT ON COLUMN WORKFLOWFORM.REASSIGNMAILTEMPLATEID IS 'Associated template for reassignment mail presentation';
COMMENT ON COLUMN WORKFLOWFORM.FORMID IS 'Associated form';
COMMENT ON COLUMN WORKFLOWFORM.DELEGMAILTEMPLATEID IS 'Associated template for delegation mail presentation';
COMMENT ON COLUMN WORKFLOWFORM.MASSAPPROVALALLOWED IS 'Is mass approval of this workitem allowed.';
COMMENT ON COLUMN WORKFLOWFORM.MASSAPPROVALHTMLID IS 'Form to display when mass approval is done.';

--
-- Definition for TABLE WORKITEMLOCK:
--     

CREATE TABLE WORKITEMLOCK
(
  PROCESSLOGID BIGINT NOT NULL,
  LOCKEDBY     BIGINT NOT NULL,
  EXPIRYMETHOD VARCHAR(80) not null ,
  LOCKINTERVAL BIGINT ,
  EXPIRYDATE   TIMESTAMP WITHOUT TIME ZONE ,
  MODDATE      TIMESTAMP WITHOUT TIME ZONE,
  MODMEMBERID  BIGINT NOT NULL
) 
;
-- Add comments to the columns
COMMENT ON COLUMN WORKITEMLOCK.PROCESSLOGID IS 'Process Log ID for the workitem - this is unit of locking';
COMMENT ON COLUMN WORKITEMLOCK.LOCKEDBY IS 'Member who owns the lock'; 
COMMENT ON COLUMN WORKITEMLOCK.LOCKINTERVAL IS 'Number of seconds lock will be in effect. Specify either the interval or expiry DATE'; 
COMMENT ON COLUMN WORKITEMLOCK.EXPIRYDATE IS 'Expiry DATE of the lock, if any'; 
COMMENT ON COLUMN WORKITEMLOCK.EXPIRYMETHOD IS 'Expiry methods - NONE, RELATIVE or ABSOLUTE'; 
COMMENT ON COLUMN WORKITEMLOCK.MODDATE IS 'Date on which lock was placed';
COMMENT ON COLUMN WORKITEMLOCK.MODMEMBERID IS 'Member who last modifed the Record - it may not be same as the member who locked the workitem';
COMMENT ON TABLE WORKITEMLOCK IS 'Active locks for workitems. Locks are managed for a process log step. When locks are unlocked, they are remvoed from this table. When locks expire, they are removed from this table on first access. It is possible to have some entries which have expired but still not removed as these have not been accessed by the application since expiry.' ;

--
-- Definition for TABLE ROLEASSIGHISTORY
--
CREATE TABLE ROLEASSIGHISTORY
(
  ROLEID        BIGINT NOT NULL,
  MEMBERID      BIGINT NOT NULL,
  MEMBERVERSION BIGINT,
  MODDATE       TIMESTAMP WITHOUT TIME ZONE,
  MODMEMBERID   BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN ROLEASSIGHISTORY.ROLEID is 'Role ID assigned';
COMMENT ON COLUMN ROLEASSIGHISTORY.MEMBERID is 'Member ID';
COMMENT ON COLUMN ROLEASSIGHISTORY.MODDATE is 'Date of change';
COMMENT ON COLUMN ROLEASSIGHISTORY.MODMEMBERID is 'Member who modifed the assignment';
COMMENT ON COLUMN ROLEASSIGHISTORY.MEMBERVERSION is 'Member version for which the assignment was done';
COMMENT ON TABLE ROLEASSIGHISTORY is 'History of role assignment.';

--
-- Definition for TABLE MEMBERHISTORY
--

CREATE TABLE MEMBERHISTORY
(
  ID                  BIGINT NOT NULL,
  ENTERPRISEID        BIGINT,
  DOMAIN              VARCHAR(80),
  USERNAME            VARCHAR(80),
  LASTNAME            VARCHAR(80),
  FIRSTNAME           VARCHAR(80),
  MIDDLENAME          VARCHAR(80),
  SECURITYTYPE        VARCHAR(30),
  SECURITY            VARCHAR(250),
  DESCRIPTION         VARCHAR(512),
  ACTIVE              CHAR(1) not null,
  MODMEMBERID         BIGINT NOT NULL,
  MODDATE             TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION          BIGINT NOT NULL,
  DELEGATIONACTIVE    CHAR(1) default 'N' not null,
  DELEGATIONSTARTDATE TIMESTAMP WITHOUT TIME ZONE,
  DELEGATIONENDDATE   TIMESTAMP WITHOUT TIME ZONE,
  NOTIFYOFDELEGATION  CHAR(1),
  AUTOREVERTFLAG      CHAR(1),
  LOCALE              VARCHAR(30),
  LANGUAGE            VARCHAR(30),
  PARTITIONKEY        BIGINT
) 
;
-- Add comments to the columns
COMMENT ON COLUMN MEMBERHISTORY.ID is 'Unique ID';
COMMENT ON COLUMN MEMBERHISTORY.ENTERPRISEID is 'Enterprise which owns the member';
COMMENT ON COLUMN MEMBERHISTORY.DOMAIN is 'Domain Name of the Member';
COMMENT ON COLUMN MEMBERHISTORY.USERNAME is 'User Name / Login Name';
COMMENT ON COLUMN MEMBERHISTORY.LASTNAME is 'Last Name of the Member';
COMMENT ON COLUMN MEMBERHISTORY.FIRSTNAME is 'First name of the member';
COMMENT ON COLUMN MEMBERHISTORY.MIDDLENAME is 'Middle name of the member';
COMMENT ON COLUMN MEMBERHISTORY.SECURITY is 'Pass Code';
COMMENT ON COLUMN MEMBERHISTORY.DESCRIPTION is 'Entity Description';
COMMENT ON COLUMN MEMBERHISTORY.ACTIVE is 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN MEMBERHISTORY.MODMEMBERID is 'Member who modifed the Record';
COMMENT ON COLUMN MEMBERHISTORY.MODDATE is 'Date of Modification';
COMMENT ON COLUMN MEMBERHISTORY.MODVERSION is 'Current version of the Entity';
COMMENT ON COLUMN MEMBERHISTORY.PARTITIONKEY is 'Partition key used for application partitioning';
COMMENT ON TABLE MEMBERHISTORY is 'History of changes to member';

--
-- Definition for TABLE RESOURCEACLHISTORY
--

CREATE TABLE RESOURCEACLHISTORY
(
  RESOURCEID   BIGINT NOT NULL,
  GRANTEEID    BIGINT NOT NULL,
  GRANTEETYPE  VARCHAR(80) not null,
  RESOURCETYPE VARCHAR(80) not null,
  RESACCESS    VARCHAR(30) not null,
  ENTERPRISEID BIGINT,
  ALLOW        CHAR(1),
  ACTIVE       CHAR(1),
  MODDATE      TIMESTAMP WITHOUT TIME ZONE,
  MODMEMBERID  BIGINT NOT NULL
) 
;
-- Add comments to the columns
COMMENT ON COLUMN RESOURCEACLHISTORY.RESOURCEID is 'id of the object for which the accesses is being given';
COMMENT ON COLUMN RESOURCEACLHISTORY.GRANTEEID is 'id of the user/role which is being granted';
COMMENT ON COLUMN RESOURCEACLHISTORY.GRANTEETYPE is 'type of the grantee , could be a user or role';
COMMENT ON COLUMN RESOURCEACLHISTORY.RESOURCETYPE is 'Type of the object';
COMMENT ON COLUMN RESOURCEACLHISTORY.RESACCESS is 'The type of access being granted';
COMMENT ON COLUMN RESOURCEACLHISTORY.ENTERPRISEID is 'Enterprise ID';
COMMENT ON COLUMN RESOURCEACLHISTORY.ALLOW is 'A flag which says if the access is allowed or denied';
COMMENT ON COLUMN RESOURCEACLHISTORY.ACTIVE is 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN RESOURCEACLHISTORY.MODDATE is 'Date of Modification';
COMMENT ON COLUMN RESOURCEACLHISTORY.MODMEMBERID is 'Member who modifed the Record';
COMMENT ON TABLE RESOURCEACLHISTORY is 'History of permissions assignment.';


--
-- Definition for TABLE RECORDAPPROVAL
--
CREATE TABLE RECORDAPPROVAL
(
  PROCESSLOGID          BIGINT NOT NULL,
  WORKITEMID            BIGINT NOT NULL,
  RECORDKEYID           BIGINT NOT NULL,
  RECORDVERSION         BIGINT DEFAULT 0 NOT NULL,
  STATUS                VARCHAR(10) DEFAULT 'Pending',
  REVIEWEDBY            BIGINT,
  REVIEWDATE            TIMESTAMP WITHOUT TIME ZONE
)
;
-- Add comments to the columns
COMMENT ON TABLE RECORDAPPROVAL IS 'Table which keeps approval status of records involved in a workitem' ;
COMMENT ON COLUMN RECORDAPPROVAL.processlogid IS 'ID of the ProcessLog for CreateWorkItem activity';
COMMENT ON COLUMN RECORDAPPROVAL.workitemid IS 'ID of the WorkItem';
COMMENT ON COLUMN RECORDAPPROVAL.recordkeyid IS 'ProductKeyID of the record of which approval status has to be changed';
COMMENT ON COLUMN RECORDAPPROVAL.recordversion IS 'Record version of the record of which approval status has to be changed';
COMMENT ON COLUMN RECORDAPPROVAL.status IS 'New Approval status for the record';
COMMENT ON COLUMN RECORDAPPROVAL.reviewedby IS 'ID of the member who changed the status of the record';
COMMENT ON COLUMN RECORDAPPROVAL.reviewDate IS 'Date on which the status of record was changed'; 

--
-- Definition for TABLE RECORDAPPROVALHISTORY
--
CREATE TABLE RECORDAPPROVALHISTORY
(
  PROCESSLOGID            BIGINT NOT NULL,
  WORKITEMID              BIGINT NOT NULL,
  RECORDKEYID             BIGINT NOT NULL,
  RECORDVERSION           BIGINT DEFAULT 0 NOT NULL,
  STATUS                  VARCHAR(10) DEFAULT 'Pending',
  REVIEWEDBY              BIGINT,
  REVIEWDATE              TIMESTAMP WITHOUT TIME ZONE
)
;
-- Add comments to the columns
COMMENT ON TABLE RECORDAPPROVALHISTORY IS 'Table which keeps history of the approval status of records involved in a workitem' ;
COMMENT ON COLUMN RECORDAPPROVALHISTORY.processlogid IS 'ID of the ProcessLog for CreateWorkItem activity';
COMMENT ON COLUMN RECORDAPPROVALHISTORY.workitemid IS 'ID of the WorkItem';
COMMENT ON COLUMN RECORDAPPROVALHISTORY.recordkeyid IS 'ProductKeyID of the record of which approval status has to be changed';
COMMENT ON COLUMN RECORDAPPROVALHISTORY.recordversion IS 'Record version of the record of which approval status has to be changed';
COMMENT ON COLUMN RECORDAPPROVALHISTORY.status IS 'New Approval status for the record';
COMMENT ON COLUMN RECORDAPPROVALHISTORY.reviewedby IS 'ID of the member who changed the status of the record';
COMMENT ON COLUMN RECORDAPPROVALHISTORY.reviewDate IS 'Date on which the status of record was changed';


--
-- Definition for TABLE RESOURCEACLHISTORY
--
CREATE TABLE FUNC2SCREENMAP
(
  FUNCID   BIGINT NOT NULL,
  SCREENID VARCHAR(10) NOT NULL
)
;
-- Add comments to the columns
COMMENT ON TABLE FUNC2SCREENMAP IS 'Allowed screens for functions';
COMMENT ON COLUMN FUNC2SCREENMAP.SCREENID IS 'SCREEN ID ';
COMMENT ON COLUMN FUNC2SCREENMAP.FUNCID IS 'Function ID';

--
-- Definition for TABLE RECORDSYNCLOG
--
CREATE TABLE RECORDSYNCLOG
(
  PRODUCTKEYID          BIGINT NOT NULL,
  CATALOGID             BIGINT NOT NULL,
  PRODUCTVERSION        BIGINT NOT NULL,
  CHANNELORGANIZATIONID BIGINT NOT NULL,
  PARTNERORGANIZATIONID BIGINT NOT NULL,
  OPERATION             VARCHAR(30) NOT NULL,
  SUBOPERATION          VARCHAR(80) NOT NULL,
  EVENTID               BIGINT NOT NULL,
  MODDATE               TIMESTAMP WITHOUT TIME ZONE,
  MODMEMBERID           BIGINT NOT NULL,
  PROCESSID             BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN RECORDSYNCLOG.PRODUCTKEYID IS 'Record key id';
COMMENT ON COLUMN RECORDSYNCLOG.CATALOGID IS 'Repository ID, redundant information';
COMMENT ON COLUMN RECORDSYNCLOG.PRODUCTVERSION IS 'Record Version';
COMMENT ON COLUMN RECORDSYNCLOG.CHANNELORGANIZATIONID IS 'ID of datapool, if applicable';
COMMENT ON COLUMN RECORDSYNCLOG.PARTNERORGANIZATIONID IS 'ID of back end system, if applicable';
COMMENT ON COLUMN RECORDSYNCLOG.OPERATION IS 'Operation performed';
COMMENT ON COLUMN RECORDSYNCLOG.SUBOPERATION IS 'Sub opertaion performed';
COMMENT ON COLUMN RECORDSYNCLOG.EVENTID IS 'Which event caused this operation';
COMMENT ON COLUMN RECORDSYNCLOG.MODDATE IS 'DATE of operation';
COMMENT ON COLUMN RECORDSYNCLOG.MODMEMBERID IS 'User responsible for the operation';
COMMENT ON TABLE  RECORDSYNCLOG IS 'Consolidated operations for sync of records.' ;
COMMENT ON COLUMN RECORDSYNCLOG.PROCESSID IS 'process ID which created this product log';

--
-- Definition for TABLE RELATIONSHIP
--
CREATE TABLE RELATIONSHIP
(
  OWNERID       BIGINT,
  PARENTID      BIGINT,
  CHILDID       BIGINT,
  TYPE        BIGINT,
  MODDATE       TIMESTAMP WITHOUT TIME ZONE,
  PARENTVERSION BIGINT,
  CHILDVERSION  BIGINT,
  QUANTITY      BIGINT DEFAULT 0 ,
  MODMEMBERID   BIGINT NOT NULL,
  ACTIVE        CHAR(1) NOT NULL,
  CHILDOWNERID  BIGINT,
  RELATIONID    BIGINT DEFAULT 0,
  PARTITIONKEY  BIGINT,
  EFFECTIVEDATE TIMESTAMP WITHOUT TIME ZONE
)
;
-- Add comments to the columns
COMMENT ON COLUMN RELATIONSHIP.OWNERID IS 'id of the owner fo this relationship record';
COMMENT ON COLUMN RELATIONSHIP.PARENTID IS 'id of the parent';
COMMENT ON COLUMN RELATIONSHIP.CHILDID IS 'id of the child';
COMMENT ON COLUMN RELATIONSHIP.TYPE IS 'type of the relationship between parent and child.';
COMMENT ON COLUMN RELATIONSHIP.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN RELATIONSHIP.PARENTVERSION IS 'version of the parent';
COMMENT ON COLUMN RELATIONSHIP.CHILDVERSION IS 'version of the child';
COMMENT ON COLUMN RELATIONSHIP.QUANTITY IS 'Number of children in the relationship.';
COMMENT ON COLUMN RELATIONSHIP.MODMEMBERID IS 'Member who modified the record';
COMMENT ON COLUMN RELATIONSHIP.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN RELATIONSHIP.CHILDOWNERID IS 'ID of the Child Owner';
COMMENT ON COLUMN RELATIONSHIP.PARTITIONKEY is 'Partition key used for application partitioning';
COMMENT ON COLUMN RELATIONSHIP.EFFECTIVEDATE IS 'Store the future effective date for the relationship';

--
-- Definition for TABLE EVENT
--

CREATE TABLE EVENT
(
  ID                    BIGINT,
  PARENTID              BIGINT,
  EVENTTYPE             VARCHAR(30),
  OWNERORGANIZATIONID   BIGINT,
  CHANNELORGANIZATIONID BIGINT,
  PARTNERORGANIZATIONID BIGINT,
  CONVERSATIONID        BIGINT,
  EVENTDATE             TIMESTAMP WITHOUT TIME ZONE,
  EVENTSTATE            VARCHAR(30),
  STATUS                VARCHAR(30),
  EVENTDESCRIPTOR       VARCHAR(30),
  DEPLOYMENTMODE        VARCHAR(30),
  MODMEMBERID           BIGINT NOT NULL,
  MODDATE               TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION            BIGINT NOT NULL,
  REGISTRATIONORDER     VARCHAR(250),
  PARTITIONKEY          BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN EVENT.ID IS 'Sequence NUMBER';
COMMENT ON COLUMN EVENT.PARENTID IS 'EventID of event that initiated this one.  0 if none.';
COMMENT ON COLUMN EVENT.EVENTTYPE IS 'DOMAIN=''EVENTINITMECH'' +DOMAIN=''EVENTAPPAREA''DOC | USER "-"CAT | ORDER | DIR | BI';
COMMENT ON COLUMN EVENT.OWNERORGANIZATIONID IS 'Supplier Organization.';
COMMENT ON COLUMN EVENT.CHANNELORGANIZATIONID IS 'Marketplace/Channel Organization.';
COMMENT ON COLUMN EVENT.PARTNERORGANIZATIONID IS 'Buyer Organization.';
COMMENT ON COLUMN EVENT.CONVERSATIONID IS 'An event can belong to one conversation.';
COMMENT ON COLUMN EVENT.EVENTDATE IS 'when event occurred.  Make sure to include time!';
COMMENT ON COLUMN EVENT.EVENTSTATE IS 'Event Specific. Set by "UpDATEEvent" action.';
COMMENT ON COLUMN EVENT.STATUS IS 'DOMAIN=''GENERALSTATUS''SUCCESSERRORINPROGRESSWARNING Set depending on exceptions, errors, etc.';
COMMENT ON COLUMN EVENT.EVENTDESCRIPTOR IS 'For DOC events put entries from DOCTYPE Domain here.  For USER events put APPFUNCTION Domain entries here.APPFUNCTION:CatEditionPubCatEditionReSend';
COMMENT ON COLUMN EVENT.DEPLOYMENTMODE IS 'From DomainType="DeploymentMode":ProductionTest';
COMMENT ON COLUMN EVENT.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN EVENT.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN EVENT.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN EVENT.REGISTRATIONORDER IS 'Order in which message was registered.';
COMMENT ON COLUMN EVENT.PARTITIONKEY  is 'Partition key used for application partitioning';

--
-- Definition for TABLE PRODUCTKEY:
--

CREATE TABLE PRODUCTKEY
(
  ID                    BIGINT,
  SOURCEORGANIZATIONID  BIGINT,
  SOURCEPRODUCTKEYID    BIGINT,
  AGENCY                VARCHAR(80),
  CHANNELORGANIZATIONID BIGINT,
  NAME                  VARCHAR(255) NOT NULL,
  EXTENSION             VARCHAR(255),
  LASTVERSION           BIGINT,
  ACTIVE                CHAR(1),
  MODMEMBERID           BIGINT NOT NULL,
  MODDATE               TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION            BIGINT NOT NULL,
  PRODUCTSTATE          VARCHAR(30),
  CATALOGID             BIGINT DEFAULT 0  NOT NULL,
  PARTITIONKEY          BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN PRODUCTKEY.ID IS 'Unique ID derived from PROCESSLOG_SEQ';
COMMENT ON COLUMN PRODUCTKEY.SOURCEORGANIZATIONID IS 'Owner of this product:Supplier Organization.';
COMMENT ON COLUMN PRODUCTKEY.SOURCEPRODUCTKEYID IS 'ID of product as defined by source organization.This is the common key that ties the other products together.';
COMMENT ON COLUMN PRODUCTKEY.AGENCY IS '"SOURCE" for the SourceOrganizationID.GTIN, EAN, etc.';
COMMENT ON COLUMN PRODUCTKEY.CHANNELORGANIZATIONID IS 'If specific to a channel.  Set to "0" if valid across all channels.';
COMMENT ON COLUMN PRODUCTKEY.NAME IS 'Name';
COMMENT ON COLUMN PRODUCTKEY.EXTENSION IS 'Extension';
COMMENT ON COLUMN PRODUCTKEY.LASTVERSION IS 'latest version of this product.';
COMMENT ON COLUMN PRODUCTKEY.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN PRODUCTKEY.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN PRODUCTKEY.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN PRODUCTKEY.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN PRODUCTKEY.PRODUCTSTATE IS 'State of this product.  Used to represent the state on the channel.  For UCCnet this will be used to indicate whether a product was ever published.  The DOMAIN is "UCCNETPRODUCTSTATE''NEVERPUBLISHEDPUBLISHED';
COMMENT ON COLUMN PRODUCTKEY.PARTITIONKEY is 'Partition key used for application partitioning';

--
-- Definition for TABLE RESOURCEACLHISTORY
--
CREATE TABLE CONVERSATION
(
  ID           BIGINT,
  ENTERPRISEID BIGINT,
  KEY          VARCHAR(250),
  CONVSTATE    VARCHAR(250) NOT NULL,
  MODDATE      TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION   BIGINT NOT NULL,
  MODMEMBERID  BIGINT NOT NULL,
  EVENTID      BIGINT NOT NULL,
  PARTITIONKEY BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN CONVERSATION.ID IS 'Unique ID';
COMMENT ON COLUMN CONVERSATION.ENTERPRISEID IS 'ID from Enterprise';
COMMENT ON COLUMN CONVERSATION.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CONVERSATION.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN CONVERSATION.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN CONVERSATION.EVENTID IS 'Event which created it - redundant data';
COMMENT ON COLUMN CONVERSATION.PARTITIONKEY is 'Partition key used for application partitioning';

--
-- Definition for TABLE RECORDCOLLECTION:
--

CREATE TABLE RECORDCOLLECTION
(
  ID                BIGINT,
  TYPE              VARCHAR(30) NOT NULL,
  READONLYINDICATOR CHAR(1) NOT NULL,
  MODMEMBERID       BIGINT,
  MODDATE           TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION        BIGINT,
  PARTITIONKEY      BIGINT
)
;
-- Add comments to the columns
COMMENT ON TABLE RECORDCOLLECTION IS ' A record collection identifies a list of product';
COMMENT ON COLUMN RECORDCOLLECTION.ID IS ' Id of the record collection, generated based on MQ_Sequence 1 ';
COMMENT ON COLUMN RECORDCOLLECTION.TYPE IS ' Indicates type of record collection. Currently a record collection can be of Master catalog or buyerCatalog.';
COMMENT ON COLUMN RECORDCOLLECTION.READONLYINDICATOR IS ' Indicates if the record collection is read only or not.';
COMMENT ON COLUMN RECORDCOLLECTION.PARTITIONKEY is 'Partition key used for application partitioning';

--
-- Definition for TABLE RESOURCEACLHISTORY
--
CREATE TABLE GENERALDOCUMENT
(
  ID                      BIGINT,
  FILENAME                VARCHAR(250),
  FORMAT                  VARCHAR(80) NOT NULL,
  TYPE                    VARCHAR(80) NOT NULL,
  STATE                   VARCHAR(80) NOT NULL,
  CONVERSATIONID          BIGINT,
  ENTERPRISEID            BIGINT,
  PARENTGENERALDOCUMENTID BIGINT,
  DERIVEDID               BIGINT,
  ATTACHMENTID            BIGINT,
  PAYLOADID               VARCHAR(250),
  MODMEMBER               BIGINT NOT NULL,
  MODDATE                 TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION              BIGINT NOT NULL,
  PARTITIONKEY            BIGINT,
  DOCUMENT                BYTEA,
  COMPRESSIONTYPE         BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN GENERALDOCUMENT.ID IS 'Unique Key';
COMMENT ON COLUMN GENERALDOCUMENT.FILENAME IS 'File name to which the contents have been stored';
COMMENT ON COLUMN GENERALDOCUMENT.FORMAT IS 'MLXML or other xml/non xml format of the document';
COMMENT ON COLUMN GENERALDOCUMENT.TYPE IS 'Type of business document';
COMMENT ON COLUMN GENERALDOCUMENT.STATE IS 'State of the document';
COMMENT ON COLUMN GENERALDOCUMENT.CONVERSATIONID IS 'The conversation to which the document belongs';
COMMENT ON COLUMN GENERALDOCUMENT.ENTERPRISEID IS 'Enterprise which owns the document';
COMMENT ON COLUMN GENERALDOCUMENT.PARENTGENERALDOCUMENTID IS 'If this document is an attachment, then the id of the document which contains this one';
COMMENT ON COLUMN GENERALDOCUMENT.DERIVEDID IS 'Id of the document from which this document was derived/translated etc.';
COMMENT ON COLUMN GENERALDOCUMENT.ATTACHMENTID IS 'Unique Key';
COMMENT ON COLUMN GENERALDOCUMENT.PAYLOADID IS 'A unique reference Number used to identify the document outside the system';
COMMENT ON COLUMN GENERALDOCUMENT.MODMEMBER IS 'Member who modifed the Record';
COMMENT ON COLUMN GENERALDOCUMENT.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN GENERALDOCUMENT.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN GENERALDOCUMENT.PARTITIONKEY is 'Partition key used for application partitioning';
COMMENT ON COLUMN GENERALDOCUMENT.DOCUMENT IS 'Actual document data';
COMMENT ON COLUMN GENERALDOCUMENT.COMPRESSIONTYPE IS 'Document compression type';

--
-- Definition for TABLE PROCESS:
--

CREATE TABLE PROCESS
(
  ID                    BIGINT,
  PROCESSORGANIZATIONID BIGINT,
  PARENTID              BIGINT,
  TYPE                  VARCHAR(30),
  DEFINITIONID          BIGINT,
  DEFINITIONVERSION     BIGINT,
  EVENTID               BIGINT,
  STARTDATE             TIMESTAMP WITHOUT TIME ZONE,
  STATUS                VARCHAR(30),
  MODMEMBERID           BIGINT NOT NULL,
  MODDATE               TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION            BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN PROCESS.ID IS 'Unique ID derived from PROCESSLOG_SEQ';
COMMENT ON COLUMN PROCESS.PROCESSORGANIZATIONID IS 'Organization in who''s context this process is executed.';
COMMENT ON COLUMN PROCESS.PARENTID IS 'ProcessID of event that initiated this one.';
COMMENT ON COLUMN PROCESS.TYPE IS 'Process Type describes how the process is defined.  Right now we have 2 types of definition: CatalogEdition and Workflows. DOMAIN=''PROCESSTYPE''CATALOGEDWORKFLOW';
COMMENT ON COLUMN PROCESS.DEFINITIONID IS 'Process Definition ID';
COMMENT ON COLUMN PROCESS.DEFINITIONVERSION IS 'Process Definition Version';
COMMENT ON COLUMN PROCESS.EVENTID IS 'Foreign Key To EventID.If none then EventID = 0.';
COMMENT ON COLUMN PROCESS.STARTDATE IS 'Date started.';
COMMENT ON COLUMN PROCESS.STATUS IS 'Internal Status for this Process.';
COMMENT ON COLUMN PROCESS.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN PROCESS.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN PROCESS.MODVERSION IS 'Current version of the Entity';

--
-- Definition for TABLE CONVERSATIONKEY:
--
CREATE TABLE CONVERSATIONKEY
(
  ID             BIGINT,
  CONVERSATIONID BIGINT,
  ENTERPRISEID   BIGINT,
  KEY            VARCHAR(250) NOT NULL,
  MODDATE        TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION     BIGINT NOT NULL,
  MODMEMBERID    BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN CONVERSATIONKEY.ID IS 'Unique ID';
COMMENT ON COLUMN CONVERSATIONKEY.CONVERSATIONID IS 'ID derived from Conversation';
COMMENT ON COLUMN CONVERSATIONKEY.ENTERPRISEID IS 'ID from Enterprise';
COMMENT ON COLUMN CONVERSATIONKEY.KEY IS 'Derived Field';
COMMENT ON COLUMN CONVERSATIONKEY.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CONVERSATIONKEY.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN CONVERSATIONKEY.MODMEMBERID IS 'Member who modifed the Record';

--
-- Definition for TABLE EVENTDETAIL:
--
       
CREATE TABLE EVENTDETAIL
(
  EVENTID     BIGINT,
  NAME        VARCHAR(80),
  DESCRIPTION VARCHAR(250),
  VALUETYPE   VARCHAR(30),
  VALUE       VARCHAR(4000),
  SEQUENCE    BIGINT DEFAULT 1,
  PROCESSLOGID   BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN EVENTDETAIL.EVENTID IS 'Foreign Key to Event.ID';
COMMENT ON COLUMN EVENTDETAIL.NAME IS 'Name of the detail.';
COMMENT ON COLUMN EVENTDETAIL.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN EVENTDETAIL.VALUETYPE IS 'DOMAIN=''DETAILTYPE'' :STRINGIDNUMBERDATE';
COMMENT ON COLUMN EVENTDETAIL.VALUE IS 'all types are converted to string';
COMMENT ON COLUMN EVENTDETAIL.SEQUENCE IS 'Sequence of the event';
COMMENT ON COLUMN EVENTDETAIL.PROCESSLOGID IS 'Step which created this entry';
--
-- Definition for TABLE GOLDENCOPY:
--

CREATE TABLE GOLDENCOPY
(
  PRODUCTKEY BIGINT,
  CATALOGID  BIGINT,
  VERSION    BIGINT NOT NULL,
  MODDATE    TIMESTAMP WITHOUT TIME ZONE
)
;
-- Add comments to the columns

--
-- Definition for TABLE PRINCIPALKEY:
--

CREATE TABLE PRINCIPALKEY
(
  CATALOGID            BIGINT,
  PRODUCTKEYID         BIGINT,
  MODVERSION           BIGINT,
  CATALOGVERSIONNUMBER BIGINT NOT NULL,
  ACTIVE               VARCHAR(1) NOT NULL,
  CREATIONDATE         TIMESTAMP WITHOUT TIME ZONE,
  MODDATE              TIMESTAMP WITHOUT TIME ZONE,
  MODMEMBERID          BIGINT NOT NULL,
  LASTIMPORTTIME       BIGINT NOT NULL,
  CHECKSUM             BIGINT NOT NULL,
  STATE                VARCHAR(255) NOT NULL,
  PARENTVERSION        BIGINT NOT NULL,
  OWNERID              BIGINT,
  OWNERTYPE            BIGINT,
  LASTCONFIRMEDVERSION BIGINT,
  PROCESSLOGID         BIGINT,
  BATCHID              BIGINT,
  EFFECTIVEDATE        TIMESTAMP WITHOUT TIME ZONE,
  ENDEFFECTIVEDATE     TIMESTAMP WITHOUT TIME ZONE
)
;
-- Add comments to the columns
COMMENT ON COLUMN PRINCIPALKEY.EFFECTIVEDATE IS 'Store the future effective DATEd for the record';
COMMENT ON COLUMN PRINCIPALKEY.ENDEFFECTIVEDATE IS 'Store the EXPIRY DATE for the record';

--
-- Definition for TABLE PROCESSDETAIL:
--

CREATE TABLE PROCESSDETAIL
(
  PROCESSID   BIGINT,
  NAME        VARCHAR(80),
  DESCRIPTION VARCHAR(250),
  VALUETYPE   VARCHAR(30),
  VALUE       VARCHAR(4000),
  SEQUENCE    BIGINT,
  PROCESSLOGID   BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN PROCESSDETAIL.PROCESSID IS 'Foreign Key to Event.ID';
COMMENT ON COLUMN PROCESSDETAIL.NAME IS 'DOMAIN=''PROCESSDETAIL'' :PRODUCTCOUNTMCVERSIONDATE';
COMMENT ON COLUMN PROCESSDETAIL.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN PROCESSDETAIL.VALUETYPE IS 'DOMAIN=''DETAILTYPE'' :STRING, ID, NUMBER, DATE';
COMMENT ON COLUMN PROCESSDETAIL.VALUE IS 'all types are converted to string';
COMMENT ON COLUMN PROCESSDETAIL.SEQUENCE IS 'Sequence of the process';
COMMENT ON COLUMN PROCESSDETAIL.PROCESSLOGID IS 'Step which created this entry';

--
-- Definition for TABLE PROCESSLOG:
--

CREATE TABLE PROCESSLOG
(
  ID                     BIGINT,
  PROCESSID              BIGINT,
  ACTIONDATE             TIMESTAMP WITHOUT TIME ZONE,
  ACTIONSTEP             BIGINT,
  ACTION                 VARCHAR(80),
  ACTIONNAME             VARCHAR(80),
  EVENTID                BIGINT,
  EVENTSTATE             VARCHAR(30),
  RESULT                 VARCHAR(250),
  STATUS                 VARCHAR(30),
  INGENERALDOCUMENTID1   BIGINT,
  INGENERALDOCUMENTID2   BIGINT,
  OUTGENERALDOCUMENTID1  BIGINT,
  OUTGENERALDOCUMENTID2  BIGINT,
  WORKITEMID             BIGINT,
  PRODUCTKEYID           BIGINT,
  LOGFILENAME            VARCHAR(250),
  ERRORFILENAME          VARCHAR(250),
  INFO                   VARCHAR(4000),
  MEMBERID               BIGINT,
  LOCALCONVERSATIONID    BIGINT,
  CHILDPROCESSID         BIGINT,
  INRECORDCOLLECTIONID1  BIGINT,
  OUTRECORDCOLLECTIONID1 BIGINT,
  INRECORDCOLLECTIONID2  BIGINT,
  OUTRECORDCOLLECTIONID2 BIGINT,
  NODEID                 VARCHAR(30),
  MODDATE                TIMESTAMP WITHOUT TIME ZONE,
  PARENTPROCESSLOGID     BIGINT DEFAULT 0 NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN PROCESSLOG.ID IS 'Unique ID derived from PROCESSLOG_SEQ';
COMMENT ON COLUMN PROCESSLOG.PROCESSID IS 'Process Instance ID';
COMMENT ON COLUMN PROCESSLOG.ACTIONDATE IS 'DATE when action was taken.';
COMMENT ON COLUMN PROCESSLOG.ACTIONSTEP IS 'Step Number, if needed.';
COMMENT ON COLUMN PROCESSLOG.ACTION IS 'From IMqActivity.ACTION_* :Send,Translate,Receive,WorkItem,MergeWorkItem,SaveData,Exec,BuyerVerify, Noop,StateTransition,POQuery,SendBuyerCatalog,EventUpDATE + others.';
COMMENT ON COLUMN PROCESSLOG.ACTIONNAME IS 'A somewhat short descriptive name.';
COMMENT ON COLUMN PROCESSLOG.EVENTID IS 'Points to Event.ID.  0 if no event.';
COMMENT ON COLUMN PROCESSLOG.EVENTSTATE IS 'copy of current event state.  This lets you tie together all actions that belong logically together.';
COMMENT ON COLUMN PROCESSLOG.RESULT IS 'result of step.';
COMMENT ON COLUMN PROCESSLOG.STATUS IS 'DOMAIN=''GENERALSTATUS''SUCCESS / WARNING / ERROR';
COMMENT ON COLUMN PROCESSLOG.INGENERALDOCUMENTID1 IS 'Primary Input into the step';
COMMENT ON COLUMN PROCESSLOG.INGENERALDOCUMENTID2 IS 'Secondary Input into the step';
COMMENT ON COLUMN PROCESSLOG.OUTGENERALDOCUMENTID1 IS 'Primary Output of the step';
COMMENT ON COLUMN PROCESSLOG.OUTGENERALDOCUMENTID2 IS 'Secondary Output of the step';
COMMENT ON COLUMN PROCESSLOG.WORKITEMID IS 'Workitem Involved.';
COMMENT ON COLUMN PROCESSLOG.PRODUCTKEYID IS 'product involved.';
COMMENT ON COLUMN PROCESSLOG.LOGFILENAME IS 'location of log file.';
COMMENT ON COLUMN PROCESSLOG.ERRORFILENAME IS 'location of error file.  XML representing MqException.';
COMMENT ON COLUMN PROCESSLOG.INFO IS 'name=value pairs, delimited by ";" Example:PARTICIPANTID=1928;STATE=Step1; PRICELIST=2922';
COMMENT ON COLUMN PROCESSLOG.MEMBERID IS 'Unique ID';
COMMENT ON COLUMN PROCESSLOG.MODDATE IS 'Last upDATEd on DATE, typically end DATE';
COMMENT ON COLUMN PROCESSLOG.PARENTPROCESSLOGID IS 'The process log which came before';

--
-- Definition for TABLE PROCESSSTATE:
--

CREATE TABLE PROCESSSTATE
(
  ID             BIGINT,
  STATUS         VARCHAR(80),
  ACTIVITYNAME   VARCHAR(80),
  PROCESSDEFNAME VARCHAR(80),
  STATEPARAMS    VARCHAR(4000),
  STEP           BIGINT,
  DOCCONTENTID   VARCHAR(250),
  ORGID          BIGINT,
  DOCPARAMS      VARCHAR(4000),
  MEMBERID       BIGINT,
  CATALOGPARAMS  VARCHAR(4000),
  STATEPARAMS2   VARCHAR(4000)
)
;
-- Add comments to the columns
COMMENT ON COLUMN PROCESSSTATE.ID IS 'Unique ID derived from PROCESSLOG_SEQ';
COMMENT ON COLUMN PROCESSSTATE.STATUS IS 'represent the status: notstarted/running/suspended/, /terminated';
COMMENT ON COLUMN PROCESSSTATE.ACTIVITYNAME IS 'Name of the current Activity';
COMMENT ON COLUMN PROCESSSTATE.PROCESSDEFNAME IS 'process defination name';
COMMENT ON COLUMN PROCESSSTATE.STATEPARAMS IS 'parameters list with ";;;" as delimiters';
COMMENT ON COLUMN PROCESSSTATE.STEP IS 'Step Number';
COMMENT ON COLUMN PROCESSSTATE.DOCCONTENTID IS 'doccontentid to prevent reprocess same document';
COMMENT ON COLUMN PROCESSSTATE.ORGID IS 'Organization ID';
COMMENT ON COLUMN PROCESSSTATE.DOCPARAMS IS 'Document Parameters';
COMMENT ON COLUMN PROCESSSTATE.MEMBERID IS 'User ID';
COMMENT ON COLUMN PROCESSSTATE.CATALOGPARAMS IS ' Holds IDs of ProcessRecord variables.';
COMMENT ON COLUMN PROCESSSTATE.STATEPARAMS2 IS 'Additional parameters list with ";;;" as delimiters';

CREATE TABLE PROCESSSTATEHISTORY
(
  ID             BIGINT,
  PROCESSLOGID   BIGINT,
  STATUS         VARCHAR(80),
  ACTIVITYNAME   VARCHAR(80),
  PROCESSDEFNAME VARCHAR(80),
  STATEPARAMS    VARCHAR(4000),
  STEP           BIGINT,
  DOCCONTENTID   VARCHAR(250),
  ORGID          BIGINT,
  DOCPARAMS      VARCHAR(4000),
  MEMBERID       BIGINT,
  CATALOGPARAMS  VARCHAR(4000),
  STATEPARAMS2   VARCHAR(4000 ),
  EVENTTYPE      VARCHAR(30),
  EVENTSTATE     VARCHAR(30),
  EVENTSTATUS    VARCHAR(30),
  EVENTDESCRIPTOR VARCHAR(30)
)
;
-- Add comments to the columns
COMMENT ON COLUMN PROCESSSTATEHISTORY.ID IS 'Unique ID derived from PROCESSLOG_SEQ';
COMMENT ON COLUMN PROCESSSTATEHISTORY.PROCESSLOGID IS 'Processlog ID derived from PROCESSLOG_SEQ';
COMMENT ON COLUMN PROCESSSTATEHISTORY.STATUS IS 'represent the status: notstarted/running/suspended/, /terminated';
COMMENT ON COLUMN PROCESSSTATEHISTORY.ACTIVITYNAME IS 'Name of the current Activity';
COMMENT ON COLUMN PROCESSSTATEHISTORY.PROCESSDEFNAME IS 'process defination name';
COMMENT ON COLUMN PROCESSSTATEHISTORY.STATEPARAMS IS 'parameters list with ";;;" as delimiters';
COMMENT ON COLUMN PROCESSSTATEHISTORY.STEP IS 'Step Number';
COMMENT ON COLUMN PROCESSSTATE.DOCCONTENTID IS 'doccontentid to prevent reprocess same document';
COMMENT ON COLUMN PROCESSSTATEHISTORY.ORGID IS 'Organization ID';
COMMENT ON COLUMN PROCESSSTATEHISTORY.DOCPARAMS IS 'Document Parameters';
COMMENT ON COLUMN PROCESSSTATEHISTORY.MEMBERID IS 'User ID';
COMMENT ON COLUMN PROCESSSTATEHISTORY.CATALOGPARAMS IS ' Holds IDs of ProcessRecord variables.';
COMMENT ON COLUMN PROCESSSTATEHISTORY.STATEPARAMS2 IS 'Additional parameters list with ";;;" as delimiters';
COMMENT ON COLUMN PROCESSSTATEHISTORY.EVENTTYPE IS 'Event type at this time';
COMMENT ON COLUMN PROCESSSTATEHISTORY.EVENTSTATE IS 'Event state at this time';
COMMENT ON COLUMN PROCESSSTATEHISTORY.EVENTSTATUS IS 'Event status at this time';
COMMENT ON COLUMN PROCESSSTATEHISTORY.EVENTDESCRIPTOR IS 'Event descriptor at this time';

--
-- Definition for TABLE PRODUCTLOG:
--

CREATE TABLE PRODUCTLOG
(
  PRODUCTKEYID            BIGINT,
  PROCESSLOGID            BIGINT,
  OPERATION               VARCHAR(30),
  SUBOPERATION            VARCHAR(80),
  PROCESSID               BIGINT,
  PRODUCTVERSION          BIGINT,
  OPERATIONDATE           TIMESTAMP WITHOUT TIME ZONE,
  STATUS                  VARCHAR(30),
  PRODUCTCONTENTVERSION   BIGINT,
  DEFINITIONID            BIGINT,
  DEFINITIONVERSION       BIGINT,
  EVENTID                 BIGINT,
  CATALOGEDITIONPROCESSID BIGINT DEFAULT 0 ,
  CHECKSUM                BIGINT,
  ITEMEFFECTIVEDATE       TIMESTAMP WITHOUT TIME ZONE,
  MESSAGECODE             VARCHAR(80),
  MCVERSIONDATE           TIMESTAMP WITHOUT TIME ZONE,
  VERSIONDATE             TIMESTAMP WITHOUT TIME ZONE,
  MESSAGE                 VARCHAR(4000),
  EXTERNALREFERENCE1      VARCHAR(250),
  EXTERNALREFERENCE2      VARCHAR(250),
  EXTERNALREFERENCE3      VARCHAR(250),
  EXTERNALREFERENCE4      VARCHAR(250),
  EXTERNALREFERENCE5      VARCHAR(250),
  EXTERNALREFERENCE6      VARCHAR(250),
  EXTERNALREFERENCE7      VARCHAR(250),
  EXTERNALREFERENCE8      VARCHAR(250),
  MESSAGEID               VARCHAR(80),
  TRANSACTIONID           VARCHAR(80),
  OPERATIONGROUPID        VARCHAR(80)
)
;
-- Add comments to the columns
COMMENT ON COLUMN PRODUCTLOG.PRODUCTKEYID IS 'Foreign Key to ProductKey.ID';
COMMENT ON COLUMN PRODUCTLOG.PROCESSLOGID IS 'Pointer to Log Entry  - required.';
COMMENT ON COLUMN PRODUCTLOG.OPERATION IS 'DOMAIN=''PRODUCTOP'' EVENTPUBLISH GENERATE PUBLISH ADD RECEIVEDOC';
COMMENT ON COLUMN PRODUCTLOG.SUBOPERATION IS 'To note the exact action table (data change)';
COMMENT ON COLUMN PRODUCTLOG.PROCESSID IS 'Points to process that initiated operation.';
COMMENT ON COLUMN PRODUCTLOG.PRODUCTVERSION IS 'ItemVersion';
COMMENT ON COLUMN PRODUCTLOG.OPERATIONDATE IS 'Timestamp.';
COMMENT ON COLUMN PRODUCTLOG.STATUS IS 'DOMAIN=''GENERALSTATUS'' SUCCESS  / ERROR / INPROGRESS / WARNING';
COMMENT ON COLUMN PRODUCTLOG.PRODUCTCONTENTVERSION IS 'The productcontentversion, catalogeditionid, and catalogeditionversion along with the source productid and productext can be used to retrieve the information about this product.In cases were the operation is on the Source version of the product, this information will be the same as the ProductVersion value.';
COMMENT ON COLUMN PRODUCTLOG.EVENTID IS 'Foreign Key to Event.ID';
COMMENT ON COLUMN PRODUCTLOG.CATALOGEDITIONPROCESSID IS 'Catalogedition id';
COMMENT ON COLUMN PRODUCTLOG.EXTERNALREFERENCE1 IS 'Store MsgId/Payload Id for the product logs indication synchronization operation';
COMMENT ON COLUMN PRODUCTLOG.EXTERNALREFERENCE2 IS 'Store the Transaction Id/Command Id for the product';
COMMENT ON COLUMN PRODUCTLOG.MESSAGEID IS 'Unique identifier of the message which was sent out.';
COMMENT ON COLUMN PRODUCTLOG.TRANSACTIONID IS 'Transaction id, if any, in which this record was included.';
COMMENT ON COLUMN PRODUCTLOG.OPERATIONGROUPID IS 'Unique identifier that groups implicit and Explicit Operations';

--
-- Definition for TABLE PRODUCTSTATUS:
--

CREATE TABLE PRODUCTSTATUS
(
  SOURCEPRODUCTKEYID    BIGINT,
  CHANNELORGANIZATIONID BIGINT DEFAULT - 1 ,
  PARTNERORGANIZATIONID BIGINT DEFAULT - 1 ,
  MODDATE               TIMESTAMP WITHOUT TIME ZONE,
  MODMEMBERID           BIGINT NOT NULL,
  MODVERSION            BIGINT NOT NULL,
  STATUS                VARCHAR(4000) NOT NULL,
  SOURCEORGANIZATIONID  BIGINT NOT NULL,
  STATUSGROUP           VARCHAR(250)
)
;
-- Add comments to the columns

--
-- Definition for TABLE RECORDCOLLECTIONDETAIL:
--

CREATE TABLE RECORDCOLLECTIONDETAIL
(
  RECORDCOLLECTIONID BIGINT,
  NAME             VARCHAR(80),
  SEQUENCE         BIGINT,
  IDVALUE          BIGINT,
  VALUE            VARCHAR(250)
)
;
-- Add comments to the columns
COMMENT ON TABLE RECORDCOLLECTIONDETAIL IS ' Additional data for a record collection';
COMMENT ON COLUMN RECORDCOLLECTIONDETAIL.RECORDCOLLECTIONID IS ' Id of record collection';
COMMENT ON COLUMN RECORDCOLLECTIONDETAIL.NAME IS ' Logical name for detail';
COMMENT ON COLUMN RECORDCOLLECTIONDETAIL.SEQUENCE IS ' Sequence Number to specify multi values for the same Name';
COMMENT ON COLUMN RECORDCOLLECTIONDETAIL.IDVALUE IS ' ID associated with the name';
COMMENT ON COLUMN RECORDCOLLECTIONDETAIL.VALUE IS ' Value associated with the name.';

--
-- Definition for TABLE RECORDLIST:
--

CREATE TABLE RECORDLIST
(
  RECORDCOLLECTIONID BIGINT,
  PRODUCTKEYID       BIGINT,
  CATALOGID          BIGINT,
  ROOTINDICATOR      CHAR(1) NOT NULL,
  RECORDVERSION      BIGINT DEFAULT 0 NOT NULL
)
;
-- Add comments to the columns
COMMENT ON TABLE RECORDLIST IS ' List of products in a record collection';
COMMENT ON COLUMN RECORDLIST.RECORDCOLLECTIONID IS ' Id of record collection to which these products belong';
COMMENT ON COLUMN RECORDLIST.PRODUCTKEYID IS ' Product key id';
COMMENT ON COLUMN RECORDLIST.CATALOGID IS ' Catalog to which the product belongs';
COMMENT ON COLUMN RECORDLIST.ROOTINDICATOR IS ' Indicates if the product is root product or not. Root products are at the top of the hierarchy';
COMMENT ON COLUMN RECORDLIST.RECORDVERSION IS ' Record version';

--
-- Definition for TABLE WORKITEM:
--

CREATE TABLE WORKITEM
(
  ID                  BIGINT,
  PROCESSINSTID       BIGINT NOT NULL,
  ACTIVITYNAME        VARCHAR(30) NOT NULL,
  SENDERID            BIGINT NOT NULL,
  SENDER              VARCHAR(80),
  SENDERENTID         BIGINT NOT NULL,
  OWNERID             BIGINT NOT NULL,
  OWNER               VARCHAR(80),
  DOCUMENTTYPE        VARCHAR(150),
  CONVERSATIONID      BIGINT NOT NULL,
  STEP                BIGINT NOT NULL,
  STATUS              VARCHAR(30),
  INFO                VARCHAR(4000),
  RECEIPTDATE         TIMESTAMP WITHOUT TIME ZONE,
  ORIGINALOWNERID     BIGINT,
  ORIGINALOWNER       VARCHAR(80),
  SMTPNOTIFY          VARCHAR(80) NOT NULL,
  EXPIRYDATE          TIMESTAMP WITHOUT TIME ZONE,
  OWNERTYPE           VARCHAR(30) DEFAULT 'MEMBER' ,
  SENDERORGID         BIGINT DEFAULT - 1  NOT NULL,
  ORIGINALSENDERID    BIGINT DEFAULT - 1  NOT NULL,
  ORIGINALSENDERORGID BIGINT DEFAULT - 1  NOT NULL,
  ORIGINALSENDERENTID BIGINT DEFAULT - 1  NOT NULL,
  RECEIVERID          BIGINT DEFAULT - 1  NOT NULL,
  RECEIVERORGID       BIGINT DEFAULT - 1  NOT NULL,
  RECEIVERENTID       BIGINT DEFAULT - 1  NOT NULL,
  DOCUMENTID          VARCHAR(250),
  MODMEMBERID         BIGINT NOT NULL,
  MODDATE             TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION          BIGINT NOT NULL,
  GENERALDOCUMENTID   BIGINT,
  TASKSTRATTR1        VARCHAR(4000),
  TASKSTRATTR2        VARCHAR(4000),
  TASKSTRATTR3        VARCHAR(4000),
  TASKSTRATTR4        VARCHAR(4000),
  TASKNUMATTR1        BIGINT,
  TASKNUMATTR2        BIGINT,
  TASKDATEATTR1       TIMESTAMP WITHOUT TIME ZONE,
  TASKDATEATTR2       TIMESTAMP WITHOUT TIME ZONE,
  TASKTYPE            VARCHAR(30),
  NEXTSTATE           VARCHAR(250),
  RESULTSTR1          VARCHAR(250),
  RESULTSTR2          VARCHAR(250),
  RESULTNUM1          BIGINT,
  RESULTNUM2          BIGINT,
  RESULTDATE1         TIMESTAMP WITHOUT TIME ZONE,
  RESULTDATE2         TIMESTAMP WITHOUT TIME ZONE,
  SENDERENT           VARCHAR(80),
  FILELOCATION        VARCHAR(250),
  PARMFILELOCATION    VARCHAR(250),
  DOCTYPE             VARCHAR(80),
  DOCSUBTYPE          VARCHAR(80),
  DERIVEDID           BIGINT DEFAULT 0  NOT NULL,
  PROCESSLOGID        BIGINT DEFAULT 0  NOT NULL,
  LOCALCONVERSATIONID BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN WORKITEM.ID IS 'Unique ID derived from MQ_SEQUENCE_2';
COMMENT ON COLUMN WORKITEM.OWNERID IS 'Organization ID';
COMMENT ON COLUMN WORKITEM.CONVERSATIONID IS 'Conversation which owns the workitem.';
COMMENT ON COLUMN WORKITEM.STATUS IS 'Status of the Workitem';
COMMENT ON COLUMN WORKITEM.SENDERORGID IS 'For Marketplace';
COMMENT ON COLUMN WORKITEM.ORIGINALSENDERORGID IS 'For Buyer';
COMMENT ON COLUMN WORKITEM.RECEIVERORGID IS 'For Supplier';
COMMENT ON COLUMN WORKITEM.MODMEMBERID IS 'Member who modifed the Record';
COMMENT ON COLUMN WORKITEM.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN WORKITEM.MODVERSION IS 'Current version of the Entity';
COMMENT ON COLUMN WORKITEM.TASKSTRATTR1 IS 'Generic String Field';
COMMENT ON COLUMN WORKITEM.TASKSTRATTR2 IS 'Generic String Field';
COMMENT ON COLUMN WORKITEM.TASKSTRATTR3 IS 'Generic String Field';
COMMENT ON COLUMN WORKITEM.TASKSTRATTR4 IS 'Generic String Field';
COMMENT ON COLUMN WORKITEM.TASKNUMATTR1 IS 'Generic Number Field';
COMMENT ON COLUMN WORKITEM.TASKNUMATTR2 IS 'Generic Number Field';
COMMENT ON COLUMN WORKITEM.TASKDATEATTR1 IS 'Generic Date Field';
COMMENT ON COLUMN WORKITEM.TASKDATEATTR2 IS 'Generic Date Field';
COMMENT ON COLUMN WORKITEM.RESULTSTR1 IS 'Workitem result entered by user';
COMMENT ON COLUMN WORKITEM.RESULTSTR2 IS 'Workitem result entered by user';
COMMENT ON COLUMN WORKITEM.RESULTNUM1 IS 'Workitem result entered by user';
COMMENT ON COLUMN WORKITEM.RESULTNUM2 IS 'Workitem result entered by user';
COMMENT ON COLUMN WORKITEM.RESULTDATE1 IS 'Workitem result entered by user';
COMMENT ON COLUMN WORKITEM.RESULTDATE2 IS 'Workitem result entered by user';
COMMENT ON COLUMN WORKITEM.FILELOCATION IS 'Absolute path and location of filename';
COMMENT ON COLUMN WORKITEM.PARMFILELOCATION IS 'Absolute path and location in OS for .xml file';

--
-- Definition for TABLE WORKITEMDETAIL:
--

CREATE TABLE WORKITEMDETAIL
(
  WORKITEMID    BIGINT,
  NAME          VARCHAR(80),
  SEQUENCE      BIGINT,
  VALUETYPE     VARCHAR(80) NOT NULL,
  VALUE         VARCHAR(4000) NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN WORKITEMDETAIL.WORKITEMID IS 'Unique ID derived from MQ_SEQUENCE_2';
COMMENT ON COLUMN WORKITEMDETAIL.NAME IS 'Name of details,  reffered from domain=workitemdetail';
COMMENT ON COLUMN WORKITEMDETAIL.SEQUENCE IS 'Sequential sequence 1,2,3 ... N';
COMMENT ON COLUMN WORKITEMDETAIL.VALUETYPE IS 'type of entity.  Domain=detailtype, string,id.';
COMMENT ON COLUMN WORKITEMDETAIL.VALUE IS 'Actual value of the entity.  All types are converted to string.';


CREATE TABLE ACTIVITYRESULT
(
  PROCESSLOGID  BIGINT NOT NULL,
  NAME          VARCHAR(255) NOT NULL,
  VALUE         VARCHAR(4000),
  PRODUCTKEYID  BIGINT,
  SEQUENCE      BIGINT
)
;

COMMENT ON TABLE ACTIVITYRESULT IS 'Since Release 7.0 - Table stores the output result of the Activity. Mostly used for EvaluateRulebase output and return values. ';
COMMENT ON COLUMN ACTIVITYRESULT.PROCESSLOGID IS 'Process Log ID';
COMMENT ON COLUMN ACTIVITYRESULT.NAME IS 'Name of the variable which is output of the activity. There can be several entries for the same variable';
COMMENT ON COLUMN ACTIVITYRESULT.VALUE IS 'Value assigned to the output variable';
COMMENT ON COLUMN ACTIVITYRESULT.PRODUCTKEYID IS 'Optional - if the output was genereated while processing a specific record';

--
-- Definition for TABLE ATTRIBUTELOG:
--

CREATE TABLE ATTRIBUTELOG
(
  PRODUCTKEYID       BIGINT NOT NULL,
  PROCESSLOGID       BIGINT NOT NULL,
  CATALOGATTRIBUTEID BIGINT NOT NULL,
  ATTRIBUTEGROUPID   BIGINT NOT NULL,
  ACTIONNUMBER       BIGINT NOT NULL,
  ATTRIBUTEACTION    VARCHAR(80),
  RESULTCODE         VARCHAR(80),
  SEVERITY           BIGINT,
  ACTUALVALUE        VARCHAR(4000),
  REFERENCEVALUE     VARCHAR(4000),
  USERCOMMENT        VARCHAR(4000),
  MODDATE            TIMESTAMP WITHOUT TIME ZONE,
  MODVERSION         BIGINT,
  MODMEMBERID        BIGINT,
  TYPE               VARCHAR(80),
  RELATIONSHIPTYPE  BIGINT
)
;
-- Add comments to the columns
COMMENT ON COLUMN ATTRIBUTELOG.relationshipType is 'Type of Relationship ';

--
-- Definition for TABLE MATCHRESULT:
--
CREATE TABLE MATCHRESULT
(
  ID               BIGINT NOT NULL,
  PROCESSLOGID     BIGINT NOT NULL,
  RECORDID         BIGINT NOT NULL,
  RECORDVERSION    BIGINT NOT NULL,
  DECISION         CHAR(1),
  DECISIONBY       BIGINT,
  DECISIONDATE     TIMESTAMP WITHOUT TIME ZONE,
  MATCHDATE        TIMESTAMP WITHOUT TIME ZONE,
  MATCHVERSION     BIGINT NOT NULL,
  DQPROCESSTYPE    CHAR(1) NOT NULL    
)
;
-- Add comments to the columns
COMMENT ON TABLE MATCHRESULT IS 'Table to store the root records of a source record hierarchy and its metadata such as decision etc.';
COMMENT ON COLUMN MATCHRESULT.ID IS 'Unique ID derived from DQ_SEQ sequence';
COMMENT ON COLUMN MATCHRESULT.PROCESSLOGID IS 'Process log ID from the PROESSLOG table';
COMMENT ON COLUMN MATCHRESULT.RECORDID IS 'PKID for the parent record';
COMMENT ON COLUMN MATCHRESULT.RECORDVERSION IS 'MODVERSION for the parent record';
COMMENT ON COLUMN MATCHRESULT.DECISION IS 'User decision on this source hierarchy';
COMMENT ON COLUMN MATCHRESULT.DECISIONBY IS 'Member who decided on the record';
COMMENT ON COLUMN MATCHRESULT.DECISIONDATE IS 'Date when a decision is taken to merge/accept/reject the record';
COMMENT ON COLUMN MATCHRESULT.MATCHDATE IS 'Date on which match result entry was created';
COMMENT ON COLUMN MATCHRESULT.MATCHVERSION IS 'version Number indicating how many times match is evaluated. To be used in re-evaluation of match';
COMMENT ON COLUMN MATCHRESULT.DQPROCESSTYPE IS 'Type of process found the result(S (Scheduler Auto detection) / N (New Record) / I (Bulk Import) )';

--
-- Definition for TABLE MATCHRESULTDETAILS:
--
CREATE TABLE MATCHRESULTDETAILS
(
  ID                   BIGINT NOT NULL,
  MATCHRESULTID        BIGINT NOT NULL,
  PARENTID             BIGINT NOT NULL,
  PARENTVERSION        BIGINT NOT NULL,
  CHILDID              BIGINT NOT NULL,
  CHILDVERSION         BIGINT NOT NULL,
  PARENTCATALOGID      BIGINT,
  CHILDCATALOGID       BIGINT,
  RELATIONSHIPTYPE     BIGINT,
  DEPTH                BIGINT
)
;
-- Add comments to the columns
COMMENT ON TABLE MATCHRESULTDETAILS IS 'Table to store the source records hierarchy';
COMMENT ON COLUMN MATCHRESULTDETAILS.ID IS 'ID from sequence';
COMMENT ON COLUMN MATCHRESULTDETAILS.MATCHRESULTID IS 'ID from the MATCHRESULT table';
COMMENT ON COLUMN MATCHRESULTDETAILS.PARENTID IS 'PKID for the parent record';
COMMENT ON COLUMN MATCHRESULTDETAILS.PARENTVERSION IS 'MODVERSION for the parent record';
COMMENT ON COLUMN MATCHRESULTDETAILS.CHILDID IS 'PKID for the child record';
COMMENT ON COLUMN MATCHRESULTDETAILS.CHILDVERSION IS 'MODVERSION for the child record';
COMMENT ON COLUMN MATCHRESULTDETAILS.PARENTCATALOGID IS 'PARENTCATALOGID for the parent record';
COMMENT ON COLUMN MATCHRESULTDETAILS.CHILDCATALOGID IS 'CHILDCATALOGID for the child record';
COMMENT ON COLUMN MATCHRESULTDETAILS.RELATIONSHIPTYPE IS 'RELATIONSHIP TYPE for the relationship between parent and child record';
COMMENT ON COLUMN MATCHRESULTDETAILS.DEPTH IS 'Relationship hierarchy level/depth as a part of the source relationship hierarchy';

--
-- Definition for TABLE MATCHCANDIDATE:
--
CREATE TABLE MATCHCANDIDATE
(
  ID               BIGINT NOT NULL,
  MATCHRESULTID    BIGINT NOT NULL,
  RECORDID         BIGINT NOT NULL,
  RECORDVERSION    BIGINT NOT NULL,
  MATCHINGSCORE    VARCHAR(20) NOT NULL,
  SELECTED         CHAR(1) DEFAULT 'N' NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN MATCHCANDIDATE.ID IS 'Unique ID derived from DQ_SEQ sequence';
COMMENT ON COLUMN MATCHCANDIDATE.MATCHRESULTID IS 'Refers to MATCHRESULT.ID';
COMMENT ON COLUMN MATCHCANDIDATE.RECORDID IS 'Record ID of the matching record';
COMMENT ON COLUMN MATCHCANDIDATE.RECORDVERSION IS 'Record version of the matching record';
COMMENT ON COLUMN MATCHCANDIDATE.MATCHINGSCORE IS 'Matching relevance score for the matching record';
COMMENT ON COLUMN MATCHCANDIDATE.SELECTED IS 'Flag to indicate if the matching record is selected for merge';
COMMENT ON TABLE MATCHCANDIDATE is 'Table to store the matching candiDATE results corresponding to the MatchResult table entry';

--
-- Definition for TABLE MATCHCANDIDATEDETAILS:
--
CREATE TABLE MATCHCANDIDATEDETAILS
(
  ID                   BIGINT NOT NULL,
  MATCHCANDIDATEID     BIGINT NOT NULL,
  PARENTID             BIGINT NOT NULL,
  PARENTVERSION        BIGINT NOT NULL,
  CHILDID              BIGINT NOT NULL,
  CHILDVERSION         BIGINT NOT NULL,
  PARENTCATALOGID      BIGINT,
  CHILDCATALOGID       BIGINT,
  RELATIONSHIPTYPE     BIGINT,  
  DEPTH                BIGINT,
  MATCHRESULTDETAILSID BIGINT DEFAULT -1 NOT NULL
)
;
-- Add comments to the columns
COMMENT ON TABLE MATCHCANDIDATEDETAILS IS 'Table to store the target records hierarchy';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.ID IS 'ID from sequence';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.MATCHCANDIDATEID IS 'ID from MATCHCANDIDATE table';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.PARENTID IS 'PKID for the parent target record';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.PARENTVERSION IS 'MODVERSION for the parent target record';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.CHILDID IS 'PKID for the child target record';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.CHILDVERSION IS 'MODVERSION for the child target record';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.PARENTCATALOGID IS 'CATALOG ID  for the parent target record';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.CHILDCATALOGID IS 'CATALOG ID  for the child target record';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.RELATIONSHIPTYPE IS 'Relationship TYPE for the relationship between parent and child target record';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.DEPTH IS 'Relationship hierarchy level/depth as a part of the target relationship hierarchy';
COMMENT ON COLUMN MATCHCANDIDATEDETAILS.MATCHRESULTDETAILSID IS 'Match result details Id to know child relationship record';

--
-- Definition for TABLE MATCHCRITERION:
--
CREATE TABLE MATCHCRITERION
(
  PROCESSLOGID       BIGINT NOT NULL,
  CATALOGID          BIGINT NOT NULL,
  CATALOGVERSION     BIGINT NOT NULL,
  CATALOGATTRIBUTEID BIGINT NOT NULL,
  MATCHTHRESHOLD      VARCHAR(20) NOT NULL,
  MATCHTYPE              CHAR(1) DEFAULT 'N' NOT NULL,
  TARGETCATALOGATTRIBUTE  BIGINT DEFAULT -1 NOT NULL,
  ATTRIBUTEWEIGHT VARCHAR(5) DEFAULT '1.0' NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN MATCHCRITERION.PROCESSLOGID IS 'Refers to ProcessLog.id';
COMMENT ON COLUMN MATCHCRITERION.CATALOGID IS 'Refers to Catalog.id';
COMMENT ON COLUMN MATCHCRITERION.CATALOGVERSION IS 'Refers to Catalog.version';
COMMENT ON COLUMN MATCHCRITERION.CATALOGATTRIBUTEID IS 'refers to CatalogAttribute.id';
COMMENT ON COLUMN MATCHCRITERION.MATCHTHRESHOLD IS 'Minimum matching threshold value criteria';
COMMENT ON COLUMN MATCHCRITERION.MATCHTYPE IS 'flag to know duplicate detection type RRM/ nonRRM';
COMMENT ON COLUMN MATCHCRITERION.TARGETCATALOGATTRIBUTE IS 'refers to target CatalogAttribute.id';
COMMENT ON COLUMN MATCHCRITERION.ATTRIBUTEWEIGHT IS 'The weightage given for the attribute for search criteria';
COMMENT ON TABLE MATCHCRITERION is 'Table to store the criteria used in the DQ matching process';

--
-- Definition for TABLE MERGERESULT:
--
CREATE TABLE MERGERESULT
(
  ID                   BIGINT NOT NULL,
  PROCESSLOGID         BIGINT NOT NULL,
  SOURCERECORDKEYID    BIGINT NOT NULL,
  SOURCERECORDVERSION  BIGINT NOT NULL,
  TARGETRECORDKEYID    BIGINT NOT NULL,
  TARGETRECORDVERSION  BIGINT NOT NULL,
  TARGETFINALVERSION   BIGINT NOT NULL,
  MATCHCANDIDATEID     BIGINT,
  DECISIONBY           BIGINT,
  DECISIONDATE         TIMESTAMP WITHOUT TIME ZONE,
  MERGEMODE 		   VARCHAR(80)
)
;
-- Add comments to the columns
COMMENT ON COLUMN MERGERESULT.ID IS 'Unique ID derived from DQ_SEQ sequence';
COMMENT ON COLUMN MERGERESULT.PROCESSLOGID IS 'Refers to ProcessLog.id';
COMMENT ON COLUMN MERGERESULT.SOURCERECORDKEYID IS 'Record ID of the source record';
COMMENT ON COLUMN MERGERESULT.SOURCERECORDVERSION IS 'Version of the source record being merged';
COMMENT ON COLUMN MERGERESULT.TARGETRECORDKEYID IS 'Record ID of the target record';
COMMENT ON COLUMN MERGERESULT.TARGETRECORDVERSION IS 'Version of the target record being merged';
COMMENT ON COLUMN MERGERESULT.TARGETFINALVERSION IS 'Final version Number of the target as a result of the merge operation';
COMMENT ON COLUMN MERGERESULT.MATCHCANDIDATEID IS 'refers to MATCHCANDIDATE.ID. Optional. Populated in case of merge post match, not in case of merge without prior match';
COMMENT ON COLUMN MERGERESULT.DECISIONBY IS 'Member who decided on the record';
COMMENT ON COLUMN MERGERESULT.DECISIONDATE IS 'Date when a decision is taken to merge/accept/reject the record';
COMMENT ON COLUMN MERGERESULT.MERGEMODE IS 'The mode of the merging done. (M) Multi, (A) Add Record,(I) Import or (S) SDD';
COMMENT ON TABLE MERGERESULT is 'Table to store the results of merge operation in the DQ process';

--
-- Definition for TABLE MERGEATTRIBUTE:
--
CREATE TABLE MERGEATTRIBUTE
(
  MERGERESULTID     BIGINT NOT NULL,
  CATALOGID         BIGINT NOT NULL,
  CATALOGVERSION    BIGINT NOT NULL,
  ATTRIBUTEID       BIGINT NOT NULL,
  MERGEMODE         CHAR(1),
  TARGETATTRIBUTEID   BIGINT DEFAULT -1 NOT NULL,
  MERGETYPE CHAR(1) DEFAULT 'N' NOT NULL,
  MERGECANDIDATEID BIGINT DEFAULT -1 NOT NULL,
  MERGERESULTDETAILSID BIGINT DEFAULT -1 NOT NULL,
  INLINEATTRIBUTEVALUE VARCHAR(4000)
)
;
-- Add comments to the columns
COMMENT ON COLUMN MERGEATTRIBUTE.MERGERESULTID IS 'Refers to MERGERESULT.ID';
COMMENT ON COLUMN MERGEATTRIBUTE.MERGECANDIDATEID IS 'Refers to MERGECANDIDATE.ID';
COMMENT ON COLUMN MERGEATTRIBUTE.CATALOGID IS 'Refers to Catalog.id';
COMMENT ON COLUMN MERGEATTRIBUTE.CATALOGVERSION IS 'Refers to Catalog.version';
COMMENT ON COLUMN MERGEATTRIBUTE.ATTRIBUTEID IS 'refers to CatalogAttribute.id';
COMMENT ON COLUMN MERGEATTRIBUTE.MERGEMODE IS 'Allow user override';
COMMENT ON COLUMN MERGEATTRIBUTE.MERGETYPE IS 'The type of match that was used to decide merge - Y for Reference Repository Matching (RRM) and  N for Normal merging (NonRRM)';
COMMENT ON COLUMN MERGEATTRIBUTE.MERGERESULTDETAILSID IS 'Refers to the mergeresultsdetails table for relationship attributes';
COMMENT ON COLUMN MERGEATTRIBUTE.INLINEATTRIBUTEVALUE IS 'Inline editing value is stored';
COMMENT ON TABLE MERGEATTRIBUTE is 'Table to store the attributes used in the merge operation in the DQ process';

--
-- Definition for TABLE RECORDLINKAGE:
--
CREATE TABLE MERGERESULTDETAIL
(
  ID				BIGINT NOT NULL,
  MERGERESULTID      BIGINT NOT NULL,
  NAME             VARCHAR(80),
  VALUETYPE   VARCHAR(30),
  VALUE           VARCHAR(250),
  SEQUENCE    BIGINT default 1 NOT NULL
)
;

COMMENT ON TABLE MERGERESULTDETAIL IS 'Table to store the merged relationship records hierarchy';
COMMENT ON COLUMN MERGERESULTDETAIL.ID IS 'Unique ID, generated using sequence number';
COMMENT ON COLUMN MERGERESULTDETAIL.MERGERESULTID IS 'ID inherited from MERGERESULT table';
COMMENT ON COLUMN MERGERESULTDETAIL.NAME IS 'The name of the data field, could be one of the following - PARENTRECORDID, PARENTRECORDVERSION, CHILDRECORDID, CHILDRECORDVERSION';
COMMENT ON COLUMN MERGERESULTDETAIL.VALUETYPE IS 'Data type of the merge, The type may be string or long.';
COMMENT ON COLUMN MERGERESULTDETAIL.VALUE IS 'Merged value. The value normally contains RELATIONSHIPID, PARENT RECORD ID, CHILD RECORD ID, AND MERGETYPE. MERGETYPE could be "Add as New" or "Merged"';
COMMENT ON COLUMN MERGERESULTDETAIL.SEQUENCE IS 'Sequence of the details.';

CREATE TABLE MERGECANDIDATE
(
	ID 			BIGINT NOT NULL,
	MERGERESULTID	BIGINT NOT NULL,
	RECORDID		BIGINT NOT NULL,
	RECORDVERSION	BIGINT NOT NULL,
	MERGERESULTDETAILSID BIGINT NOT NULL,
	ACTIONTYPE   VARCHAR(30)
)
;

COMMENT ON COLUMN MERGECANDIDATE.ID IS 'Unique ID derived from DQ_SEQ sequence';
COMMENT ON COLUMN MERGECANDIDATE.MERGERESULTID IS 'Refers to MergeResult.id';
COMMENT ON COLUMN MERGECANDIDATE.RECORDID IS 'Record ID of the source record';
COMMENT ON COLUMN MERGECANDIDATE.RECORDVERSION IS 'Version of the source record being merged';
COMMENT ON COLUMN MERGECANDIDATE.MERGERESULTDETAILSID IS 'Refers to Merge Result details.id';
COMMENT ON COLUMN MERGECANDIDATE.ACTIONTYPE IS 'Action should be taken on the source records, (D) DeleteRecord , (R) Reject the record';
COMMENT ON TABLE MERGECANDIDATE is 'Table to store the source records used in the merge operation in the DQ process';

--
-- Definition for TABLE RECORDLINKAGE:
--
CREATE TABLE RECORDLINKAGE
(
  SOURCERECORDKEYID     BIGINT NOT NULL,
  TARGETRECORDKEYID     BIGINT NOT NULL,
  ACTIVE                CHAR(1) NOT NULL,
  MODDATE               TIMESTAMP WITHOUT TIME ZONE,
  PROCESSLOGID          BIGINT default -1 NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN RECORDLINKAGE.SOURCERECORDKEYID IS 'Refers to the record ID of the source record';
COMMENT ON COLUMN RECORDLINKAGE.TARGETRECORDKEYID IS 'Refers to the record ID of the target record';
COMMENT ON COLUMN RECORDLINKAGE.ACTIVE IS 'Flag indicating is the linkage is active';
COMMENT ON COLUMN RECORDLINKAGE.MODDATE IS 'Date when the linkage is modified';
COMMENT ON COLUMN RECORDLINKAGE.PROCESSLOGID IS 'Refers to ProcessLog.id';
COMMENT ON TABLE RECORDLINKAGE is 'Table to store the record linkage created after merge operation in the DQ process';

--
-- Definition for TABLE MV_SHARED_INTEGER_TABLE
--
CREATE TABLE MV_SHARED_INTEGER_TABLE
(
  CPRODUCTKEYID          BIGINT NOT NULL,
  CMODVERSION            BIGINT NOT NULL,
  CATALOGATTRIBUTEID     BIGINT NOT NULL,
  CLANGUAGECODE          VARCHAR(20),
  VALUE                  BIGINT,
  CATALOGID				 BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN MV_SHARED_INTEGER_TABLE.CPRODUCTKEYID IS 'Record key id';
COMMENT ON COLUMN MV_SHARED_INTEGER_TABLE.CMODVERSION IS 'Record Version';
COMMENT ON COLUMN MV_SHARED_INTEGER_TABLE.CATALOGATTRIBUTEID IS 'ID of the catalog attribute';
COMMENT ON COLUMN MV_SHARED_INTEGER_TABLE.VALUE IS 'value assigned to catalog attribute';
COMMENT ON COLUMN MV_SHARED_INTEGER_TABLE.CLANGUAGECODE IS 'language of the catalog attribute value';
COMMENT ON COLUMN MV_SHARED_INTEGER_TABLE.CATALOGID IS 'Repository id';
COMMENT ON TABLE MV_SHARED_INTEGER_TABLE is 'Table to store the data assigned to multi value attributes for datatypes integer.' ;

--
-- Definition for TABLE MV_SHARED_STRING_TABLE
--
CREATE TABLE MV_SHARED_STRING_TABLE
(
  CPRODUCTKEYID        BIGINT NOT NULL,
  CMODVERSION          BIGINT NOT NULL,
  CATALOGATTRIBUTEID   BIGINT NOT NULL,
  CLANGUAGECODE        VARCHAR(20),
  VALUE                VARCHAR (4000),
  CATALOGID		       BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN MV_SHARED_STRING_TABLE.CPRODUCTKEYID IS 'Record key id';
COMMENT ON COLUMN MV_SHARED_STRING_TABLE.CMODVERSION IS 'Record Version';
COMMENT ON COLUMN MV_SHARED_STRING_TABLE.CATALOGATTRIBUTEID IS 'ID of the catalog attribute';
COMMENT ON COLUMN MV_SHARED_INTEGER_TABLE.CLANGUAGECODE IS 'language of the catalog attribute value';
COMMENT ON COLUMN MV_SHARED_STRING_TABLE.VALUE IS 'value assigned to catalog attribute';
COMMENT ON COLUMN MV_SHARED_STRING_TABLE.CATALOGID IS 'Repository id';
COMMENT ON TABLE MV_SHARED_STRING_TABLE is 'Table to store the data assigned to multi value attributes for datatypes String, file.' ;

--
-- Definition for TABLE MV_SHARED_DECIMAL_TABLE
--
CREATE TABLE MV_SHARED_DECIMAL_TABLE
(
  CPRODUCTKEYID          BIGINT NOT NULL,
  CMODVERSION            BIGINT NOT NULL,
  CATALOGATTRIBUTEID     BIGINT NOT NULL,
  CLANGUAGECODE          VARCHAR(20),
  VALUE                  BIGINT,
  CATALOGID		 		 BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN MV_SHARED_DECIMAL_TABLE.CPRODUCTKEYID IS 'Record key id';
COMMENT ON COLUMN MV_SHARED_DECIMAL_TABLE.CMODVERSION IS 'Record Version';
COMMENT ON COLUMN MV_SHARED_DECIMAL_TABLE.CATALOGATTRIBUTEID IS 'ID of the catalog attribute';
COMMENT ON COLUMN MV_SHARED_INTEGER_TABLE.CLANGUAGECODE IS 'language of the catalog attribute value';
COMMENT ON COLUMN MV_SHARED_DECIMAL_TABLE.VALUE IS 'value assigned to catalog attribute';
COMMENT ON COLUMN MV_SHARED_DECIMAL_TABLE.CATALOGID IS 'Repository id';
COMMENT ON TABLE MV_SHARED_DECIMAL_TABLE is 'Table to store the data assigned to multi value attributes for datatypes decimal, custom decimal, amount.' ;

--
-- Definition for TABLE MV_SHARED_DATE_TABLE
--
CREATE TABLE MV_SHARED_DATE_TABLE
(
  CPRODUCTKEYID              BIGINT NOT NULL,
  CMODVERSION                BIGINT NOT NULL,
  CATALOGATTRIBUTEID         BIGINT NOT NULL,
  CLANGUAGECODE              VARCHAR(20),
  VALUE                      TIMESTAMP WITHOUT TIME ZONE,
  CATALOGID		 			 BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN MV_SHARED_DATE_TABLE.CPRODUCTKEYID IS 'Record key id';
COMMENT ON COLUMN MV_SHARED_DATE_TABLE.CMODVERSION IS 'Record Version';
COMMENT ON COLUMN MV_SHARED_DATE_TABLE.CATALOGATTRIBUTEID IS 'ID of the catalog attribute';
COMMENT ON COLUMN MV_SHARED_INTEGER_TABLE.CLANGUAGECODE IS 'language of the catalog attribute value';
COMMENT ON COLUMN MV_SHARED_DATE_TABLE.VALUE IS 'value assigned to catalog attribute';
COMMENT ON COLUMN MV_SHARED_DATE_TABLE.CATALOGID IS 'Repository id';
COMMENT ON TABLE MV_SHARED_DATE_TABLE IS 'Table to store the data assigned to multi value attributes for datatypes DATE.' ;

--
-- Definition for TABLE MV_SHARED_BOOLEAN_TABLE
--
CREATE TABLE MV_SHARED_BOOLEAN_TABLE
(
  CPRODUCTKEYID              BIGINT NOT NULL,
  CMODVERSION                BIGINT NOT NULL,
  CATALOGATTRIBUTEID         BIGINT NOT NULL,
  CLANGUAGECODE              VARCHAR(20),
  VALUE                      VARCHAR(5),
  CATALOGID		 			 BIGINT NOT NULL
)
;
-- Add comments to the columns
COMMENT ON COLUMN MV_SHARED_BOOLEAN_TABLE.CPRODUCTKEYID IS 'Record key id';
COMMENT ON COLUMN MV_SHARED_BOOLEAN_TABLE.CMODVERSION IS 'Record Version';
COMMENT ON COLUMN MV_SHARED_BOOLEAN_TABLE.CATALOGATTRIBUTEID IS 'ID of the catalog attribute';
COMMENT ON COLUMN MV_SHARED_BOOLEAN_TABLE.CLANGUAGECODE IS 'language of the catalog attribute value';
COMMENT ON COLUMN MV_SHARED_BOOLEAN_TABLE.VALUE IS 'value assigned to catalog attribute';
COMMENT ON COLUMN MV_SHARED_BOOLEAN_TABLE.CATALOGID IS 'Repository id';
COMMENT ON TABLE MV_SHARED_BOOLEAN_TABLE IS 'Table to store the data assigned to flex attributes for datatypes boolean.' ;

--
-- Definition for TABLE FUTUREDATEDRECORD
--
CREATE TABLE FUTUREDATEDRECORD
(
 PRODUCTKEYID    BIGINT  NOT NULL,
 MODVERSION      BIGINT  NOT NULL,
 CATALOGID       BIGINT  NOT NULL,
 EFFECTIVEDATE   TIMESTAMP WITHOUT TIME ZONE,
 ENDEFFECTIVEDATE TIMESTAMP WITHOUT TIME ZONE,
 FUTUREDATEPROCESSED CHAR(1) DEFAULT 'N' NOT NULL
 
)
;
-- Add comments to the columns
COMMENT ON COLUMN FUTUREDATEDRECORD.PRODUCTKEYID IS 'Record key id';
COMMENT ON COLUMN FUTUREDATEDRECORD.MODVERSION IS 'Record Version';
COMMENT ON COLUMN FUTUREDATEDRECORD.CATALOGID IS 'ID of the catalog ID';
COMMENT ON COLUMN FUTUREDATEDRECORD.EFFECTIVEDATE IS 'effective DATE assigned to record';
COMMENT ON COLUMN FUTUREDATEDRECORD.ENDEFFECTIVEDATE IS 'expiry date assigned to record';
COMMENT ON COLUMN FUTUREDATEDRECORD.FUTUREDATEPROCESSED IS 'flag if future dated record has been effective';
COMMENT ON TABLE FUTUREDATEDRECORD IS 'Table to store the future effective DATEd records.';

--
--Definition for TABLE PERSPECTIVE
--
CREATE TABLE PERSPECTIVE
(
   ID BIGINT 		NOT NULL,
   NAME VARCHAR(80)	NOT NULL,
   DESCRIPTION VARCHAR(250),
   CATALOGID BIGINT NOT NULL,
   ACTIVE    CHAR(1) NOT NULL,
   MODDATE   TIMESTAMP WITHOUT TIME ZONE    NOT NULL,
   MODMEMBERID BIGINT,
   MODVERSION BIGINT DEFAULT 0
)
;
--Add coments to the columns
COMMENT ON COLUMN PERSPECTIVE.ID IS 'Unique ID for the table';
COMMENT ON COLUMN PERSPECTIVE.NAME IS 'Name of the perspective';
COMMENT ON COLUMN PERSPECTIVE.DESCRIPTION IS 'Description of perspective';
COMMENT ON COLUMN PERSPECTIVE.CATALOGID IS 'ID of the root catalog. Also, serves as foreign key';
COMMENT ON COLUMN PERSPECTIVE.ACTIVE IS 'A flag to indicate if the perspective is active';
COMMENT ON COLUMN PERSPECTIVE.MODMEMBERID IS 'ID of the member who would modify the perspective';
COMMENT ON COLUMN PERSPECTIVE.MODDATE IS 'The date of modification';

--
--Definition for TABLE PERSPECTIVERELATIONSHIP
--
CREATE TABLE PERSPECTIVERELATIONSHIP
(
   ID			    BIGINT		NOT NULL,
   IDX			    BIGINT,
   PERSPECTIVEID 	BIGINT		NOT NULL,
   PARENTID 		BIGINT		NOT NULL,
   CHILDID		    BIGINT		NOT NULL,
   SEQUENCENUMBER 	BIGINT		NOT NULL,
   HIERARCHICALLEVEL 	BIGINT		NOT NULL,
   DIRECTION		VARCHAR(20) NOT NULL,
   RELATIONSHIPDEFINITIONID	BIGINT	NOT NULL,
   MODVERSION		BIGINT	NOT NULL,
   MODDATE   TIMESTAMP WITHOUT TIME ZONE    NOT NULL,
   ACTIVE 	CHAR(1)		NOT NULL
)
;
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.ID IS 'Unique ID for the table';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.IDX IS 'For the table.';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.PERSPECTIVEID IS 'ID of the perspective also serves as foreign key';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.PARENTID IS 'ID of the root repository, also serves as foreign key';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.CHILDID IS 'ID of the target repository.';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.SEQUENCENUMBER IS 'This represents the hierarchical order of repositories and relationships';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.DIRECTION IS 'This column indicates the direction of the relationship';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.RELATIONSHIPDEFINITIONID is 'ID of the relationship definition, also serves as foreign key';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.MODVERSION IS 'MODVERSION of the relationship definition. It is same version of Perspective';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.MODDATE IS 'The date of modification';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.ACTIVE IS 'A flag to indicate if the perspective relationship is active';
COMMENT ON COLUMN PERSPECTIVERELATIONSHIP.HIERARCHICALLEVEL IS 'A column to indicate the level of the node in perspective hierarchy tree';

-- DEFINTION OF PERSPECTIVEREPOATTRIBUTES

CREATE TABLE PERSPECTIVEREPOATTRIBUTES 
(	
   	ID 								BIGINT 		NOT NULL,
   	PERSPECTIVEID 					BIGINT		NOT NULL, 
	MODVERSION 						BIGINT		NOT NULL, 
	CATALOGID 						BIGINT		NOT NULL, 
	ATTRIBUTEID 					BIGINT		NOT NULL, 
	ACTIVE 							CHAR(1)		NOT NULL, 
	MODDATE 						TIMESTAMP WITHOUT TIME ZONE		NOT NULL, 
	RELATIONSHIPDEFINITIONID 		BIGINT		NOT NULL, 
	DIRECTION 						BIGINT 		NOT NULL
)
;

COMMENT ON COLUMN PERSPECTIVEREPOATTRIBUTES.ID IS 'Unique ID for the table';
COMMENT ON COLUMN PERSPECTIVEREPOATTRIBUTES.PERSPECTIVEID IS 'ID of the perspective, also serves as foreign key';
COMMENT ON COLUMN PERSPECTIVEREPOATTRIBUTES.CATALOGID IS 'ID of the repository for which attributes are defined, also serves as foreign key';
COMMENT ON COLUMN PERSPECTIVEREPOATTRIBUTES.ATTRIBUTEID IS 'attribute id of the attribute, also serves as foreign key';
COMMENT ON COLUMN PERSPECTIVEREPOATTRIBUTES.DIRECTION IS 'This column indicates the direction of the relationship';
COMMENT ON COLUMN PERSPECTIVEREPOATTRIBUTES.RELATIONSHIPDEFINITIONID IS 'ID of the relationship definition, also serves as foreign key';
COMMENT ON COLUMN PERSPECTIVEREPOATTRIBUTES.MODVERSION IS 'MODVERSION of the relationship definition. It is same version of Perspective';
COMMENT ON COLUMN PERSPECTIVEREPOATTRIBUTES.MODDATE IS 'The date of modification';
COMMENT ON COLUMN PERSPECTIVEREPOATTRIBUTES.ACTIVE IS 'A flag to indicate if the perspective relationship is active';

--
-- Definition for TABLE DUAL
--	
CREATE TABLE DUAL
(
  DUMMY VARCHAR(255)
)
;
-- Add comments to the columns
COMMENT ON COLUMN DUAL.DUMMY IS 'Dummy data';
COMMENT ON TABLE DUAL IS 'Dummy table';

-- ClassificationScheme Deploy table
CREATE TABLE CLASSIFICATIONSCHEMEDEPLOY
(
   ID BIGINT NOT null,
   EVENTID BIGINT,
   CATALOGID BIGINT,
   CLASSIFICATIONSCHEMEID BIGINT NOT NULL,
   XMLFRAGMENT BYTEA,
   MODMEMBERID BIGINT NOT NULL,
   MODDATE TIMESTAMP NOT NULL,
   MODVERSION BIGINT NOT NULL
)
;


COMMENT ON COLUMN CLASSIFICATIONSCHEMEDEPLOY.ID IS 'Classification scheme deploy id';
COMMENT ON COLUMN CLASSIFICATIONSCHEMEDEPLOY.EVENTID IS 'Event Id created at the time of deployment';
COMMENT ON COLUMN CLASSIFICATIONSCHEMEDEPLOY.CATALOGID IS 'Repository Id for which classification is deployed';
COMMENT ON COLUMN CLASSIFICATIONSCHEMEDEPLOY.CLASSIFICATIONSCHEMEID IS 'CLASSIFICATIONSCHEMEID for ClassificationScheme';
COMMENT ON COLUMN CLASSIFICATIONSCHEMEDEPLOY.XMLFRAGMENT IS 'XML blob for storing the classification xml ';
COMMENT ON COLUMN CLASSIFICATIONSCHEMEDEPLOY.MODMEMBERID IS 'user id who has deployed the classification scheme from mdm-studio';
COMMENT ON COLUMN CLASSIFICATIONSCHEMEDEPLOY.MODDATE IS 'classification scheme deployed date from mdm-studio';
COMMENT ON COLUMN CLASSIFICATIONSCHEMEDEPLOY.MODVERSION IS 'deployed classification scheme version from mdm-studio';

COMMENT ON table CLASSIFICATIONSCHEMEDEPLOY is 'Table hold classification scheme deployment information ' ;

--
-- Definition for TABLE CLASSIFICATIONLOGICALLEVEL:
--
CREATE TABLE CLASSIFICATIONLOGICALLEVEL
(
  CLASSIFICATIONSCHEMEID BIGINT NOT NULL,  
  NAME                 VARCHAR(80) NOT NULL,
  DESCRIPTION          VARCHAR(250),
  ACTIVE               CHAR(1) NOT NULL,
  POSITION             BIGINT NOT NULL,  
  CSVERSIONNUMBER      BIGINT NOT NULL  
)
;

COMMENT ON COLUMN CLASSIFICATIONLOGICALLEVEL.CLASSIFICATIONSCHEMEID IS 'ID derived from Classification Scheme ID';
COMMENT ON COLUMN CLASSIFICATIONLOGICALLEVEL.NAME IS 'Name of the Classification Logical Level';
COMMENT ON COLUMN CLASSIFICATIONLOGICALLEVEL.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CLASSIFICATIONLOGICALLEVEL.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CLASSIFICATIONLOGICALLEVEL.POSITION IS 'Position of the Classification Logical Level';
COMMENT ON COLUMN CLASSIFICATIONLOGICALLEVEL.CSVERSIONNUMBER IS 'Current Version of the entity';

--
-- Definition for TABLE CLASSIFICATIONINPUTMAP:
--
CREATE TABLE CLASSIFICATIONINPUTMAP
(
  ID                   BIGINT NOT NULL,
  SOURCEORGANIZATIONID BIGINT NOT NULL,
  CLASSIFICATIONSCHEMEID           BIGINT NOT NULL,
  NAME                 VARCHAR(80) NOT NULL,
  DESCRIPTION          VARCHAR(250),
  ACTIVE               CHAR(1) NOT NULL,
  MODMEMBERID          BIGINT NOT NULL,
  MODDATE              TIMESTAMP WITHOUT TIME ZONE    NOT NULL,
  MODVERSION           BIGINT NOT NULL  
)
;

COMMENT ON COLUMN CLASSIFICATIONINPUTMAP.ID IS 'ID derived from MQ_SEQUENCE_1';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAP.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAP.CLASSIFICATIONSCHEMEID IS 'ID derived from Classification Scheme ID';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAP.NAME IS 'Name of the Input Map';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAP.DESCRIPTION IS 'Entity Description';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAP.ACTIVE IS 'Whether this is used or retired.''Y'' or ''N''';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAP.MODMEMBERID IS 'Member who modified the Record';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAP.MODDATE IS 'Date of Modification';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAP.MODVERSION IS 'Current Version of the entity';

--
-- Definition for TABLE CLASSIFICATIONINPUTMAPLEVEL:
--

CREATE TABLE CLASSIFICATIONINPUTMAPLEVEL
(
  CLASSIFICATIONINPUTMAPID    BIGINT NOT NULL,
  LEVELPOSITION   BIGINT NOT NULL,
  CLASSIFICATIONINPUTMAPVERSION BIGINT DEFAULT 1 NOT NULL,
  SOURCEORGANIZATIONID BIGINT NOT NULL,
  CLASSIFICATIONSCHEMEID            BIGINT NOT NULL,
  SOURCEEXPRESSION     VARCHAR(4000),
  NULLIFBLANK          CHAR(1)
)
;

COMMENT ON COLUMN CLASSIFICATIONINPUTMAPLEVEL.CLASSIFICATIONINPUTMAPID IS 'Unique ID for Inputmap mapping';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAPLEVEL.LEVELPOSITION IS 'ID derived from Classification Level table';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAPLEVEL.SOURCEORGANIZATIONID IS 'Organization ID';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAPLEVEL.CLASSIFICATIONSCHEMEID IS 'ID derieved from Classification Table';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAPLEVEL.SOURCEEXPRESSION IS 'Mapping expression for a column';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAPLEVEL.NULLIFBLANK IS 'Boolean check';
COMMENT ON COLUMN CLASSIFICATIONINPUTMAPLEVEL.CLASSIFICATIONINPUTMAPVERSION IS 'Version of input map';

--
-- Definition for TABLE MDMINSTANCE:
--
CREATE TABLE MDMINSTANCE
(
	ID   VARCHAR(80) NOT NULL,
	NAME VARCHAR(80),
	DESCRIPTION  VARCHAR(256)
)
;

COMMENT ON COLUMN MDMINSTANCE.ID IS 'Unique ID for the MDM Instance';
COMMENT ON COLUMN MDMINSTANCE.NAME IS 'Name of the MDM Instnace';
COMMENT ON COLUMN MDMINSTANCE.DESCRIPTION IS 'Desciption of the MDM Instance';

CREATE TABLE ATTRIBUTEHISTORY
(
  CATALOGID      BIGINT NOT NULL,
  PROCESSLOGID   BIGINT NOT NULL,
  ATTRIBUTEID    BIGINT NOT NULL,
  PRODUCTKEYID   BIGINT NOT NULL,
  MODVERSION     BIGINT NOT NULL,
  SEQUENCE       BIGINT NOT NULL,                    -- to handle multi valued attributes
  SOURCEID       VARCHAR(80),
  STRVALUE       VARCHAR(4000),
  LONGVALUE      BIGINT,
  NUMVALUE       VARCHAR(80),
  NULLIND        CHAR(1),
  TIMESTAMPVALUE TIMESTAMP WITHOUT TIME ZONE,
  MODMEMBERID    BIGINT NOT NULL,
  MODDATE        TIMESTAMP WITHOUT TIME ZONE
  )
;

COMMENT ON COLUMN ATTRIBUTEHISTORY.CATALOGID IS 'Catalog ID, useful for partitioning';
COMMENT ON COLUMN ATTRIBUTEHISTORY.PROCESSLOGID IS 'ProcessLog ID ';
COMMENT ON COLUMN ATTRIBUTEHISTORY.ATTRIBUTEID IS 'Attribute ID for which history is stored';
COMMENT ON COLUMN ATTRIBUTEHISTORY.PRODUCTKEYID IS 'ID of the record';
COMMENT ON COLUMN ATTRIBUTEHISTORY.MODVERSION IS 'Version number of the record';
COMMENT ON COLUMN ATTRIBUTEHISTORY.SEQUENCE IS 'Sequence number of the history, for multi valued attribute';
COMMENT ON COLUMN ATTRIBUTEHISTORY.SOURCEID IS 'Source ID of the change source';
COMMENT ON COLUMN ATTRIBUTEHISTORY.STRVALUE IS 'Value of the attribute (file, string, boolean)';
COMMENT ON COLUMN ATTRIBUTEHISTORY.LONGVALUE IS 'Value of the attribute (long, int)';
COMMENT ON COLUMN ATTRIBUTEHISTORY.NUMVALUE IS 'Value for numeric data types';
COMMENT ON COLUMN ATTRIBUTEHISTORY.NULLIND IS 'True will mean that the value was null';
COMMENT ON COLUMN ATTRIBUTEHISTORY.TIMESTAMPVALUE IS 'Value for attribute (date and timestamp)';
COMMENT ON COLUMN ATTRIBUTEHISTORY.MODMEMBERID IS 'User who initiated the change';
COMMENT ON COLUMN ATTRIBUTEHISTORY.MODDATE IS 'Date of change';


CREATE TABLE METADATAXREF
(
  CATALOGID      BIGINT NOT NULL,
  MDMID          BIGINT NOT NULL,
  PRODUCTKEYID   BIGINT ,
  TYPE           BIGINT  NOT NULL
)
;

COMMENT ON COLUMN METADATAXREF.CATALOGID IS 'Catalog ID, useful for partitioning';
COMMENT ON COLUMN METADATAXREF.MDMID IS 'MDM ID of the meta data objbect';
COMMENT ON COLUMN METADATAXREF.PRODUCTKEYID IS 'ID of the record';
COMMENT ON COLUMN METADATAXREF.TYPE IS 'Object type';

CREATE TABLE SFSENTRY 
(
    PATH        VARCHAR(2048) NOT NULL,
    NAME        VARCHAR(255) NOT NULL,
    DATA        BYTEA NULL,
    LASTMOD     BIGINT NOT NULL,
    LENGTH      BIGINT NOT NULL,
    VERSION     BIGINT,
    KEYWORDS    VARCHAR(4000),
    FILETYPE    VARCHAR(255)
)
;

COMMENT ON COLUMN  SFSENTRY.PATH IS 'Full file path';
COMMENT ON COLUMN  SFSENTRY.NAME IS 'Name of the File';
COMMENT ON COLUMN  SFSENTRY.DATA IS 'Contents of the File';
COMMENT ON COLUMN  SFSENTRY.LASTMOD IS 'Last modified Date';
COMMENT ON COLUMN  SFSENTRY.LENGTH IS 'File Length';
COMMENT ON COLUMN  SFSENTRY.VERSION IS 'File Version';
COMMENT ON COLUMN  SFSENTRY.KEYWORDS IS 'File KeyWords';
COMMENT ON COLUMN  SFSENTRY.FILETYPE IS 'File Type';

CREATE TABLE FSENTRY
(
    PATH        VARCHAR(2048) NOT NULL, 
    NAME        VARCHAR(255) NOT NULL, 
    DATA        BYTEA NULL, 
    LASTMOD     BIGINT NOT NULL, 
    LENGTH      BIGINT NOT NULL
)

;
COMMENT ON COLUMN  FSENTRY.PATH IS 'Full file path';
COMMENT ON COLUMN  FSENTRY.NAME IS 'Name of the File';
COMMENT ON COLUMN  FSENTRY.DATA IS 'Contents of the File';
COMMENT ON COLUMN  FSENTRY.LASTMOD IS 'Last modified Date';
COMMENT ON COLUMN  FSENTRY.LENGTH IS 'File Length';


CREATE TABLE ATTRIBUTESCORE 
   (
   	ID BIGINT NOT NULL , 
	RUNDATE TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	CATALOGID BIGINT NOT NULL, 
	ATTRIBUTEID BIGINT NOT NULL, 
	CATALOGVERSIONNUMBER BIGINT NOT NULL, 
	TOTAL BIGINT NOT NULL, 
	NOVALUE BIGINT NOT NULL, 
	VALUE BIGINT NOT NULL, 
	VALID BIGINT NOT NULL, 
	VERIFIED BIGINT NOT NULL, 
	CATEGORY BIGINT DEFAULT -1, 
	CATEGORYVALUE VARCHAR(256) DEFAULT NULL
	)
	;
	 
 COMMENT ON COLUMN ATTRIBUTESCORE.ID IS 'Unique ID for this table';
 COMMENT ON COLUMN ATTRIBUTESCORE.RUNDATE IS 'Job run date';
 COMMENT ON COLUMN ATTRIBUTESCORE.CATALOGID IS 'ID of the catalog';
 COMMENT ON COLUMN ATTRIBUTESCORE.ATTRIBUTEID IS 'ID of the catalog attribute';
 COMMENT ON COLUMN ATTRIBUTESCORE.CATALOGVERSIONNUMBER IS 'Current Version of the Catalog';
 COMMENT ON COLUMN ATTRIBUTESCORE.TOTAL IS 'For specified attribute, it is total number of entries when job was executed';
 COMMENT ON COLUMN ATTRIBUTESCORE.NOVALUE IS 'For specified attribute, it is total number of entries which are undefined';
 COMMENT ON COLUMN ATTRIBUTESCORE.VALUE IS 'For specified attribute, it is total number of entries which are defined';
 COMMENT ON COLUMN ATTRIBUTESCORE.VALID IS 'For specified attribute, it is total number of entries which are validated';
 COMMENT ON COLUMN ATTRIBUTESCORE.VERIFIED IS 'For specified attribute, it is total number of entries which are verified';
 COMMENT ON COLUMN ATTRIBUTESCORE.CATEGORY IS 'Attribute id in which this quality attribute is categorized';
 COMMENT ON COLUMN ATTRIBUTESCORE.CATEGORYVALUE IS 'Attribute value in which this quality attribute is categorized';

 CREATE TABLE ATTRIBUTEPROPERTY
(	ATTRIBUTEID BIGINT NOT NULL, 
	CATALOGID BIGINT NOT NULL, 
	CATALOGVERSION BIGINT NOT NULL, 
	MODVERSION BIGINT, 
	NAME VARCHAR(80), 
	TYPE VARCHAR(80), 
	VALUE VARCHAR(256)
 )
;

COMMENT ON COLUMN  ATTRIBUTEPROPERTY.ATTRIBUTEID IS 'Unique ID for CatalogAttribute';
COMMENT ON COLUMN  ATTRIBUTEPROPERTY.CATALOGID IS 'Stores the Catalog ID';
COMMENT ON COLUMN  ATTRIBUTEPROPERTY.CATALOGVERSION IS 'Current Version of the Catalog';
COMMENT ON COLUMN  ATTRIBUTEPROPERTY.NAME IS 'Name of Attribute Property';
COMMENT ON COLUMN  ATTRIBUTEPROPERTY.TYPE IS 'Type of Attribute Property';
COMMENT ON COLUMN  ATTRIBUTEPROPERTY.VALUE IS 'Value of Attribute Property';

-- WORK ITEM ATTRIBUTES 
CREATE TABLE WORKITEMATTRIBUTE
(
	WORKITEMID BIGINT NOT NULL,
	CATALOGID BIGINT NOT NULL,	
	ATTRIBUTEID BIGINT NOT NULL, 
	VALUE VARCHAR(4000)
) 
;

COMMENT ON COLUMN  WORKITEMATTRIBUTE.WORKITEMID IS 'Work Item ID';
COMMENT ON COLUMN  WORKITEMATTRIBUTE.CATALOGID IS 'Catalog ID';
COMMENT ON COLUMN  WORKITEMATTRIBUTE.ATTRIBUTEID IS 'Unique ID for CatalogAttribute';
COMMENT ON COLUMN  WORKITEMATTRIBUTE.VALUE IS 'Value of Catalog Attribute';

